Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/dd8d262500b0432dac37f8a92a9c15bf-pulp.mps -sec 3600 -timeMode elapsed -branch -printingOptions all -solution /tmp/dd8d262500b0432dac37f8a92a9c15bf-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 161 COLUMNS
At line 18648 RHS
At line 18805 BOUNDS
At line 18884 ENDATA
Problem MODEL has 156 rows, 6162 columns and 12246 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
Option for timeMode changed from cpu to elapsed
Continuous objective value is 9.11229e+07 - 0.01 seconds
Cgl0004I processed model has 156 rows, 6162 columns (78 integer (78 of which binary)) and 12246 elements
Cbc0038I Initial state - 78 integers unsatisfied sum - 17.1201
Cbc0038I Pass   1: suminf.    0.42057 (1) obj. 1.45905e+09 iterations 77
Cbc0038I Solution found of 1.46143e+09
Cbc0038I Relaxing continuous gives 8.09992e+08
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 5929 continuous
Cbc0038I Full problem 156 rows 6162 columns, reduced to 148 rows 217 columns
Cbc0038I Mini branch and bound improved solution from 8.09992e+08 to 2.87386e+08 (0.05 seconds)
Cbc0038I Freeing continuous variables gives a solution of 2.73406e+08
Cbc0038I Round again with cutoff of 2.55178e+08
Cbc0038I Pass   2: suminf.    6.74234 (33) obj. 2.55178e+08 iterations 151
Cbc0038I Pass   3: suminf.    2.44871 (22) obj. 2.55178e+08 iterations 48
Cbc0038I Pass   4: suminf.    2.07903 (15) obj. 2.55178e+08 iterations 61
Cbc0038I Pass   5: suminf.    1.55081 (11) obj. 2.55178e+08 iterations 10
Cbc0038I Pass   6: suminf.    1.51069 (8) obj. 2.55178e+08 iterations 33
Cbc0038I Pass   7: suminf.    1.51069 (8) obj. 2.55178e+08 iterations 0
Cbc0038I Pass   8: suminf.    1.30062 (7) obj. 2.55178e+08 iterations 21
Cbc0038I Pass   9: suminf.    1.30062 (7) obj. 2.55178e+08 iterations 0
Cbc0038I Pass  10: suminf.    1.56752 (7) obj. 2.55178e+08 iterations 17
Cbc0038I Pass  11: suminf.    1.46667 (6) obj. 2.55178e+08 iterations 3
Cbc0038I Pass  12: suminf.    2.14600 (7) obj. 2.55178e+08 iterations 11
Cbc0038I Pass  13: suminf.    2.06552 (7) obj. 2.55178e+08 iterations 2
Cbc0038I Pass  14: suminf.    2.06552 (7) obj. 2.55178e+08 iterations 0
Cbc0038I Pass  15: suminf.    2.48609 (8) obj. 2.55178e+08 iterations 11
Cbc0038I Pass  16: suminf.    2.48609 (8) obj. 2.55178e+08 iterations 0
Cbc0038I Pass  17: suminf.    3.33937 (9) obj. 2.55178e+08 iterations 10
Cbc0038I Pass  18: suminf.    3.25491 (9) obj. 2.55178e+08 iterations 3
Cbc0038I Pass  19: suminf.    3.46571 (9) obj. 2.55178e+08 iterations 12
Cbc0038I Pass  20: suminf.    3.20591 (9) obj. 2.55178e+08 iterations 4
Cbc0038I Pass  21: suminf.    2.98249 (8) obj. 2.55178e+08 iterations 1
Cbc0038I Pass  22: suminf.    3.36138 (9) obj. 2.55178e+08 iterations 9
Cbc0038I Pass  23: suminf.    3.25491 (9) obj. 2.55178e+08 iterations 5
Cbc0038I Pass  24: suminf.    3.46571 (9) obj. 2.55178e+08 iterations 10
Cbc0038I Pass  25: suminf.    3.20591 (9) obj. 2.55178e+08 iterations 4
Cbc0038I Pass  26: suminf.    2.98249 (8) obj. 2.55178e+08 iterations 1
Cbc0038I Pass  27: suminf.    3.36138 (9) obj. 2.55178e+08 iterations 8
Cbc0038I Pass  28: suminf.    3.25491 (9) obj. 2.55178e+08 iterations 5
Cbc0038I Pass  29: suminf.    3.46571 (9) obj. 2.55178e+08 iterations 12
Cbc0038I Pass  30: suminf.    3.20591 (9) obj. 2.55178e+08 iterations 4
Cbc0038I Pass  31: suminf.    2.98249 (8) obj. 2.55178e+08 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 5933 continuous
Cbc0038I Full problem 156 rows 6162 columns, reduced to 100 rows 164 columns
Cbc0038I Mini branch and bound improved solution from 2.73406e+08 to 2.68602e+08 (0.15 seconds)
Cbc0038I Freeing continuous variables gives a solution of 2.643e+08
Cbc0038I Round again with cutoff of 2.22367e+08
Cbc0038I Pass  31: suminf.    7.64402 (40) obj. 2.22367e+08 iterations 10
Cbc0038I Pass  32: suminf.    2.72608 (23) obj. 2.22367e+08 iterations 70
Cbc0038I Pass  33: suminf.    2.18736 (21) obj. 2.22367e+08 iterations 13
Cbc0038I Pass  34: suminf.    2.57650 (19) obj. 2.22367e+08 iterations 45
Cbc0038I Pass  35: suminf.    2.58063 (18) obj. 2.22367e+08 iterations 1
Cbc0038I Pass  36: suminf.    5.81750 (22) obj. 2.22367e+08 iterations 40
Cbc0038I Pass  37: suminf.    5.27793 (21) obj. 2.22367e+08 iterations 1
Cbc0038I Pass  38: suminf.    5.08284 (21) obj. 2.22367e+08 iterations 3
Cbc0038I Pass  39: suminf.    6.24174 (22) obj. 2.22367e+08 iterations 27
Cbc0038I Pass  40: suminf.    6.15367 (22) obj. 2.22367e+08 iterations 4
Cbc0038I Pass  41: suminf.    5.97984 (22) obj. 2.22367e+08 iterations 9
Cbc0038I Pass  42: suminf.    5.74096 (23) obj. 2.22367e+08 iterations 4
Cbc0038I Pass  43: suminf.    5.74096 (23) obj. 2.22367e+08 iterations 0
Cbc0038I Pass  44: suminf.    6.15695 (22) obj. 2.22367e+08 iterations 11
Cbc0038I Pass  45: suminf.    5.91807 (23) obj. 2.22367e+08 iterations 4
Cbc0038I Pass  46: suminf.    5.91807 (23) obj. 2.22367e+08 iterations 0
Cbc0038I Pass  47: suminf.    5.92346 (23) obj. 2.22367e+08 iterations 1
Cbc0038I Pass  48: suminf.    4.66721 (22) obj. 2.22367e+08 iterations 55
Cbc0038I Pass  49: suminf.    4.18668 (23) obj. 2.22367e+08 iterations 7
Cbc0038I Pass  50: suminf.    5.42060 (22) obj. 2.22367e+08 iterations 33
Cbc0038I Pass  51: suminf.    5.38955 (22) obj. 2.22367e+08 iterations 1
Cbc0038I Pass  52: suminf.    5.24174 (21) obj. 2.22367e+08 iterations 16
Cbc0038I Pass  53: suminf.    5.06054 (22) obj. 2.22367e+08 iterations 6
Cbc0038I Pass  54: suminf.    5.06592 (22) obj. 2.22367e+08 iterations 1
Cbc0038I Pass  55: suminf.    4.49224 (22) obj. 2.22367e+08 iterations 65
Cbc0038I Pass  56: suminf.    4.20963 (22) obj. 2.22367e+08 iterations 4
Cbc0038I Pass  57: suminf.    4.20963 (22) obj. 2.22367e+08 iterations 0
Cbc0038I Pass  58: suminf.    5.59010 (22) obj. 2.22367e+08 iterations 24
Cbc0038I Pass  59: suminf.    4.96987 (22) obj. 2.22367e+08 iterations 4
Cbc0038I Pass  60: suminf.    4.66421 (22) obj. 2.22367e+08 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 5943 continuous
Cbc0038I Full problem 156 rows 6162 columns, reduced to 81 rows 139 columns
Cbc0038I Mini branch and bound did not improve solution (0.26 seconds)
Cbc0038I After 0.26 seconds - Feasibility pump exiting with objective of 2.643e+08 - took 0.21 seconds
Cbc0012I Integer solution of 2.6430024e+08 found by feasibility pump after 0 iterations and 0 nodes (0.26 seconds)
Cbc0012I Integer solution of 2.5510106e+08 found by DiveCoefficient after 227 iterations and 0 nodes (0.63 seconds)
Cbc0031I 96 added rows had average density of 134.90625
Cbc0013I At root node, 96 cuts changed objective from 91122854 to 2.4662944e+08 in 24 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 129 row cuts average 220.9 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2 row cuts average 312.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 111 row cuts average 131.4 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 2.5510106e+08 best solution, best possible 2.4662944e+08 (0.64 seconds)
Cbc0012I Integer solution of 2.4866187e+08 found by DiveCoefficient after 232 iterations and 1 nodes (0.65 seconds)
Cbc0012I Integer solution of 2.4865105e+08 found by DiveCoefficient after 273 iterations and 6 nodes (0.71 seconds)
Cbc0012I Integer solution of 2.4843181e+08 found by DiveCoefficient after 296 iterations and 7 nodes (0.73 seconds)
Cbc0012I Integer solution of 2.4836392e+08 found by DiveCoefficient after 321 iterations and 12 nodes (0.78 seconds)
Cbc0012I Integer solution of 2.4822473e+08 found by DiveCoefficient after 326 iterations and 13 nodes (0.80 seconds)
Cbc0001I Search completed - best objective 248224732.2152313, took 412 iterations and 20 nodes (0.89 seconds)
Cbc0032I Strong branching done 92 times (397 iterations), fathomed 7 nodes and fixed 5 variables
Cbc0035I Maximum depth 5, 23 variables fixed on reduced cost
Cuts at root node changed objective from 9.11229e+07 to 2.46629e+08
Probing was tried 24 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.083 seconds)
Gomory was tried 24 times and created 129 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
Knapsack was tried 24 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Clique was tried 24 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 24 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
FlowCover was tried 24 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.102 seconds)
TwoMirCuts was tried 43 times and created 112 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                248224732.21523130
Enumerated nodes:               20
Total iterations:               412
Time (CPU seconds):             0.82
Time (Wallclock seconds):       0.91

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.84   (Wallclock seconds):       0.92

