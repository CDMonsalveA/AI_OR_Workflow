Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/b6736cbe788a4d34b6f06d9e7d051a69-pulp.mps -sec 600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/b6736cbe788a4d34b6f06d9e7d051a69-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 431 COLUMNS
At line 227916 RHS
At line 228343 BOUNDS
At line 273926 ENDATA
Problem MODEL has 426 rows, 45582 columns and 90951 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.19091 - 0.03 seconds
Cgl0004I processed model has 426 rows, 45582 columns (45582 integer (45582 of which binary)) and 90951 elements
Cbc0038I Initial state - 213 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (213) obj. 1.19091 iterations 0
Cbc0038I Pass   2: suminf.    0.94366 (201) obj. 15.4147 iterations 12
Cbc0038I Pass   3: suminf.    0.81690 (174) obj. 47.4183 iterations 27
Cbc0038I Pass   4: suminf.    0.68545 (146) obj. 80.6072 iterations 28
Cbc0038I Pass   5: suminf.    0.63380 (135) obj. 93.6457 iterations 11
Cbc0038I Pass   6: suminf.    0.51174 (109) obj. 124.464 iterations 26
Cbc0038I Pass   7: suminf.    0.40376 (86) obj. 151.726 iterations 23
Cbc0038I Pass   8: suminf.    0.29577 (63) obj. 178.989 iterations 23
Cbc0038I Pass   9: suminf.    0.16432 (35) obj. 212.178 iterations 28
Cbc0038I Pass  10: suminf.    0.02817 (6) obj. 246.552 iterations 29
Cbc0038I Solution found of 253.664
Cbc0038I Before mini branch and bound, 45369 integers at bound fixed and 0 continuous
Cbc0038I Full problem 426 rows 45582 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.82 seconds)
Cbc0038I Round again with cutoff of 228.416
Cbc0038I Pass  11: suminf.    1.00000 (213) obj. 1.19091 iterations 0
Cbc0038I Pass  12: suminf.    0.87324 (186) obj. 33.1945 iterations 27
Cbc0038I Pass  13: suminf.    0.74648 (159) obj. 65.1981 iterations 27
Cbc0038I Pass  14: suminf.    0.64319 (137) obj. 91.2751 iterations 22
Cbc0038I Pass  15: suminf.    0.57746 (123) obj. 107.87 iterations 14
Cbc0038I Pass  16: suminf.    0.46009 (98) obj. 137.502 iterations 25
Cbc0038I Pass  17: suminf.    0.36620 (78) obj. 161.209 iterations 20
Cbc0038I Pass  18: suminf.    0.31455 (67) obj. 174.247 iterations 11
Cbc0038I Pass  19: suminf.    0.17840 (38) obj. 208.622 iterations 29
Cbc0038I Pass  20: suminf.    0.39719 (22) obj. 228.416 iterations 18
Cbc0038I Pass  21: suminf.    0.39719 (22) obj. 228.416 iterations 28
Cbc0038I Pass  22: suminf.    0.39719 (22) obj. 228.416 iterations 0
Cbc0038I Pass  23: suminf.    0.39719 (22) obj. 228.416 iterations 10
Cbc0038I Pass  24: suminf.    0.39719 (22) obj. 228.416 iterations 0
Cbc0038I Pass  25: suminf.    0.39719 (22) obj. 228.416 iterations 1
Cbc0038I Pass  26: suminf.    0.39719 (22) obj. 228.416 iterations 0
Cbc0038I Pass  27: suminf.    0.39719 (22) obj. 228.416 iterations 1
Cbc0038I Pass  28: suminf.    0.42126 (22) obj. 228.416 iterations 51
Cbc0038I Pass  29: suminf.    0.42126 (22) obj. 228.416 iterations 14
Cbc0038I Pass  30: suminf.    0.43065 (22) obj. 228.416 iterations 14
Cbc0038I Pass  31: suminf.    0.43065 (22) obj. 228.416 iterations 0
Cbc0038I Pass  32: suminf.    0.42126 (22) obj. 228.416 iterations 9
Cbc0038I Pass  33: suminf.    0.42126 (22) obj. 228.416 iterations 0
Cbc0038I Pass  34: suminf.    0.43065 (22) obj. 228.416 iterations 9
Cbc0038I Pass  35: suminf.    0.43065 (22) obj. 228.416 iterations 0
Cbc0038I Pass  36: suminf.    0.43065 (22) obj. 228.416 iterations 13
Cbc0038I Pass  37: suminf.    0.43065 (22) obj. 228.416 iterations 0
Cbc0038I Pass  38: suminf.    0.42126 (22) obj. 228.416 iterations 13
Cbc0038I Pass  39: suminf.    0.42126 (22) obj. 228.416 iterations 0
Cbc0038I Pass  40: suminf.    0.43065 (22) obj. 228.416 iterations 11
Cbc0038I Rounding solution of 235.817 is better than previous of 253.664

Cbc0038I Before mini branch and bound, 45333 integers at bound fixed and 0 continuous
Cbc0038I Full problem 426 rows 45582 columns, reduced to 14 rows 28 columns
Cbc0038I Mini branch and bound improved solution from 235.817 to 235.706 (1.28 seconds)
Cbc0038I Round again with cutoff of 182.971
Cbc0038I Pass  40: suminf.    1.00000 (213) obj. 1.19091 iterations 0
Cbc0038I Pass  41: suminf.    0.94836 (202) obj. 14.2294 iterations 11
Cbc0038I Pass  42: suminf.    0.81221 (173) obj. 48.6036 iterations 29
Cbc0038I Pass  43: suminf.    0.71831 (153) obj. 72.31 iterations 20
Cbc0038I Pass  44: suminf.    0.58216 (124) obj. 106.684 iterations 29
Cbc0038I Pass  45: suminf.    0.44601 (95) obj. 141.058 iterations 29
Cbc0038I Pass  46: suminf.    0.33803 (72) obj. 168.321 iterations 23
Cbc0038I Pass  47: suminf.    0.63999 (60) obj. 182.971 iterations 13
Cbc0038I Pass  48: suminf.    0.28169 (60) obj. 182.545 iterations 1
Cbc0038I Pass  49: suminf.    0.63999 (60) obj. 182.971 iterations 42
Cbc0038I Pass  50: suminf.    0.28169 (60) obj. 182.545 iterations 1
Cbc0038I Pass  51: suminf.    0.63999 (60) obj. 182.971 iterations 4
Cbc0038I Pass  52: suminf.    0.28169 (60) obj. 182.545 iterations 1
Cbc0038I Pass  53: suminf.    0.63999 (60) obj. 182.971 iterations 1
Cbc0038I Pass  54: suminf.    0.97099 (55) obj. 182.971 iterations 113
Cbc0038I Pass  55: suminf.    0.31925 (53) obj. 182.934 iterations 131
Cbc0038I Pass  56: suminf.    0.35081 (52) obj. 182.971 iterations 126
Cbc0038I Pass  57: suminf.    0.30047 (52) obj. 182.911 iterations 110
Cbc0038I Pass  58: suminf.    0.35081 (52) obj. 182.971 iterations 115
Cbc0038I Pass  59: suminf.    0.63917 (54) obj. 182.971 iterations 183
Cbc0038I Pass  60: suminf.    0.36116 (53) obj. 182.971 iterations 162
Cbc0038I Pass  61: suminf.    0.31490 (51) obj. 182.971 iterations 82
Cbc0038I Pass  62: suminf.    0.30047 (51) obj. 182.954 iterations 172
Cbc0038I Pass  63: suminf.    0.31490 (51) obj. 182.971 iterations 183
Cbc0038I Pass  64: suminf.    0.52405 (50) obj. 182.971 iterations 229
Cbc0038I Pass  65: suminf.    0.29108 (49) obj. 182.694 iterations 256
Cbc0038I Pass  66: suminf.    0.52405 (49) obj. 182.971 iterations 195
Cbc0038I Pass  67: suminf.    0.29577 (49) obj. 182.699 iterations 193
Cbc0038I Pass  68: suminf.    0.52405 (49) obj. 182.971 iterations 193
Cbc0038I Pass  69: suminf.    0.51197 (45) obj. 182.971 iterations 201
Cbc0038I Rounding solution of 188.302 is better than previous of 235.706

Cbc0038I Before mini branch and bound, 45058 integers at bound fixed and 0 continuous
Cbc0038I Full problem 426 rows 45582 columns, reduced to 161 rows 335 columns
Cbc0038I Mini branch and bound improved solution from 188.302 to 152.173 (1.92 seconds)
Cbc0038I Round again with cutoff of 106.878
Cbc0038I Pass  69: suminf.    1.00000 (213) obj. 1.19091 iterations 0
Cbc0038I Pass  70: suminf.    0.86385 (184) obj. 35.5651 iterations 29
Cbc0038I Pass  71: suminf.    0.74648 (159) obj. 65.1981 iterations 25
Cbc0038I Pass  72: suminf.    0.62441 (133) obj. 96.0163 iterations 26
Cbc0038I Pass  73: suminf.    0.74499 (124) obj. 106.878 iterations 27
Cbc0038I Pass  74: suminf.    0.58216 (124) obj. 106.684 iterations 1
Cbc0038I Pass  75: suminf.    0.74499 (124) obj. 106.878 iterations 10
Cbc0038I Pass  76: suminf.    0.58216 (124) obj. 106.684 iterations 1
Cbc0038I Pass  77: suminf.    0.74499 (124) obj. 106.878 iterations 10
Cbc0038I Pass  78: suminf.    0.58216 (124) obj. 106.684 iterations 1
Cbc0038I Pass  79: suminf.    0.74499 (124) obj. 106.878 iterations 1
Cbc0038I Pass  80: suminf.    0.69972 (109) obj. 106.878 iterations 46
Cbc0038I Pass  81: suminf.    0.69972 (109) obj. 106.878 iterations 25
Cbc0038I Pass  82: suminf.    0.66216 (108) obj. 106.878 iterations 17
Cbc0038I Pass  83: suminf.    0.66216 (108) obj. 106.878 iterations 2
Cbc0038I Pass  84: suminf.    0.66216 (108) obj. 106.878 iterations 13
Cbc0038I Pass  85: suminf.    0.66216 (108) obj. 106.878 iterations 3
Cbc0038I Pass  86: suminf.    0.66216 (108) obj. 106.878 iterations 15
Cbc0038I Pass  87: suminf.    0.66216 (108) obj. 106.878 iterations 2
Cbc0038I Pass  88: suminf.    0.66216 (108) obj. 106.878 iterations 13
Cbc0038I Pass  89: suminf.    0.66216 (108) obj. 106.878 iterations 3
Cbc0038I Pass  90: suminf.    0.66216 (108) obj. 106.878 iterations 15
Cbc0038I Pass  91: suminf.    0.66216 (108) obj. 106.878 iterations 3
Cbc0038I Pass  92: suminf.    0.66216 (108) obj. 106.878 iterations 9
Cbc0038I Pass  93: suminf.    0.66216 (108) obj. 106.878 iterations 3
Cbc0038I Pass  94: suminf.    0.66216 (108) obj. 106.878 iterations 8
Cbc0038I Pass  95: suminf.    0.60672 (100) obj. 106.878 iterations 177
Cbc0038I Pass  96: suminf.    0.53052 (100) obj. 106.787 iterations 112
Cbc0038I Pass  97: suminf.    0.60672 (99) obj. 106.878 iterations 92
Cbc0038I Pass  98: suminf.    0.52582 (99) obj. 106.782 iterations 83
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45265 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (2.44 seconds)
Cbc0038I After 2.44 seconds - Feasibility pump exiting with objective of 152.173 - took 1.85 seconds
Cbc0012I Integer solution of 152.17265 found by feasibility pump after 0 iterations and 0 nodes (2.44 seconds)
Cbc0012I Integer solution of 18.262936 found by DiveCoefficient after 183710 iterations and 0 nodes (215.41 seconds)
Cbc0031I 3186 added rows had average density of 7.3546767
Cbc0013I At root node, 3186 cuts changed objective from 1.1909091 to 18.262936 in 50 passes
Cbc0014I Cut generator 0 (Probing) - 3652 row cuts average 2.2 elements, 0 column cuts (1384 active)  in 8.815 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 92 row cuts average 105.8 elements, 0 column cuts (0 active)  in 2.882 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 14238 row cuts average 2.0 elements, 0 column cuts (0 active)  in 1.243 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.298 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 4035 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.879 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 970 row cuts average 257.0 elements, 0 column cuts (0 active)  in 27.643 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 0.87913585, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.80826116, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.73553014, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.6575439, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.58070207, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.50438905, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.42660189, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.34474206, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.26736093, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.18787813, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.10960102, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.03211689, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 9.059906e-06 locked, 9.5367432e-07 waiting for locks
Cbc0001I Search completed - best objective 18.26293589412687, took 183710 iterations and 0 nodes (216.57 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.19091 to 18.2629
Probing was tried 650 times and created 47476 cuts of which 17992 were active after adding rounds of cuts (114.598 seconds)
Gomory was tried 650 times and created 1196 cuts of which 0 were active after adding rounds of cuts (37.464 seconds)
Knapsack was tried 650 times and created 185094 cuts of which 0 were active after adding rounds of cuts (16.160 seconds)
Clique was tried 650 times and created 0 cuts of which 0 were active after adding rounds of cuts (3.872 seconds)
MixedIntegerRounding2 was tried 650 times and created 52455 cuts of which 0 were active after adding rounds of cuts (11.430 seconds)
FlowCover was tried 650 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.628 seconds)
TwoMirCuts was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
ZeroHalf was tried 650 times and created 12610 cuts of which 0 were active after adding rounds of cuts (359.360 seconds)

Result - Optimal solution found

Objective value:                18.26293589
Enumerated nodes:               0
Total iterations:               183710
Time (CPU seconds):             216.09
Time (Wallclock seconds):       216.63

Option for printingOptions changed from normal to all
Total time (CPU seconds):       216.22   (Wallclock seconds):       216.76

