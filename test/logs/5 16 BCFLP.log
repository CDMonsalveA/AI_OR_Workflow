Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/tesis/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/347511ba152d4b8997ea1cb64f7781cd-pulp.mps -sec 25200 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/347511ba152d4b8997ea1cb64f7781cd-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 229 COLUMNS
At line 38198 RHS
At line 38423 BOUNDS
At line 38536 ENDATA
Problem MODEL has 224 rows, 12656 columns and 25200 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 25200
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2.40783e+09 - 0.04 seconds
Cgl0004I processed model has 224 rows, 12656 columns (112 integer (112 of which binary)) and 25200 elements
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.722588
Cbc0038I Pass   1: suminf.    0.23724 (1) obj. 2.40807e+09 iterations 27
Cbc0038I Solution found of 2.7021e+09
Cbc0038I Relaxing continuous gives 2.70181e+09
Cbc0038I Before mini branch and bound, 110 integers at bound fixed and 12421 continuous
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I Round again with cutoff of 2.67241e+09
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.23724 (1) obj. 2.40807e+09 iterations 0
Cbc0038I Pass   3: suminf.    0.07639 (1) obj. 2.67241e+09 iterations 164
Cbc0038I Pass   4: suminf.    0.23724 (1) obj. 2.41837e+09 iterations 234
Cbc0038I Pass   5: suminf.    0.30175 (2) obj. 2.67241e+09 iterations 443
Cbc0038I Pass   6: suminf.    0.08164 (1) obj. 2.67241e+09 iterations 77
Cbc0038I Pass   7: suminf.    0.15529 (1) obj. 2.65276e+09 iterations 214
Cbc0038I Pass   8: suminf.    0.53099 (2) obj. 2.67241e+09 iterations 430
Cbc0038I Pass   9: suminf.    0.08242 (1) obj. 2.67241e+09 iterations 135
Cbc0038I Pass  10: suminf.    0.15529 (1) obj. 2.65314e+09 iterations 213
Cbc0038I Pass  11: suminf.    1.07656 (3) obj. 2.67241e+09 iterations 438
Cbc0038I Pass  12: suminf.    0.54401 (2) obj. 2.67241e+09 iterations 60
Cbc0038I Pass  13: suminf.    0.07699 (1) obj. 2.67241e+09 iterations 61
Cbc0038I Pass  14: suminf.    0.20693 (1) obj. 2.63361e+09 iterations 225
Cbc0038I Pass  15: suminf.    0.54305 (2) obj. 2.67241e+09 iterations 334
Cbc0038I Pass  16: suminf.    0.36274 (3) obj. 2.67241e+09 iterations 99
Cbc0038I Pass  17: suminf.    0.08242 (1) obj. 2.67241e+09 iterations 90
Cbc0038I Pass  18: suminf.    0.15529 (1) obj. 2.65321e+09 iterations 210
Cbc0038I Pass  19: suminf.    0.54624 (2) obj. 2.67241e+09 iterations 442
Cbc0038I Pass  20: suminf.    0.07604 (1) obj. 2.67241e+09 iterations 117
Cbc0038I Pass  21: suminf.    0.20693 (1) obj. 2.63291e+09 iterations 217
Cbc0038I Pass  22: suminf.    0.80168 (4) obj. 2.67241e+09 iterations 392
Cbc0038I Pass  23: suminf.    0.07645 (1) obj. 2.67241e+09 iterations 73
Cbc0038I Pass  24: suminf.    0.20693 (1) obj. 2.63329e+09 iterations 214
Cbc0038I Pass  25: suminf.    0.54759 (2) obj. 2.67241e+09 iterations 368
Cbc0038I Pass  26: suminf.    0.07600 (1) obj. 2.67241e+09 iterations 88
Cbc0038I Pass  27: suminf.    0.20693 (1) obj. 2.63367e+09 iterations 247
Cbc0038I Pass  28: suminf.    1.25746 (5) obj. 2.67241e+09 iterations 448
Cbc0038I Pass  29: suminf.    1.07603 (3) obj. 2.67241e+09 iterations 41
Cbc0038I Pass  30: suminf.    0.23724 (1) obj. 2.41971e+09 iterations 332
Cbc0038I Pass  31: suminf.    0.23724 (1) obj. 2.41971e+09 iterations 0
Cbc0038I Rounding solution of 2.70171e+09 is better than previous of 2.70181e+09

Cbc0038I Before mini branch and bound, 96 integers at bound fixed and 11993 continuous
Cbc0038I Full problem 224 rows 12656 columns, reduced to 129 rows 565 columns
Cbc0038I Mini branch and bound improved solution from 2.70171e+09 to 2.70156e+09 (0.63 seconds)
Cbc0038I Freeing continuous variables gives a solution of 2.70156e+09
Cbc0038I Round again with cutoff of 2.6195e+09
Cbc0038I Reduced cost fixing fixed 105 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.23724 (1) obj. 2.40807e+09 iterations 0
Cbc0038I Pass  32: suminf.    0.21400 (1) obj. 2.6195e+09 iterations 56
Cbc0038I Pass  33: suminf.    0.23724 (1) obj. 2.41773e+09 iterations 219
Cbc0038I Pass  34: suminf.    0.23724 (1) obj. 2.41773e+09 iterations 0
Cbc0038I Pass  35: suminf.    0.23724 (1) obj. 2.41773e+09 iterations 0
Cbc0038I Pass  36: suminf.    0.23724 (1) obj. 2.41835e+09 iterations 18
Cbc0038I Pass  37: suminf.    0.23724 (1) obj. 2.41835e+09 iterations 0
Cbc0038I Pass  38: suminf.    0.23724 (1) obj. 2.41835e+09 iterations 0
Cbc0038I Pass  39: suminf.    0.42757 (1) obj. 2.49096e+09 iterations 32
Cbc0038I Pass  40: suminf.    0.21599 (1) obj. 2.6195e+09 iterations 313
Cbc0038I Pass  41: suminf.    0.23724 (1) obj. 2.41876e+09 iterations 217
Cbc0038I Pass  42: suminf.    0.21793 (1) obj. 2.6195e+09 iterations 373
Cbc0038I Pass  43: suminf.    0.23724 (1) obj. 2.41848e+09 iterations 177
Cbc0038I Pass  44: suminf.    0.23724 (1) obj. 2.41896e+09 iterations 23
Cbc0038I Pass  45: suminf.    0.23724 (1) obj. 2.41896e+09 iterations 0
Cbc0038I Pass  46: suminf.    0.21484 (1) obj. 2.6195e+09 iterations 305
Cbc0038I Pass  47: suminf.    0.22725 (2) obj. 2.6195e+09 iterations 110
Cbc0038I Pass  48: suminf.    0.22725 (2) obj. 2.6195e+09 iterations 0
Cbc0038I Pass  49: suminf.    0.23724 (1) obj. 2.41878e+09 iterations 269
Cbc0038I Pass  50: suminf.    0.23724 (1) obj. 2.41878e+09 iterations 0
Cbc0038I Pass  51: suminf.    0.23724 (1) obj. 2.41878e+09 iterations 0
Cbc0038I Pass  52: suminf.    0.23724 (1) obj. 2.41878e+09 iterations 0
Cbc0038I Pass  53: suminf.    0.23724 (1) obj. 2.41768e+09 iterations 26
Cbc0038I Pass  54: suminf.    0.23724 (1) obj. 2.41768e+09 iterations 0
Cbc0038I Pass  55: suminf.    0.21599 (1) obj. 2.6195e+09 iterations 336
Cbc0038I Pass  56: suminf.    0.21599 (1) obj. 2.6195e+09 iterations 0
Cbc0038I Pass  57: suminf.    0.22814 (2) obj. 2.6195e+09 iterations 81
Cbc0038I Pass  58: suminf.    0.22814 (2) obj. 2.6195e+09 iterations 0
Cbc0038I Pass  59: suminf.    0.23724 (1) obj. 2.41829e+09 iterations 229
Cbc0038I Pass  60: suminf.    0.42757 (1) obj. 2.49148e+09 iterations 30
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 105 integers at bound fixed and 12091 continuous
Cbc0038I Full problem 224 rows 12656 columns, reduced to 103 rows 442 columns
Cbc0038I Mini branch and bound did not improve solution (0.90 seconds)
Cbc0038I After 0.90 seconds - Feasibility pump exiting with objective of 2.70156e+09 - took 0.81 seconds
Cbc0012I Integer solution of 2.7015614e+09 found by feasibility pump after 0 iterations and 0 nodes (0.90 seconds)
Cbc0038I Full problem 224 rows 12656 columns, reduced to 120 rows 899 columns
Cbc0013I At root node, 0 cuts changed objective from 2.4078309e+09 to 2.4078309e+09 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 2.7015614e+09 best solution, best possible 2.4078309e+09 (1.04 seconds)
Cbc0012I Integer solution of 2.701487e+09 found by DiveCoefficient after 223 iterations and 6 nodes (1.47 seconds)
Cbc0012I Integer solution of 2.7014681e+09 found by DiveCoefficient after 351 iterations and 6 nodes (1.59 seconds)
Cbc0012I Integer solution of 2.7014681e+09 found by heuristic after 628 iterations and 10 nodes (1.59 seconds)
Cbc0010I After 100 nodes, 2 on tree, 2.7014681e+09 best solution, best possible 2.5232558e+09 (13.52 seconds)
Cbc0010I After 201 nodes, 2 on tree, 2.7014681e+09 best solution, best possible 2.5233788e+09 (17.56 seconds)
Cbc0030I Thread 0 used 66 times,  waiting to start 5.1956415,  289 locks, 0.0062389374 locked, 0.0024313927 waiting for locks
Cbc0030I Thread 1 used 61 times,  waiting to start 3.5369658,  285 locks, 0.0072526932 locked, 0.0053627491 waiting for locks
Cbc0030I Thread 2 used 25 times,  waiting to start 9.9754932,  118 locks, 0.0020737648 locked, 0.0042569637 waiting for locks
Cbc0030I Thread 3 used 11 times,  waiting to start 6.357022,  53 locks, 0.00087332726 locked, 0.00064539909 waiting for locks
Cbc0030I Thread 4 used 21 times,  waiting to start 8.9984531,  97 locks, 0.0035383701 locked, 0.0019385815 waiting for locks
Cbc0030I Thread 5 used 9 times,  waiting to start 9.7373669,  42 locks, 0.00072288513 locked, 0.00077271461 waiting for locks
Cbc0030I Thread 6 used 10 times,  waiting to start 15.079463,  44 locks, 0.0007956028 locked, 0.0026373863 waiting for locks
Cbc0030I Thread 7 used 3 times,  waiting to start 13.795992,  14 locks, 0.00027370453 locked, 0.00013566017 waiting for locks
Cbc0030I Thread 8 used 6 times,  waiting to start 16.836972,  25 locks, 0.00052404404 locked, 0.00042867661 waiting for locks
Cbc0030I Thread 9 used 2 times,  waiting to start 16.924297,  8 locks, 0.00016021729 locked, 9.5367432e-07 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 16.941222,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 16.934402,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 2.824909 waiting for threads,  446 locks, 0.0021648407 locked, 0.011467934 waiting for locks
Cbc0001I Search completed - best objective 2701468070.799379, took 16173 iterations and 214 nodes (17.98 seconds)
Cbc0032I Strong branching done 784 times (24859 iterations), fathomed 11 nodes and fixed 179 variables
Cbc0035I Maximum depth 26, 434 variables fixed on reduced cost
Cuts at root node changed objective from 2.40783e+09 to 2.40783e+09
Probing was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.035 seconds)
Gomory was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Knapsack was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Clique was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
FlowCover was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.028 seconds)
TwoMirCuts was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2701468070.79937887
Enumerated nodes:               214
Total iterations:               16173
Time (CPU seconds):             62.25
Time (Wallclock seconds):       18.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       62.27   (Wallclock seconds):       18.03

