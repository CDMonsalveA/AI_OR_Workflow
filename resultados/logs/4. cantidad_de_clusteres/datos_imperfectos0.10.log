Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/b9efbfc022034cb99854ff4982911e54-pulp.mps -sec 600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/b9efbfc022034cb99854ff4982911e54-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 229 COLUMNS
At line 63286 RHS
At line 63511 BOUNDS
At line 76168 ENDATA
Problem MODEL has 224 rows, 12656 columns and 25200 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.1 - 0.01 seconds
Cgl0004I processed model has 224 rows, 12656 columns (12656 integer (12656 of which binary)) and 25200 elements
Cbc0038I Initial state - 112 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (112) obj. 1.1 iterations 0
Cbc0038I Pass   2: suminf.    0.74107 (83) obj. 32.7152 iterations 29
Cbc0038I Pass   3: suminf.    0.50000 (56) obj. 62.15 iterations 27
Cbc0038I Pass   4: suminf.    0.40179 (45) obj. 74.142 iterations 11
Cbc0038I Pass   5: suminf.    0.20536 (23) obj. 98.1259 iterations 22
Cbc0038I Pass   6: suminf.    0.07143 (8) obj. 114.479 iterations 15
Cbc0038I Solution found of 123.2
Cbc0038I Before mini branch and bound, 12544 integers at bound fixed and 0 continuous
Cbc0038I Full problem 224 rows 12656 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I Round again with cutoff of 110.99
Cbc0038I Pass   7: suminf.    1.00000 (112) obj. 1.1 iterations 0
Cbc0038I Pass   8: suminf.    0.87500 (98) obj. 16.3625 iterations 14
Cbc0038I Pass   9: suminf.    0.64286 (72) obj. 44.7071 iterations 26
Cbc0038I Pass  10: suminf.    0.51786 (58) obj. 59.9696 iterations 14
Cbc0038I Pass  11: suminf.    0.35714 (40) obj. 79.5929 iterations 18
Cbc0038I Pass  12: suminf.    0.11607 (13) obj. 109.028 iterations 27
Cbc0038I Pass  13: suminf.    0.29644 (12) obj. 110.99 iterations 23
Cbc0038I Pass  14: suminf.    0.29644 (12) obj. 110.99 iterations 0
Cbc0038I Pass  15: suminf.    0.29644 (12) obj. 110.99 iterations 1
Cbc0038I Pass  16: suminf.    0.29644 (12) obj. 110.99 iterations 0
Cbc0038I Pass  17: suminf.    0.29644 (12) obj. 110.99 iterations 1
Cbc0038I Pass  18: suminf.    0.48207 (9) obj. 110.99 iterations 24
Cbc0038I Pass  19: suminf.    0.08929 (9) obj. 110.558 iterations 20
Cbc0038I Pass  20: suminf.    0.48207 (9) obj. 110.99 iterations 19
Cbc0038I Pass  21: suminf.    0.14515 (12) obj. 110.99 iterations 43
Cbc0038I Pass  22: suminf.    0.08929 (10) obj. 110.987 iterations 42
Cbc0038I Pass  23: suminf.    0.09243 (10) obj. 110.99 iterations 47
Cbc0038I Pass  24: suminf.    0.08929 (10) obj. 110.987 iterations 41
Cbc0038I Pass  25: suminf.    0.47188 (13) obj. 110.99 iterations 87
Cbc0038I Pass  26: suminf.    0.16071 (11) obj. 110.957 iterations 97
Cbc0038I Pass  27: suminf.    0.19078 (10) obj. 110.99 iterations 100
Cbc0038I Pass  28: suminf.    0.14286 (10) obj. 110.937 iterations 92
Cbc0038I Pass  29: suminf.    0.19078 (10) obj. 110.99 iterations 95
Cbc0038I Pass  30: suminf.    0.66598 (14) obj. 110.99 iterations 113
Cbc0038I Pass  31: suminf.    0.17857 (12) obj. 110.958 iterations 134
Cbc0038I Pass  32: suminf.    0.20738 (12) obj. 110.99 iterations 131
Cbc0038I Pass  33: suminf.    0.16964 (12) obj. 110.948 iterations 120
Cbc0038I Pass  34: suminf.    1.02636 (10) obj. 110.99 iterations 130
Cbc0038I Pass  35: suminf.    0.27017 (9) obj. 110.99 iterations 118
Cbc0038I Pass  36: suminf.    0.28802 (9) obj. 110.99 iterations 57
Cbc0038I Rounding solution of 87.6619 is better than previous of 123.2

Cbc0038I Before mini branch and bound, 12344 integers at bound fixed and 0 continuous
Cbc0038I Full problem 224 rows 12656 columns, reduced to 107 rows 225 columns
Cbc0038I Mini branch and bound improved solution from 87.6619 to 70.4835 (0.39 seconds)
Cbc0038I Round again with cutoff of 56.6068
Cbc0038I Pass  36: suminf.    1.00000 (112) obj. 1.1 iterations 0
Cbc0038I Pass  37: suminf.    0.90179 (101) obj. 13.092 iterations 11
Cbc0038I Pass  38: suminf.    0.78571 (88) obj. 27.2643 iterations 13
Cbc0038I Pass  39: suminf.    0.61607 (69) obj. 47.9777 iterations 19
Cbc0038I Pass  40: suminf.    0.62860 (62) obj. 56.6068 iterations 31
Cbc0038I Pass  41: suminf.    0.62860 (62) obj. 56.6068 iterations 0
Cbc0038I Pass  42: suminf.    0.62860 (62) obj. 56.6068 iterations 2
Cbc0038I Pass  43: suminf.    0.62860 (62) obj. 56.6068 iterations 0
Cbc0038I Pass  44: suminf.    0.62860 (62) obj. 56.6068 iterations 1
Cbc0038I Pass  45: suminf.    0.62860 (62) obj. 56.6068 iterations 0
Cbc0038I Pass  46: suminf.    0.62860 (62) obj. 56.6068 iterations 1
Cbc0038I Pass  47: suminf.    0.62860 (62) obj. 56.6068 iterations 0
Cbc0038I Pass  48: suminf.    0.62860 (62) obj. 56.6068 iterations 1
Cbc0038I Pass  49: suminf.    0.62860 (62) obj. 56.6068 iterations 0
Cbc0038I Pass  50: suminf.    0.62860 (62) obj. 56.6068 iterations 1
Cbc0038I Pass  51: suminf.    0.62860 (62) obj. 56.6068 iterations 0
Cbc0038I Pass  52: suminf.    0.62860 (62) obj. 56.6068 iterations 1
Cbc0038I Pass  53: suminf.    1.01171 (60) obj. 56.6068 iterations 8
Cbc0038I Pass  54: suminf.    1.01171 (60) obj. 56.6068 iterations 3
Cbc0038I Pass  55: suminf.    0.99385 (60) obj. 56.6068 iterations 4
Cbc0038I Pass  56: suminf.    0.99385 (60) obj. 56.6068 iterations 0
Cbc0038I Pass  57: suminf.    0.97599 (59) obj. 56.6068 iterations 3
Cbc0038I Pass  58: suminf.    0.97599 (59) obj. 56.6068 iterations 1
Cbc0038I Pass  59: suminf.    0.97599 (59) obj. 56.6068 iterations 2
Cbc0038I Pass  60: suminf.    0.97599 (59) obj. 56.6068 iterations 1
Cbc0038I Pass  61: suminf.    0.97599 (59) obj. 56.6068 iterations 3
Cbc0038I Pass  62: suminf.    0.97599 (59) obj. 56.6068 iterations 1
Cbc0038I Pass  63: suminf.    0.97599 (59) obj. 56.6068 iterations 4
Cbc0038I Pass  64: suminf.    0.97599 (59) obj. 56.6068 iterations 1
Cbc0038I Pass  65: suminf.    0.97599 (59) obj. 56.6068 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12534 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.53 seconds)
Cbc0038I After 0.53 seconds - Feasibility pump exiting with objective of 70.4835 - took 0.41 seconds
Cbc0012I Integer solution of 70.483452 found by feasibility pump after 0 iterations and 0 nodes (0.53 seconds)
Cbc0012I Integer solution of 12.087223 found by DiveCoefficient after 42604 iterations and 0 nodes (20.60 seconds)
Cbc0031I 1528 added rows had average density of 13.123037
Cbc0013I At root node, 1528 cuts changed objective from 1.1 to 12.087223 in 40 passes
Cbc0014I Cut generator 0 (Probing) - 2451 row cuts average 2.5 elements, 0 column cuts (873 active)  in 1.689 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 273 row cuts average 181.7 elements, 0 column cuts (0 active)  in 1.184 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 4793 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.234 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1809 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.207 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 310 row cuts average 151.6 elements, 0 column cuts (0 active)  in 0.198 seconds - new frequency is -100
Cbc0030I Thread 0 used 0 times,  waiting to start 0.25454402, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.23375702, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.21284914, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.191998, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.17138195, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.15058208, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.12841296, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.10742784, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.084694862, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.060570002, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.037045002, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.013814926, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 6.9141388e-06 locked, 9.5367432e-07 waiting for locks
Cbc0001I Search completed - best objective 12.08722335213936, took 42604 iterations and 0 nodes (20.96 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.1 to 12.0872
Probing was tried 520 times and created 31863 cuts of which 11349 were active after adding rounds of cuts (21.954 seconds)
Gomory was tried 520 times and created 3549 cuts of which 0 were active after adding rounds of cuts (15.392 seconds)
Knapsack was tried 520 times and created 62309 cuts of which 0 were active after adding rounds of cuts (3.039 seconds)
Clique was tried 520 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.880 seconds)
MixedIntegerRounding2 was tried 520 times and created 23517 cuts of which 0 were active after adding rounds of cuts (2.685 seconds)
FlowCover was tried 520 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.195 seconds)
TwoMirCuts was tried 520 times and created 4030 cuts of which 0 were active after adding rounds of cuts (2.568 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Optimal solution found

Objective value:                12.08722335
Enumerated nodes:               0
Total iterations:               42604
Time (CPU seconds):             20.89
Time (Wallclock seconds):       20.98

Option for printingOptions changed from normal to all
Total time (CPU seconds):       20.92   (Wallclock seconds):       21.02

