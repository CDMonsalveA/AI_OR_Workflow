Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/eda989e686ac4530a5fda3d9ca7f8ef9-pulp.mps -sec 3600 -timeMode elapsed -branch -printingOptions all -solution /tmp/eda989e686ac4530a5fda3d9ca7f8ef9-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 25 COLUMNS
At line 356 RHS
At line 377 BOUNDS
At line 388 ENDATA
Problem MODEL has 20 rows, 110 columns and 210 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2.03845e+06 - 0.00 seconds
Cgl0004I processed model has 20 rows, 110 columns (10 integer (10 of which binary)) and 210 elements
Cbc0038I Initial state - 10 integers unsatisfied sum - 0.655198
Cbc0038I Pass   1: suminf.    0.34480 (1) obj. 4.65948e+07 iterations 9
Cbc0038I Solution found of 4.76676e+07
Cbc0038I Relaxing continuous gives 4.76676e+07
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 81 continuous
Cbc0038I Full problem 20 rows 110 columns, reduced to 19 rows 27 columns
Cbc0038I Mini branch and bound improved solution from 4.76676e+07 to 2.67572e+07 (0.01 seconds)
Cbc0038I Freeing continuous variables gives a solution of 2.24996e+07
Cbc0038I Round again with cutoff of 2.04534e+07
Cbc0038I Pass   2: suminf.    0.59743 (3) obj. 2.04534e+07 iterations 3
Cbc0038I Pass   3: suminf.    0.10803 (5) obj. 2.04534e+07 iterations 7
Cbc0038I Pass   4: suminf.    0.39345 (4) obj. 2.04534e+07 iterations 12
Cbc0038I Pass   5: suminf.    0.57413 (4) obj. 2.04534e+07 iterations 5
Cbc0038I Pass   6: suminf.    0.20515 (4) obj. 2.04534e+07 iterations 1
Cbc0038I Pass   7: suminf.    0.11008 (3) obj. 2.04534e+07 iterations 5
Cbc0038I Pass   8: suminf.    0.57413 (4) obj. 2.04534e+07 iterations 6
Cbc0038I Pass   9: suminf.    0.17564 (4) obj. 2.04534e+07 iterations 1
Cbc0038I Pass  10: suminf.    0.40622 (6) obj. 2.04534e+07 iterations 8
Cbc0038I Pass  11: suminf.    0.48794 (5) obj. 2.04534e+07 iterations 5
Cbc0038I Pass  12: suminf.    0.57413 (4) obj. 2.04534e+07 iterations 7
Cbc0038I Pass  13: suminf.    0.38318 (5) obj. 2.04534e+07 iterations 3
Cbc0038I Pass  14: suminf.    0.57413 (4) obj. 2.04534e+07 iterations 4
Cbc0038I Pass  15: suminf.    0.20515 (4) obj. 2.04534e+07 iterations 1
Cbc0038I Pass  16: suminf.    0.12448 (3) obj. 2.04534e+07 iterations 3
Cbc0038I Pass  17: suminf.    0.57413 (4) obj. 2.04534e+07 iterations 4
Cbc0038I Pass  18: suminf.    0.57413 (4) obj. 2.04534e+07 iterations 2
Cbc0038I Pass  19: suminf.    0.57413 (4) obj. 2.04534e+07 iterations 0
Cbc0038I Pass  20: suminf.    0.15469 (4) obj. 2.04534e+07 iterations 2
Cbc0038I Pass  21: suminf.    0.12814 (3) obj. 2.04534e+07 iterations 5
Cbc0038I Pass  22: suminf.    0.57413 (4) obj. 2.04534e+07 iterations 6
Cbc0038I Pass  23: suminf.    0.13865 (4) obj. 2.04534e+07 iterations 1
Cbc0038I Pass  24: suminf.    0.57413 (4) obj. 2.04534e+07 iterations 4
Cbc0038I Pass  25: suminf.    0.20515 (4) obj. 2.04534e+07 iterations 1
Cbc0038I Pass  26: suminf.    0.44651 (5) obj. 2.04534e+07 iterations 3
Cbc0038I Pass  27: suminf.    0.44651 (5) obj. 2.04534e+07 iterations 0
Cbc0038I Pass  28: suminf.    0.44651 (5) obj. 2.04534e+07 iterations 0
Cbc0038I Pass  29: suminf.    0.32756 (7) obj. 2.04534e+07 iterations 2
Cbc0038I Pass  30: suminf.    0.32756 (7) obj. 2.04534e+07 iterations 0
Cbc0038I Pass  31: suminf.    0.47341 (6) obj. 2.04534e+07 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 70 continuous
Cbc0038I Full problem 20 rows 110 columns, reduced to 20 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 2.24996e+07 - took 0.02 seconds
Cbc0012I Integer solution of 22499553 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of 20912547 found by DiveCoefficient after 11 iterations and 0 nodes (0.02 seconds)
Cbc0031I 11 added rows had average density of 11.818182
Cbc0013I At root node, 11 cuts changed objective from 2038453.1 to 20602852 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 12 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 12 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective 20912547.47079765, took 12 iterations and 0 nodes (0.02 seconds)
Cbc0032I Strong branching done 2 times (4 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 2.03845e+06 to 2.20386e+07
Probing was tried 3 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 3 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 3 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                20912547.47079765
Enumerated nodes:               0
Total iterations:               12
Time (CPU seconds):             0.02
Time (Wallclock seconds):       0.02

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

