Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/tesis/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/b38f193554b7436994a648cddb7218fb-pulp.mps -sec 3600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/b38f193554b7436994a648cddb7218fb-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 25925 COLUMNS
At line 154246 RHS
At line 180167 BOUNDS
At line 205928 ENDATA
Problem MODEL has 25920 rows, 25760 columns and 102400 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 5.20145e+07 - 1.33 seconds
Cgl0004I processed model has 25920 rows, 25760 columns (160 integer (160 of which binary)) and 102400 elements
Cbc0038I Initial state - 51 integers unsatisfied sum - 10.2621
Cbc0038I Pass   1: (25.01 seconds) suminf.    1.04347 (10) obj. 1.59508e+08 iterations 34125
Cbc0038I Pass   2: (25.05 seconds) suminf.    0.73960 (9) obj. 1.71188e+08 iterations 1
Cbc0038I Solution found of 2.40481e+08
Cbc0038I Relaxing continuous gives 1.48635e+08
Cbc0038I Before mini branch and bound, 103 integers at bound fixed and 23146 continuous
Cbc0038I Full problem 25920 rows 25760 columns, reduced to 2671 rows 2511 columns
Cbc0038I Mini branch and bound did not improve solution (39.46 seconds)
Cbc0038I Round again with cutoff of 1.39758e+08
Cbc0038I Pass   3: (49.66 seconds) suminf.    1.07761 (10) obj. 1.39758e+08 iterations 3975
Cbc0038I Pass   4: (50.96 seconds) suminf.    0.80658 (14) obj. 1.39758e+08 iterations 3065
Cbc0038I Pass   5: (58.08 seconds) suminf.    0.60973 (6) obj. 1.39758e+08 iterations 23169
Cbc0038I Pass   6: (58.55 seconds) suminf.    0.52770 (9) obj. 1.39758e+08 iterations 3097
Cbc0038I Pass   7: (59.59 seconds) suminf.    1.15275 (9) obj. 1.39758e+08 iterations 4155
Cbc0038I Pass   8: (59.61 seconds) suminf.    1.15275 (9) obj. 1.39758e+08 iterations 0
Cbc0038I Pass   9: (60.33 seconds) suminf.    0.35045 (6) obj. 1.39758e+08 iterations 3756
Cbc0038I Pass  10: (60.93 seconds) suminf.    0.76447 (4) obj. 1.39758e+08 iterations 4031
Cbc0038I Pass  11: (61.77 seconds) suminf.    0.32375 (3) obj. 1.39758e+08 iterations 6523
Cbc0038I Pass  12: (62.44 seconds) suminf.    0.76447 (4) obj. 1.39758e+08 iterations 4659
Cbc0038I Pass  13: (63.58 seconds) suminf.    6.19688 (22) obj. 1.39758e+08 iterations 4346
Cbc0038I Pass  14: (64.43 seconds) suminf.    0.44241 (4) obj. 1.39758e+08 iterations 4473
Cbc0038I Pass  15: (64.59 seconds) suminf.    0.68918 (5) obj. 1.39758e+08 iterations 1060
Cbc0038I Pass  16: (65.44 seconds) suminf.    7.57088 (26) obj. 1.39758e+08 iterations 3710
Cbc0038I Pass  17: (65.93 seconds) suminf.    0.67692 (12) obj. 1.39758e+08 iterations 2200
Cbc0038I Pass  18: (66.52 seconds) suminf.    3.27070 (14) obj. 1.39758e+08 iterations 2006
Cbc0038I Pass  19: (66.84 seconds) suminf.    0.73102 (9) obj. 1.39758e+08 iterations 1679
Cbc0038I Pass  20: (67.31 seconds) suminf.    2.82288 (14) obj. 1.39758e+08 iterations 1631
Cbc0038I Pass  21: (67.54 seconds) suminf.    0.70980 (9) obj. 1.39758e+08 iterations 777
Cbc0038I Pass  22: (68.13 seconds) suminf.    2.83825 (14) obj. 1.39758e+08 iterations 2494
Cbc0038I Pass  23: (69.17 seconds) suminf.    6.16976 (24) obj. 1.39758e+08 iterations 3789
Cbc0038I Pass  24: (69.68 seconds) suminf.    0.60261 (8) obj. 1.39758e+08 iterations 2236
Cbc0038I Pass  25: (69.95 seconds) suminf.    3.41557 (15) obj. 1.39758e+08 iterations 1502
Cbc0038I Pass  26: (70.25 seconds) suminf.    1.35490 (14) obj. 1.39758e+08 iterations 1288
Cbc0038I Pass  27: (71.00 seconds) suminf.    0.93417 (10) obj. 1.39758e+08 iterations 3276
Cbc0038I Pass  28: (71.31 seconds) suminf.    0.43992 (7) obj. 1.39758e+08 iterations 1663
Cbc0038I Pass  29: (71.58 seconds) suminf.    2.24203 (8) obj. 1.39758e+08 iterations 1078
Cbc0038I Pass  30: (71.75 seconds) suminf.    0.73645 (9) obj. 1.39758e+08 iterations 805
Cbc0038I Pass  31: (72.19 seconds) suminf.    2.97994 (14) obj. 1.39758e+08 iterations 1730
Cbc0038I Pass  32: (72.40 seconds) suminf.    0.65428 (9) obj. 1.39758e+08 iterations 661
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 21385 continuous
Cbc0038I Full problem 25920 rows 25760 columns, reduced to 4487 rows 4327 columns
Cbc0038I Mini branch and bound did not improve solution (75.73 seconds)
Cbc0038I After 75.73 seconds - Feasibility pump exiting with objective of 1.48635e+08 - took 68.33 seconds
Cbc0012I Integer solution of 1.4863498e+08 found by feasibility pump after 0 iterations and 0 nodes (75.74 seconds)
Cbc0038I Full problem 25920 rows 25760 columns, reduced to 9337 rows 9177 columns
Cbc0031I 891 added rows had average density of 20.338945
Cbc0013I At root node, 891 cuts changed objective from 59863063 to 98194306 in 50 passes
Cbc0014I Cut generator 0 (Probing) - 1329 row cuts average 2.0 elements, 0 column cuts (472 active)  in 0.323 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 201 row cuts average 160.3 elements, 0 column cuts (0 active)  in 0.495 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.388 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1548 row cuts average 26.5 elements, 0 column cuts (0 active)  in 0.314 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 39 row cuts average 17.6 elements, 0 column cuts (0 active)  in 0.336 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 39 row cuts average 48.6 elements, 0 column cuts (0 active)  in 0.353 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1.4863498e+08 best solution, best possible 98194306 (157.49 seconds)
Cbc0010I After 100 nodes, 49 on tree, 1.4863498e+08 best solution, best possible 99236746 (390.90 seconds)
Cbc0010I After 200 nodes, 99 on tree, 1.4863498e+08 best solution, best possible 99236746 (646.30 seconds)
Cbc0010I After 300 nodes, 149 on tree, 1.4863498e+08 best solution, best possible 99236746 (799.12 seconds)
Cbc0010I After 400 nodes, 199 on tree, 1.4863498e+08 best solution, best possible 99236746 (994.83 seconds)
Cbc0010I After 500 nodes, 248 on tree, 1.4863498e+08 best solution, best possible 99236746 (1230.74 seconds)
Cbc0010I After 600 nodes, 298 on tree, 1.4863498e+08 best solution, best possible 99236746 (1440.54 seconds)
Cbc0010I After 700 nodes, 349 on tree, 1.4863498e+08 best solution, best possible 99236746 (1617.84 seconds)
Cbc0010I After 800 nodes, 400 on tree, 1.4863498e+08 best solution, best possible 99236746 (1782.74 seconds)
Cbc0010I After 900 nodes, 449 on tree, 1.4863498e+08 best solution, best possible 99236746 (1928.70 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 1.4863498e+08 best solution, best possible 99236746 (2071.57 seconds)
Cbc0010I After 1100 nodes, 548 on tree, 1.4863498e+08 best solution, best possible 99236746 (2233.71 seconds)
Cbc0010I After 1200 nodes, 598 on tree, 1.4863498e+08 best solution, best possible 99236746 (2422.74 seconds)
Cbc0010I After 1300 nodes, 649 on tree, 1.4863498e+08 best solution, best possible 99236746 (2568.05 seconds)
Cbc0010I After 1400 nodes, 699 on tree, 1.4863498e+08 best solution, best possible 99236746 (2731.81 seconds)
Cbc0010I After 1500 nodes, 747 on tree, 1.4863498e+08 best solution, best possible 99236746 (2877.52 seconds)
Cbc0010I After 1600 nodes, 798 on tree, 1.4863498e+08 best solution, best possible 99236746 (3018.77 seconds)
Cbc0010I After 1700 nodes, 847 on tree, 1.4863498e+08 best solution, best possible 99236746 (3168.91 seconds)
Cbc0010I After 1800 nodes, 898 on tree, 1.4863498e+08 best solution, best possible 99236746 (3324.33 seconds)
Cbc0010I After 1900 nodes, 949 on tree, 1.4863498e+08 best solution, best possible 99236746 (3440.53 seconds)
Cbc0010I After 2000 nodes, 998 on tree, 1.4863498e+08 best solution, best possible 99236746 (3513.65 seconds)
Cbc0030I Thread 0 used 196 times,  waiting to start 3.4032803,  1865 locks, 1.2505887 locked, 0.031304598 waiting for locks
Cbc0030I Thread 1 used 202 times,  waiting to start 4.9569075,  1921 locks, 1.3899028 locked, 0.021141291 waiting for locks
Cbc0030I Thread 2 used 193 times,  waiting to start 11.149882,  1812 locks, 1.2538958 locked, 0.045721531 waiting for locks
Cbc0030I Thread 3 used 181 times,  waiting to start 14.722308,  1729 locks, 1.1788824 locked, 0.023115396 waiting for locks
Cbc0030I Thread 4 used 161 times,  waiting to start 20.95593,  1552 locks, 1.0799913 locked, 0.024899006 waiting for locks
Cbc0030I Thread 5 used 153 times,  waiting to start 20.727049,  1476 locks, 1.0165455 locked, 0.018032789 waiting for locks
Cbc0030I Thread 6 used 179 times,  waiting to start 16.713741,  1706 locks, 1.2545691 locked, 0.027244806 waiting for locks
Cbc0030I Thread 7 used 172 times,  waiting to start 25.861158,  1641 locks, 1.1835089 locked, 0.0230968 waiting for locks
Cbc0030I Thread 8 used 176 times,  waiting to start 29.978705,  1672 locks, 1.2288125 locked, 0.024328709 waiting for locks
Cbc0030I Thread 9 used 162 times,  waiting to start 31.154901,  1563 locks, 1.1544604 locked, 0.014057636 waiting for locks
Cbc0030I Thread 10 used 167 times,  waiting to start 30.803985,  1611 locks, 1.1161494 locked, 0.019226551 waiting for locks
Cbc0030I Thread 11 used 163 times,  waiting to start 39.287779,  1569 locks, 1.0932603 locked, 0.03692627 waiting for locks
Cbc0030I Main thread 3428.1287 waiting for threads,  4236 locks, 0.016419888 locked, 0.024536848 waiting for locks
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1.4863498e+08 (best possible 99236746), took 7419403 iterations and 2094 nodes (3598.82 seconds)
Cbc0032I Strong branching done 4218 times (348190 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 84, 0 variables fixed on reduced cost
Cuts at root node changed objective from 5.98631e+07 to 9.81943e+07
Probing was tried 8176 times and created 23085 cuts of which 6136 were active after adding rounds of cuts (1282.640 seconds)
Gomory was tried 8176 times and created 2613 cuts of which 0 were active after adding rounds of cuts (2300.384 seconds)
Knapsack was tried 650 times and created 0 cuts of which 0 were active after adding rounds of cuts (5.047 seconds)
Clique was tried 650 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.162 seconds)
MixedIntegerRounding2 was tried 8176 times and created 149702 cuts of which 0 were active after adding rounds of cuts (2194.261 seconds)
FlowCover was tried 650 times and created 507 cuts of which 0 were active after adding rounds of cuts (4.374 seconds)
TwoMirCuts was tried 650 times and created 507 cuts of which 0 were active after adding rounds of cuts (4.585 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Stopped on time limit

Objective value:                148634981.04811385
Lower bound:                    99236746.121
Gap:                            0.50
Enumerated nodes:               2094
Total iterations:               7419403
Time (CPU seconds):             40303.64
Time (Wallclock seconds):       3600.09

Option for printingOptions changed from normal to all
Total time (CPU seconds):       40303.76   (Wallclock seconds):       3600.21

