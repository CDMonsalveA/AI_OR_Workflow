Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/fa27c34751cb4d8583f653302e761a8c-pulp.mps -sec 3600 -timeMode elapsed -branch -printingOptions all -solution /tmp/fa27c34751cb4d8583f653302e761a8c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 123 COLUMNS
At line 10744 RHS
At line 10863 BOUNDS
At line 10923 ENDATA
Problem MODEL has 118 rows, 3540 columns and 7021 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2.83618e+07 - 0.00 seconds
Cgl0004I processed model has 118 rows, 3540 columns (59 integer (59 of which binary)) and 7021 elements
Cbc0038I Initial state - 59 integers unsatisfied sum - 8.55567
Cbc0038I Pass   1: suminf.    0.08951 (1) obj. 9.09808e+08 iterations 58
Cbc0038I Pass   2: suminf.    0.08951 (1) obj. 9.09808e+08 iterations 0
Cbc0038I Solution found of 9.12641e+08
Cbc0038I Relaxing continuous gives 4.92902e+08
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 3364 continuous
Cbc0038I Full problem 118 rows 3540 columns, reduced to 112 rows 164 columns
Cbc0038I Mini branch and bound improved solution from 4.92902e+08 to 1.82117e+08 (0.03 seconds)
Cbc0038I Freeing continuous variables gives a solution of 1.76999e+08
Cbc0038I Round again with cutoff of 1.62135e+08
Cbc0038I Pass   3: suminf.    4.34701 (27) obj. 1.62135e+08 iterations 133
Cbc0038I Pass   4: suminf.    3.97687 (27) obj. 1.62135e+08 iterations 5
Cbc0038I Pass   5: suminf.    0.17787 (3) obj. 1.62135e+08 iterations 73
Cbc0038I Pass   6: suminf.    0.15540 (2) obj. 1.62135e+08 iterations 15
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. 1.62135e+08 iterations 15
Cbc0038I Solution found of 1.62135e+08
Cbc0038I Relaxing continuous gives 1.5955e+08
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 3364 continuous
Cbc0038I Full problem 118 rows 3540 columns, reduced to 71 rows 126 columns
Cbc0038I Mini branch and bound improved solution from 1.5955e+08 to 1.54798e+08 (0.09 seconds)
Cbc0038I Freeing continuous variables gives a solution of 1.50838e+08
Cbc0038I Round again with cutoff of 1.26343e+08
Cbc0038I Pass   8: suminf.    5.18943 (31) obj. 1.26343e+08 iterations 4
Cbc0038I Pass   9: suminf.    4.58149 (31) obj. 1.26343e+08 iterations 7
Cbc0038I Pass  10: suminf.    1.17675 (14) obj. 1.26343e+08 iterations 61
Cbc0038I Pass  11: suminf.    2.00776 (20) obj. 1.26343e+08 iterations 57
Cbc0038I Pass  12: suminf.    4.04854 (23) obj. 1.26343e+08 iterations 33
Cbc0038I Pass  13: suminf.    3.60367 (20) obj. 1.26343e+08 iterations 8
Cbc0038I Pass  14: suminf.    4.06393 (20) obj. 1.26343e+08 iterations 4
Cbc0038I Pass  15: suminf.    4.06393 (20) obj. 1.26343e+08 iterations 0
Cbc0038I Pass  16: suminf.    4.13001 (19) obj. 1.26343e+08 iterations 9
Cbc0038I Pass  17: suminf.    4.13001 (19) obj. 1.26343e+08 iterations 0
Cbc0038I Pass  18: suminf.    4.11932 (19) obj. 1.26343e+08 iterations 6
Cbc0038I Pass  19: suminf.    4.11932 (19) obj. 1.26343e+08 iterations 0
Cbc0038I Pass  20: suminf.    3.42711 (19) obj. 1.26343e+08 iterations 5
Cbc0038I Pass  21: suminf.    3.42711 (19) obj. 1.26343e+08 iterations 0
Cbc0038I Pass  22: suminf.    4.11932 (19) obj. 1.26343e+08 iterations 6
Cbc0038I Pass  23: suminf.    3.44562 (19) obj. 1.26343e+08 iterations 22
Cbc0038I Pass  24: suminf.    3.14224 (19) obj. 1.26343e+08 iterations 2
Cbc0038I Pass  25: suminf.    4.14580 (20) obj. 1.26343e+08 iterations 11
Cbc0038I Pass  26: suminf.    4.13001 (19) obj. 1.26343e+08 iterations 1
Cbc0038I Pass  27: suminf.    3.42711 (19) obj. 1.26343e+08 iterations 4
Cbc0038I Pass  28: suminf.    3.42711 (19) obj. 1.26343e+08 iterations 0
Cbc0038I Pass  29: suminf.    4.13001 (19) obj. 1.26343e+08 iterations 4
Cbc0038I Pass  30: suminf.    3.78145 (20) obj. 1.26343e+08 iterations 17
Cbc0038I Pass  31: suminf.    3.77619 (19) obj. 1.26343e+08 iterations 1
Cbc0038I Pass  32: suminf.    3.39274 (19) obj. 1.26343e+08 iterations 8
Cbc0038I Pass  33: suminf.    3.39274 (19) obj. 1.26343e+08 iterations 0
Cbc0038I Pass  34: suminf.    3.39274 (19) obj. 1.26343e+08 iterations 0
Cbc0038I Pass  35: suminf.    3.08208 (21) obj. 1.26343e+08 iterations 43
Cbc0038I Pass  36: suminf.    3.08208 (21) obj. 1.26343e+08 iterations 0
Cbc0038I Pass  37: suminf.    4.38519 (21) obj. 1.26343e+08 iterations 22
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 3372 continuous
Cbc0038I Full problem 118 rows 3540 columns, reduced to 81 rows 126 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of 1.50838e+08 - took 0.14 seconds
Cbc0012I Integer solution of 1.5083768e+08 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0012I Integer solution of 1.4027595e+08 found by DiveCoefficient after 181 iterations and 0 nodes (0.29 seconds)
Cbc0031I 81 added rows had average density of 100.60494
Cbc0013I At root node, 81 cuts changed objective from 28361777 to 1.3057137e+08 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 3 row cuts average 59.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 80 row cuts average 90.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 6 row cuts average 177.7 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 108 row cuts average 110.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1.4027595e+08 best solution, best possible 1.3057137e+08 (0.30 seconds)
Cbc0012I Integer solution of 1.3568722e+08 found by DiveCoefficient after 186 iterations and 1 nodes (0.31 seconds)
Cbc0012I Integer solution of 1.3528816e+08 found by DiveCoefficient after 197 iterations and 3 nodes (0.34 seconds)
Cbc0012I Integer solution of 1.3491118e+08 found by DiveCoefficient after 214 iterations and 4 nodes (0.36 seconds)
Cbc0012I Integer solution of 1.3484633e+08 found by DiveCoefficient after 218 iterations and 5 nodes (0.38 seconds)
Cbc0016I Integer solution of 1.3409028e+08 found by strong branching after 244 iterations and 9 nodes (0.41 seconds)
Cbc0016I Integer solution of 1.3406558e+08 found by strong branching after 245 iterations and 9 nodes (0.42 seconds)
Cbc0012I Integer solution of 1.3400828e+08 found by DiveCoefficient after 294 iterations and 15 nodes (0.44 seconds)
Cbc0016I Integer solution of 1.3398359e+08 found by strong branching after 326 iterations and 15 nodes (0.46 seconds)
Cbc0012I Integer solution of 1.336019e+08 found by DiveCoefficient after 330 iterations and 16 nodes (0.47 seconds)
Cbc0001I Search completed - best objective 133601902.8908195, took 399 iterations and 20 nodes (0.52 seconds)
Cbc0032I Strong branching done 182 times (807 iterations), fathomed 6 nodes and fixed 4 variables
Cbc0035I Maximum depth 8, 6 variables fixed on reduced cost
Cuts at root node changed objective from 2.83618e+07 to 1.30571e+08
Probing was tried 13 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.028 seconds)
Gomory was tried 13 times and created 80 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Knapsack was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 13 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
FlowCover was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
TwoMirCuts was tried 32 times and created 109 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                133601902.89081955
Enumerated nodes:               20
Total iterations:               399
Time (CPU seconds):             0.48
Time (Wallclock seconds):       0.53

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.49   (Wallclock seconds):       0.53

