Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/tesis/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/8289eea5a5a240b8b3245c6f2d1af3ec-pulp.mps -sec 3600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/8289eea5a5a240b8b3245c6f2d1af3ec-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 4904 COLUMNS
At line 28848 RHS
At line 33748 BOUNDS
At line 38579 ENDATA
Problem MODEL has 4899 rows, 4830 columns and 19044 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 4.20306e+07 - 0.03 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 69 strengthened rows, 0 substitutions
Cgl0004I processed model has 4899 rows, 4830 columns (69 integer (69 of which binary)) and 19113 elements
Cbc0038I Initial state - 10 integers unsatisfied sum - 0.082319
Cbc0038I Pass   1: (0.34 seconds) suminf.    0.00000 (0) obj. 4.36095e+07 iterations 590
Cbc0038I Solution found of 4.36095e+07
Cbc0038I Relaxing continuous gives 4.36087e+07
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 4614 continuous
Cbc0038I Full problem 4899 rows 4830 columns, reduced to 154 rows 119 columns
Cbc0038I Mini branch and bound did not improve solution (0.37 seconds)
Cbc0038I Round again with cutoff of 4.36083e+07
Cbc0038I Reduced cost fixing fixed 17 variables on major pass 2
Cbc0038I Pass   2: (0.52 seconds) suminf.    0.00372 (1) obj. 4.36083e+07 iterations 477
Cbc0038I Pass   3: (0.56 seconds) suminf.    0.01260 (1) obj. 4.36083e+07 iterations 479
Cbc0038I Pass   4: (0.64 seconds) suminf.    0.14088 (11) obj. 4.36083e+07 iterations 643
Cbc0038I Pass   5: (0.72 seconds) suminf.    0.01534 (6) obj. 4.36083e+07 iterations 804
Cbc0038I Pass   6: (0.74 seconds) suminf.    0.00771 (5) obj. 4.36083e+07 iterations 187
Cbc0038I Pass   7: (0.75 seconds) suminf.    0.00372 (1) obj. 4.36083e+07 iterations 110
Cbc0038I Pass   8: (0.85 seconds) suminf.    0.02227 (3) obj. 4.36083e+07 iterations 878
Cbc0038I Pass   9: (0.91 seconds) suminf.    0.00771 (5) obj. 4.36083e+07 iterations 490
Cbc0038I Pass  10: (0.99 seconds) suminf.    0.20993 (10) obj. 4.36083e+07 iterations 837
Cbc0038I Pass  11: (1.11 seconds) suminf.    0.04967 (5) obj. 4.36083e+07 iterations 1309
Cbc0038I Pass  12: (1.16 seconds) suminf.    0.05008 (5) obj. 4.36083e+07 iterations 432
Cbc0038I Pass  13: (1.20 seconds) suminf.    0.02227 (3) obj. 4.36083e+07 iterations 381
Cbc0038I Pass  14: (1.21 seconds) suminf.    0.16012 (8) obj. 4.36083e+07 iterations 100
Cbc0038I Pass  15: (1.26 seconds) suminf.    0.01512 (6) obj. 4.36083e+07 iterations 594
Cbc0038I Pass  16: (1.31 seconds) suminf.    0.07429 (5) obj. 4.36083e+07 iterations 513
Cbc0038I Pass  17: (1.41 seconds) suminf.    0.01617 (8) obj. 4.36083e+07 iterations 631
Cbc0038I Pass  18: (1.47 seconds) suminf.    0.05306 (7) obj. 4.36083e+07 iterations 575
Cbc0038I Pass  19: (1.49 seconds) suminf.    0.02065 (3) obj. 4.36083e+07 iterations 283
Cbc0038I Pass  20: (1.52 seconds) suminf.    0.00372 (1) obj. 4.36083e+07 iterations 213
Cbc0038I Pass  21: (1.53 seconds) suminf.    0.01508 (6) obj. 4.36083e+07 iterations 85
Cbc0038I Pass  22: (1.54 seconds) suminf.    0.02203 (6) obj. 4.36083e+07 iterations 89
Cbc0038I Pass  23: (1.56 seconds) suminf.    0.06043 (7) obj. 4.36083e+07 iterations 185
Cbc0038I Pass  24: (1.67 seconds) suminf.    0.00372 (1) obj. 4.36083e+07 iterations 864
Cbc0038I Pass  25: (1.68 seconds) suminf.    0.00372 (1) obj. 4.36083e+07 iterations 28
Cbc0038I Pass  26: (1.69 seconds) suminf.    0.00372 (1) obj. 4.36083e+07 iterations 87
Cbc0038I Pass  27: (1.70 seconds) suminf.    0.01841 (3) obj. 4.36083e+07 iterations 68
Cbc0038I Pass  28: (1.73 seconds) suminf.    0.12527 (8) obj. 4.36083e+07 iterations 261
Cbc0038I Pass  29: (1.88 seconds) suminf.    0.06121 (6) obj. 4.36083e+07 iterations 1504
Cbc0038I Pass  30: (1.98 seconds) suminf.    0.01508 (6) obj. 4.36083e+07 iterations 1127
Cbc0038I Pass  31: (2.02 seconds) suminf.    0.03006 (8) obj. 4.36083e+07 iterations 347
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 4419 continuous
Cbc0038I Full problem 4899 rows 4830 columns, reduced to 384 rows 336 columns
Cbc0038I Mini branch and bound did not improve solution (2.05 seconds)
Cbc0038I After 2.05 seconds - Feasibility pump exiting with objective of 4.36087e+07 - took 1.76 seconds
Cbc0012I Integer solution of 43608704 found by feasibility pump after 0 iterations and 0 nodes (2.05 seconds)
Cbc0038I Full problem 4899 rows 4830 columns, reduced to 771 rows 838 columns
Cbc0013I At root node, 0 cuts changed objective from 43604638 to 43604638 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0030I Thread 0 used 0 times,  waiting to start 0.038717985, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.036427975, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.033493996, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.030644894, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.027416945, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.024486065, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.021504879, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.018557072, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.015601158, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.012238979, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.0092508793, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.0063760281, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 5.0067902e-06 locked, 0 waiting for locks
Cbc0001I Search completed - best objective 43608703.59893671, took 601 iterations and 0 nodes (2.44 seconds)
Cbc0032I Strong branching done 104 times (6214 iterations), fathomed 13 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 16 variables fixed on reduced cost
Cuts at root node changed objective from 4.36046e+07 to 4.39233e+07
Probing was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
Gomory was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
Knapsack was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
Clique was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
FlowCover was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
TwoMirCuts was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                43608703.59893671
Enumerated nodes:               0
Total iterations:               601
Time (CPU seconds):             2.56
Time (Wallclock seconds):       2.59

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.57   (Wallclock seconds):       2.61

