Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/b76f79dd1b8e47a3bdaa01977f2edcb3-pulp.mps -sec 60 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/b76f79dd1b8e47a3bdaa01977f2edcb3-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 189 COLUMNS
At line 42786 RHS
At line 42971 BOUNDS
At line 51528 ENDATA
Problem MODEL has 184 rows, 8556 columns and 17020 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 60
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.21379 - 0.00 seconds
Cgl0004I processed model has 184 rows, 8556 columns (8556 integer (8556 of which binary)) and 17020 elements
Cbc0038I Initial state - 92 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (92) obj. 1.21379 iterations 0
Cbc0038I Pass   2: suminf.    0.77174 (71) obj. 26.4264 iterations 21
Cbc0038I Pass   3: suminf.    0.61957 (57) obj. 43.2348 iterations 14
Cbc0038I Pass   4: suminf.    0.31522 (29) obj. 76.8516 iterations 28
Cbc0038I Pass   5: suminf.    0.10870 (10) obj. 99.663 iterations 19
Cbc0038I Solution found of 111.669
Cbc0038I Before mini branch and bound, 8464 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 8556 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.24 seconds)
Cbc0038I Round again with cutoff of 100.623
Cbc0038I Pass   6: suminf.    1.00000 (92) obj. 1.21379 iterations 0
Cbc0038I Pass   7: suminf.    0.77174 (71) obj. 26.4264 iterations 21
Cbc0038I Pass   8: suminf.    0.53261 (49) obj. 52.8396 iterations 22
Cbc0038I Pass   9: suminf.    0.40217 (37) obj. 67.2468 iterations 12
Cbc0038I Pass  10: suminf.    0.22826 (21) obj. 86.4564 iterations 16
Cbc0038I Pass  11: suminf.    0.29566 (10) obj. 100.623 iterations 23
Cbc0038I Pass  12: suminf.    0.29566 (10) obj. 100.623 iterations 0
Cbc0038I Pass  13: suminf.    0.29566 (10) obj. 100.623 iterations 4
Cbc0038I Pass  14: suminf.    0.29566 (10) obj. 100.623 iterations 0
Cbc0038I Pass  15: suminf.    0.29566 (10) obj. 100.623 iterations 1
Cbc0038I Pass  16: suminf.    0.29566 (10) obj. 100.623 iterations 0
Cbc0038I Pass  17: suminf.    0.29566 (10) obj. 100.623 iterations 1
Cbc0038I Pass  18: suminf.    0.39794 (9) obj. 100.623 iterations 20
Cbc0038I Pass  19: suminf.    0.39794 (9) obj. 100.623 iterations 4
Cbc0038I Pass  20: suminf.    0.39794 (9) obj. 100.623 iterations 3
Cbc0038I Pass  21: suminf.    0.39794 (9) obj. 100.623 iterations 1
Cbc0038I Pass  22: suminf.    0.39794 (9) obj. 100.623 iterations 2
Cbc0038I Pass  23: suminf.    0.39794 (9) obj. 100.623 iterations 1
Cbc0038I Pass  24: suminf.    0.70519 (12) obj. 100.623 iterations 41
Cbc0038I Pass  25: suminf.    0.19659 (10) obj. 100.623 iterations 16
Cbc0038I Pass  26: suminf.    0.17485 (9) obj. 100.623 iterations 11
Cbc0038I Pass  27: suminf.    0.17485 (9) obj. 100.623 iterations 2
Cbc0038I Pass  28: suminf.    0.17485 (9) obj. 100.623 iterations 11
Cbc0038I Pass  29: suminf.    0.17485 (9) obj. 100.623 iterations 2
Cbc0038I Pass  30: suminf.    0.17485 (9) obj. 100.623 iterations 11
Cbc0038I Pass  31: suminf.    0.29902 (12) obj. 100.623 iterations 45
Cbc0038I Pass  32: suminf.    0.11421 (11) obj. 100.623 iterations 40
Cbc0038I Pass  33: suminf.    0.13595 (11) obj. 100.623 iterations 14
Cbc0038I Pass  34: suminf.    0.13595 (11) obj. 100.623 iterations 1
Cbc0038I Pass  35: suminf.    0.11421 (11) obj. 100.623 iterations 12
Cbc0038I Rounding solution of 89.5741 is better than previous of 111.669

Cbc0038I Before mini branch and bound, 8391 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 8556 columns, reduced to 32 rows 64 columns
Cbc0038I Mini branch and bound improved solution from 89.5741 to 84.1734 (0.34 seconds)
Cbc0038I Round again with cutoff of 67.5815
Cbc0038I Pass  35: suminf.    1.00000 (92) obj. 1.21379 iterations 0
Cbc0038I Pass  36: suminf.    0.82609 (76) obj. 20.4234 iterations 16
Cbc0038I Pass  37: suminf.    0.55435 (51) obj. 50.4384 iterations 25
Cbc0038I Pass  38: suminf.    0.67791 (37) obj. 67.5815 iterations 16
Cbc0038I Pass  39: suminf.    0.40217 (37) obj. 67.2468 iterations 1
Cbc0038I Pass  40: suminf.    0.67791 (37) obj. 67.5815 iterations 34
Cbc0038I Pass  41: suminf.    0.40217 (37) obj. 67.2468 iterations 1
Cbc0038I Pass  42: suminf.    0.67791 (37) obj. 67.5815 iterations 1
Cbc0038I Pass  43: suminf.    0.71916 (35) obj. 67.5815 iterations 14
Cbc0038I Pass  44: suminf.    0.40217 (35) obj. 67.1967 iterations 13
Cbc0038I Pass  45: suminf.    0.71916 (35) obj. 67.5815 iterations 12
Cbc0038I Pass  46: suminf.    0.40217 (35) obj. 67.1967 iterations 11
Cbc0038I Pass  47: suminf.    0.71916 (35) obj. 67.5815 iterations 11
Cbc0038I Pass  48: suminf.    0.78951 (36) obj. 67.5815 iterations 25
Cbc0038I Pass  49: suminf.    0.78951 (36) obj. 67.5815 iterations 30
Cbc0038I Pass  50: suminf.    0.78951 (36) obj. 67.5815 iterations 10
Cbc0038I Pass  51: suminf.    0.78951 (36) obj. 67.5815 iterations 0
Cbc0038I Pass  52: suminf.    0.78951 (36) obj. 67.5815 iterations 6
Cbc0038I Pass  53: suminf.    0.78951 (36) obj. 67.5815 iterations 0
Cbc0038I Pass  54: suminf.    0.78951 (36) obj. 67.5815 iterations 5
Cbc0038I Pass  55: suminf.    0.78951 (36) obj. 67.5815 iterations 0
Cbc0038I Pass  56: suminf.    0.78951 (36) obj. 67.5815 iterations 5
Cbc0038I Pass  57: suminf.    0.78951 (36) obj. 67.5815 iterations 0
Cbc0038I Pass  58: suminf.    0.76777 (36) obj. 67.5815 iterations 5
Cbc0038I Pass  59: suminf.    0.76777 (36) obj. 67.5815 iterations 0
Cbc0038I Pass  60: suminf.    0.78951 (36) obj. 67.5815 iterations 5
Cbc0038I Pass  61: suminf.    0.78951 (36) obj. 67.5815 iterations 0
Cbc0038I Pass  62: suminf.    0.78951 (36) obj. 67.5815 iterations 5
Cbc0038I Pass  63: suminf.    0.78951 (36) obj. 67.5815 iterations 0
Cbc0038I Pass  64: suminf.    0.76777 (36) obj. 67.5815 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8443 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.43 seconds)
Cbc0038I After 0.43 seconds - Feasibility pump exiting with objective of 84.1734 - took 0.21 seconds
Cbc0012I Integer solution of 84.173385 found by feasibility pump after 0 iterations and 0 nodes (0.43 seconds)
Cbc0012I Integer solution of 18.237338 found by DiveCoefficient after 8263 iterations and 0 nodes (3.61 seconds)
Cbc0031I 784 added rows had average density of 17.835459
Cbc0013I At root node, 784 cuts changed objective from 1.2137931 to 18.235323 in 25 passes
Cbc0014I Cut generator 0 (Probing) - 879 row cuts average 2.3 elements, 0 column cuts (550 active)  in 0.611 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 217 row cuts average 177.6 elements, 0 column cuts (0 active)  in 0.404 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1219 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 916 row cuts average 24.9 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 249 row cuts average 115.1 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 18.237338 best solution, best possible 18.235323 (4.03 seconds)
Cbc0030I Thread 0 used 2 times,  waiting to start 0.17355204, 0.08785 cpu time, 10 locks, 0.0015392303 locked, 3.0994415e-06 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.25549603, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.24047017, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.22543502, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.21036696, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.19535899, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.18014002, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.16497993, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.14847994, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.13338304, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.11841702, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.10357308, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0.096947432 waiting for threads,  8 locks, 1.0251999e-05 locked, 9.5367432e-07 waiting for locks
Cbc0001I Search completed - best objective 18.23733845385086, took 8690 iterations and 2 nodes (4.18 seconds)
Cbc0032I Strong branching done 286 times (12337 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 15302 variables fixed on reduced cost
Cuts at root node changed objective from 1.21379 to 18.2353
Probing was tried 327 times and created 11623 cuts of which 7150 were active after adding rounds of cuts (7.953 seconds)
Gomory was tried 327 times and created 2821 cuts of which 0 were active after adding rounds of cuts (5.252 seconds)
Knapsack was tried 327 times and created 15858 cuts of which 0 were active after adding rounds of cuts (0.700 seconds)
Clique was tried 325 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.171 seconds)
MixedIntegerRounding2 was tried 327 times and created 11912 cuts of which 0 were active after adding rounds of cuts (0.959 seconds)
FlowCover was tried 325 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.062 seconds)
TwoMirCuts was tried 327 times and created 3237 cuts of which 0 were active after adding rounds of cuts (1.268 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
ImplicationCuts was tried 2 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                18.23733845
Enumerated nodes:               2
Total iterations:               8690
Time (CPU seconds):             4.13
Time (Wallclock seconds):       4.20

Option for printingOptions changed from normal to all
Total time (CPU seconds):       4.15   (Wallclock seconds):       4.22

