Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/b1dbea7efc504ca687af4ac95b6d51a1-pulp.mps -sec 3600 -timeMode elapsed -branch -printingOptions all -solution /tmp/b1dbea7efc504ca687af4ac95b6d51a1-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 93 COLUMNS
At line 6034 RHS
At line 6123 BOUNDS
At line 6168 ENDATA
Problem MODEL has 88 rows, 1980 columns and 3916 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.77059e+07 - 0.00 seconds
Cgl0004I processed model has 88 rows, 1980 columns (44 integer (44 of which binary)) and 3916 elements
Cbc0038I Initial state - 44 integers unsatisfied sum - 4.64406
Cbc0038I Pass   1: suminf.    0.12433 (1) obj. 5.27023e+08 iterations 43
Cbc0038I Solution found of 5.42347e+08
Cbc0038I Relaxing continuous gives 5.16013e+08
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 1849 continuous
Cbc0038I Full problem 88 rows 1980 columns, reduced to 85 rows 125 columns
Cbc0038I Mini branch and bound improved solution from 5.16013e+08 to 1.31971e+08 (0.05 seconds)
Cbc0038I Freeing continuous variables gives a solution of 1.29236e+08
Cbc0038I Round again with cutoff of 1.18083e+08
Cbc0038I Pass   2: suminf.    1.00282 (9) obj. 1.18083e+08 iterations 65
Cbc0038I Pass   3: suminf.    0.33911 (5) obj. 1.18083e+08 iterations 14
Cbc0038I Pass   4: suminf.    0.24940 (6) obj. 1.18083e+08 iterations 41
Cbc0038I Pass   5: suminf.    0.18459 (1) obj. 1.18083e+08 iterations 36
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 1.18083e+08 iterations 2
Cbc0038I Solution found of 1.18083e+08
Cbc0038I Relaxing continuous gives 1.17085e+08
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 1836 continuous
Cbc0038I Full problem 88 rows 1980 columns, reduced to 81 rows 129 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I Freeing continuous variables gives a solution of 1.17085e+08
Cbc0038I Round again with cutoff of 9.72093e+07
Cbc0038I Pass   7: suminf.    1.41576 (12) obj. 9.72093e+07 iterations 4
Cbc0038I Pass   8: suminf.    0.68393 (11) obj. 9.72093e+07 iterations 15
Cbc0038I Pass   9: suminf.    0.92435 (10) obj. 9.72093e+07 iterations 49
Cbc0038I Pass  10: suminf.    0.74667 (8) obj. 9.72093e+07 iterations 44
Cbc0038I Pass  11: suminf.    0.27468 (5) obj. 9.72093e+07 iterations 10
Cbc0038I Pass  12: suminf.    0.72351 (10) obj. 9.72093e+07 iterations 19
Cbc0038I Pass  13: suminf.    0.72351 (10) obj. 9.72093e+07 iterations 0
Cbc0038I Pass  14: suminf.    1.55200 (13) obj. 9.72093e+07 iterations 24
Cbc0038I Pass  15: suminf.    1.55200 (13) obj. 9.72093e+07 iterations 0
Cbc0038I Pass  16: suminf.    1.69021 (13) obj. 9.72093e+07 iterations 14
Cbc0038I Pass  17: suminf.    1.69021 (13) obj. 9.72093e+07 iterations 0
Cbc0038I Pass  18: suminf.    1.62951 (12) obj. 9.72093e+07 iterations 4
Cbc0038I Pass  19: suminf.    1.49739 (12) obj. 9.72093e+07 iterations 3
Cbc0038I Pass  20: suminf.    0.76328 (9) obj. 9.72093e+07 iterations 32
Cbc0038I Pass  21: suminf.    1.29210 (11) obj. 9.72093e+07 iterations 24
Cbc0038I Pass  22: suminf.    1.29210 (11) obj. 9.72093e+07 iterations 0
Cbc0038I Pass  23: suminf.    1.38943 (11) obj. 9.72093e+07 iterations 15
Cbc0038I Pass  24: suminf.    1.35118 (11) obj. 9.72093e+07 iterations 3
Cbc0038I Pass  25: suminf.    1.38943 (11) obj. 9.72093e+07 iterations 3
Cbc0038I Pass  26: suminf.    0.77278 (11) obj. 9.72093e+07 iterations 30
Cbc0038I Pass  27: suminf.    1.46275 (12) obj. 9.72093e+07 iterations 24
Cbc0038I Pass  28: suminf.    1.46275 (12) obj. 9.72093e+07 iterations 0
Cbc0038I Pass  29: suminf.    1.38943 (11) obj. 9.72093e+07 iterations 14
Cbc0038I Pass  30: suminf.    1.35118 (11) obj. 9.72093e+07 iterations 3
Cbc0038I Pass  31: suminf.    1.38943 (11) obj. 9.72093e+07 iterations 3
Cbc0038I Pass  32: suminf.    1.06097 (11) obj. 9.72093e+07 iterations 32
Cbc0038I Pass  33: suminf.    1.06097 (11) obj. 9.72093e+07 iterations 0
Cbc0038I Pass  34: suminf.    1.54684 (12) obj. 9.72093e+07 iterations 16
Cbc0038I Pass  35: suminf.    1.20203 (10) obj. 9.72093e+07 iterations 6
Cbc0038I Pass  36: suminf.    1.54684 (12) obj. 9.72093e+07 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 1830 continuous
Cbc0038I Full problem 88 rows 1980 columns, reduced to 81 rows 140 columns
Cbc0038I Mini branch and bound improved solution from 1.17085e+08 to 1.12167e+08 (0.14 seconds)
Cbc0038I Freeing continuous variables gives a solution of 1.06591e+08
Cbc0038I Round again with cutoff of 7.33583e+07
Cbc0038I Pass  36: suminf.    1.96817 (19) obj. 7.33583e+07 iterations 7
Cbc0038I Pass  37: suminf.    1.63963 (19) obj. 7.33583e+07 iterations 12
Cbc0038I Pass  38: suminf.    1.72262 (20) obj. 7.33583e+07 iterations 37
Cbc0038I Pass  39: suminf.    2.87524 (22) obj. 7.33583e+07 iterations 45
Cbc0038I Pass  40: suminf.    2.36607 (22) obj. 7.33583e+07 iterations 6
Cbc0038I Pass  41: suminf.    2.61825 (21) obj. 7.33583e+07 iterations 11
Cbc0038I Pass  42: suminf.    1.97557 (21) obj. 7.33583e+07 iterations 3
Cbc0038I Pass  43: suminf.    2.07707 (21) obj. 7.33583e+07 iterations 3
Cbc0038I Pass  44: suminf.    2.07707 (21) obj. 7.33583e+07 iterations 0
Cbc0038I Pass  45: suminf.    2.23185 (21) obj. 7.33583e+07 iterations 10
Cbc0038I Pass  46: suminf.    2.23185 (21) obj. 7.33583e+07 iterations 0
Cbc0038I Pass  47: suminf.    2.07707 (21) obj. 7.33583e+07 iterations 13
Cbc0038I Pass  48: suminf.    1.59909 (18) obj. 7.33583e+07 iterations 24
Cbc0038I Pass  49: suminf.    3.12978 (22) obj. 7.33583e+07 iterations 26
Cbc0038I Pass  50: suminf.    3.12978 (22) obj. 7.33583e+07 iterations 0
Cbc0038I Pass  51: suminf.    2.04958 (21) obj. 7.33583e+07 iterations 4
Cbc0038I Pass  52: suminf.    2.04958 (21) obj. 7.33583e+07 iterations 0
Cbc0038I Pass  53: suminf.    2.20436 (21) obj. 7.33583e+07 iterations 10
Cbc0038I Pass  54: suminf.    2.20436 (21) obj. 7.33583e+07 iterations 0
Cbc0038I Pass  55: suminf.    1.87809 (16) obj. 7.33583e+07 iterations 17
Cbc0038I Pass  56: suminf.    2.07707 (21) obj. 7.33583e+07 iterations 11
Cbc0038I Pass  57: suminf.    2.07707 (21) obj. 7.33583e+07 iterations 0
Cbc0038I Pass  58: suminf.    2.23185 (21) obj. 7.33583e+07 iterations 10
Cbc0038I Pass  59: suminf.    2.23185 (21) obj. 7.33583e+07 iterations 0
Cbc0038I Pass  60: suminf.    2.07707 (21) obj. 7.33583e+07 iterations 11
Cbc0038I Pass  61: suminf.    2.25769 (21) obj. 7.33583e+07 iterations 28
Cbc0038I Pass  62: suminf.    2.09347 (20) obj. 7.33583e+07 iterations 4
Cbc0038I Pass  63: suminf.    2.25769 (21) obj. 7.33583e+07 iterations 6
Cbc0038I Pass  64: suminf.    1.89973 (19) obj. 7.33583e+07 iterations 7
Cbc0038I Pass  65: suminf.    2.07707 (21) obj. 7.33583e+07 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 1855 continuous
Cbc0038I Full problem 88 rows 1980 columns, reduced to 61 rows 95 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of 1.06591e+08 - took 0.15 seconds
Cbc0012I Integer solution of 1.0659133e+08 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0012I Integer solution of 1.0626554e+08 found by DiveCoefficient after 259 iterations and 0 nodes (0.31 seconds)
Cbc0031I 80 added rows had average density of 101.3625
Cbc0013I At root node, 80 cuts changed objective from 17705921 to 97754408 in 20 passes
Cbc0014I Cut generator 0 (Probing) - 8 row cuts average 66.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 88 row cuts average 103.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 18 row cuts average 141.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 116 row cuts average 121.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1.0626554e+08 best solution, best possible 97754408 (0.32 seconds)
Cbc0012I Integer solution of 1.059957e+08 found by DiveCoefficient after 262 iterations and 1 nodes (0.34 seconds)
Cbc0012I Integer solution of 1.0567304e+08 found by DiveCoefficient after 266 iterations and 2 nodes (0.35 seconds)
Cbc0012I Integer solution of 1.0428523e+08 found by DiveCoefficient after 278 iterations and 4 nodes (0.39 seconds)
Cbc0012I Integer solution of 1.0346433e+08 found by DiveCoefficient after 282 iterations and 5 nodes (0.41 seconds)
Cbc0012I Integer solution of 1.0225378e+08 found by DiveCoefficient after 286 iterations and 7 nodes (0.42 seconds)
Cbc0012I Integer solution of 99339073 found by DiveCoefficient after 293 iterations and 8 nodes (0.43 seconds)
Cbc0016I Integer solution of 98812557 found by strong branching after 300 iterations and 10 nodes (0.44 seconds)
Cbc0001I Search completed - best objective 98812556.99422894, took 375 iterations and 20 nodes (0.44 seconds)
Cbc0032I Strong branching done 250 times (1518 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 9, 2 variables fixed on reduced cost
Cuts at root node changed objective from 1.77059e+07 to 9.77544e+07
Probing was tried 20 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
Gomory was tried 30 times and created 88 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Knapsack was tried 20 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Clique was tried 20 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 30 times and created 18 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
FlowCover was tried 20 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.040 seconds)
TwoMirCuts was tried 30 times and created 116 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                98812556.99422894
Enumerated nodes:               20
Total iterations:               375
Time (CPU seconds):             0.41
Time (Wallclock seconds):       0.45

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.41   (Wallclock seconds):       0.45

