Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/tesis/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/373cb2286baf46f49f9cc0a4c2cfb163-pulp.mps -sec 3600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/373cb2286baf46f49f9cc0a4c2cfb163-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 328 COLUMNS
At line 1808 RHS
At line 2132 BOUNDS
At line 2439 ENDATA
Problem MODEL has 323 rows, 306 columns and 1156 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.77188e+07 - 0.00 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 33 strengthened rows, 0 substitutions
Cgl0004I processed model has 323 rows, 306 columns (17 integer (17 of which binary)) and 1173 elements
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.431699
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 2.20578e+07 iterations 26
Cbc0038I Solution found of 2.20578e+07
Cbc0038I Relaxing continuous gives 2.20578e+07
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 278 continuous
Cbc0038I Full problem 323 rows 306 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 2.19641e+07
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.01414 (1) obj. 2.19641e+07 iterations 55
Cbc0038I Pass   3: suminf.    0.20425 (1) obj. 2.19641e+07 iterations 49
Cbc0038I Pass   4: suminf.    0.56830 (2) obj. 2.19641e+07 iterations 54
Cbc0038I Pass   5: suminf.    0.27975 (1) obj. 2.19641e+07 iterations 23
Cbc0038I Pass   6: suminf.    1.19605 (3) obj. 2.19641e+07 iterations 17
Cbc0038I Pass   7: suminf.    0.43170 (2) obj. 2.19641e+07 iterations 75
Cbc0038I Pass   8: suminf.    0.36337 (2) obj. 2.19641e+07 iterations 22
Cbc0038I Pass   9: suminf.    0.20473 (1) obj. 2.19641e+07 iterations 50
Cbc0038I Pass  10: suminf.    0.20473 (1) obj. 2.19641e+07 iterations 1
Cbc0038I Pass  11: suminf.    0.01414 (1) obj. 2.19641e+07 iterations 54
Cbc0038I Pass  12: suminf.    0.20425 (1) obj. 2.19641e+07 iterations 47
Cbc0038I Pass  13: suminf.    0.01414 (1) obj. 2.19641e+07 iterations 35
Cbc0038I Pass  14: suminf.    0.27975 (1) obj. 2.19641e+07 iterations 70
Cbc0038I Pass  15: suminf.    0.27975 (1) obj. 2.19641e+07 iterations 5
Cbc0038I Pass  16: suminf.    0.27975 (1) obj. 2.19641e+07 iterations 0
Cbc0038I Pass  17: suminf.    0.56830 (2) obj. 2.19641e+07 iterations 35
Cbc0038I Pass  18: suminf.    0.27975 (1) obj. 2.19641e+07 iterations 37
Cbc0038I Pass  19: suminf.    0.27975 (1) obj. 2.19641e+07 iterations 26
Cbc0038I Pass  20: suminf.    0.50048 (2) obj. 2.19641e+07 iterations 58
Cbc0038I Pass  21: suminf.    0.08565 (1) obj. 2.19641e+07 iterations 36
Cbc0038I Pass  22: suminf.    0.13657 (1) obj. 2.19641e+07 iterations 34
Cbc0038I Pass  23: suminf.    0.72734 (2) obj. 2.19641e+07 iterations 53
Cbc0038I Pass  24: suminf.    0.72351 (2) obj. 2.19641e+07 iterations 13
Cbc0038I Pass  25: suminf.    0.02030 (1) obj. 2.19641e+07 iterations 40
Cbc0038I Pass  26: suminf.    0.19067 (1) obj. 2.19641e+07 iterations 72
Cbc0038I Pass  27: suminf.    0.37710 (1) obj. 2.19641e+07 iterations 43
Cbc0038I Pass  28: suminf.    0.37710 (1) obj. 2.19641e+07 iterations 2
Cbc0038I Pass  29: suminf.    0.12839 (1) obj. 2.19641e+07 iterations 32
Cbc0038I Pass  30: suminf.    0.12839 (1) obj. 2.19641e+07 iterations 0
Cbc0038I Pass  31: suminf.    0.12839 (1) obj. 2.19641e+07 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 217 continuous
Cbc0038I Full problem 323 rows 306 columns, reduced to 83 rows 76 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of 2.20578e+07 - took 0.05 seconds
Cbc0012I Integer solution of 22057767 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 323 rows 306 columns, reduced to 39 rows 86 columns
Cbc0031I 10 added rows had average density of 287
Cbc0013I At root node, 10 cuts changed objective from 21120609 to 21212693 in 57 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 224 row cuts average 287.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 13 row cuts average 172.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 22057767 best solution, best possible 21212693 (0.41 seconds)
Cbc0030I Thread 0 used 11 times,  waiting to start 0.072459459, 0.396491 cpu time, 60 locks, 0.00084543228 locked, 0.00021004677 waiting for locks
Cbc0030I Thread 1 used 9 times,  waiting to start 0.25434589, 0.206074 cpu time, 44 locks, 0.00036549568 locked, 0.0001502037 waiting for locks
Cbc0030I Thread 2 used 5 times,  waiting to start 0.32001185, 0.074311 cpu time, 26 locks, 0.00027227402 locked, 0.00021100044 waiting for locks
Cbc0030I Thread 3 used 1 times,  waiting to start 0.33904409, 0.003865 cpu time, 4 locks, 1.6927719e-05 locked, 9.5367432e-07 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.33365893, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.32775307, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.32200408, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.3155179, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.30983305, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.30430603, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.29882312, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.29316998, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0.12684727 waiting for threads,  57 locks, 0.00014996529 locked, 0.00072932243 waiting for locks
Cbc0001I Search completed - best objective 22057767.32994474, took 1601 iterations and 26 nodes (0.74 seconds)
Cbc0032I Strong branching done 260 times (7734 iterations), fathomed 10 nodes and fixed 1 variables
Cbc0035I Maximum depth 8, 16 variables fixed on reduced cost
Cuts at root node changed objective from 2.11206e+07 to 2.12127e+07
Probing was tried 741 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.182 seconds)
Gomory was tried 741 times and created 2912 cuts of which 0 were active after adding rounds of cuts (0.279 seconds)
Knapsack was tried 741 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.164 seconds)
Clique was tried 741 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
MixedIntegerRounding2 was tried 741 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.155 seconds)
FlowCover was tried 741 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.428 seconds)
TwoMirCuts was tried 741 times and created 169 cuts of which 0 were active after adding rounds of cuts (0.076 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                22057767.32994474
Enumerated nodes:               26
Total iterations:               1601
Time (CPU seconds):             0.84
Time (Wallclock seconds):       0.75

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.84   (Wallclock seconds):       0.75

