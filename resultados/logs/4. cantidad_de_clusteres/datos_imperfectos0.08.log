Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/dfdf3bb338624befbc86b7b56216e2e4-pulp.mps -sec 60 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/dfdf3bb338624befbc86b7b56216e2e4-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 193 COLUMNS
At line 44656 RHS
At line 44845 BOUNDS
At line 53776 ENDATA
Problem MODEL has 188 rows, 8930 columns and 17766 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 60
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.08448 - 0.00 seconds
Cgl0004I processed model has 188 rows, 8930 columns (8930 integer (8930 of which binary)) and 17766 elements
Cbc0038I Initial state - 94 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (94) obj. 1.08448 iterations 0
Cbc0038I Pass   2: suminf.    0.74468 (70) obj. 26.8352 iterations 24
Cbc0038I Pass   3: suminf.    0.63830 (60) obj. 37.5646 iterations 10
Cbc0038I Pass   4: suminf.    0.51064 (48) obj. 50.44 iterations 12
Cbc0038I Pass   5: suminf.    0.20213 (19) obj. 81.5554 iterations 29
Cbc0038I Solution found of 101.941
Cbc0038I Before mini branch and bound, 8836 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 8930 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.26 seconds)
Cbc0038I Round again with cutoff of 91.8557
Cbc0038I Pass   6: suminf.    1.00000 (94) obj. 1.08448 iterations 0
Cbc0038I Pass   7: suminf.    0.73404 (69) obj. 27.9081 iterations 25
Cbc0038I Pass   8: suminf.    0.54255 (51) obj. 47.2211 iterations 18
Cbc0038I Pass   9: suminf.    0.40426 (38) obj. 61.1694 iterations 13
Cbc0038I Pass  10: suminf.    0.14894 (14) obj. 86.9201 iterations 24
Cbc0038I Pass  11: suminf.    0.49150 (10) obj. 91.8557 iterations 22
Cbc0038I Pass  12: suminf.    0.49150 (10) obj. 91.8557 iterations 0
Cbc0038I Pass  13: suminf.    0.49150 (10) obj. 91.8557 iterations 1
Cbc0038I Pass  14: suminf.    0.49150 (10) obj. 91.8557 iterations 0
Cbc0038I Pass  15: suminf.    0.49150 (10) obj. 91.8557 iterations 1
Cbc0038I Pass  16: suminf.    0.31695 (10) obj. 91.8557 iterations 17
Cbc0038I Pass  17: suminf.    0.31695 (10) obj. 91.8557 iterations 7
Cbc0038I Pass  18: suminf.    0.31695 (10) obj. 91.8557 iterations 6
Cbc0038I Pass  19: suminf.    0.31695 (10) obj. 91.8557 iterations 0
Cbc0038I Pass  20: suminf.    0.31695 (10) obj. 91.8557 iterations 5
Cbc0038I Pass  21: suminf.    0.31695 (10) obj. 91.8557 iterations 0
Cbc0038I Pass  22: suminf.    0.36916 (12) obj. 91.8557 iterations 71
Cbc0038I Pass  23: suminf.    0.13830 (10) obj. 91.8384 iterations 70
Cbc0038I Pass  24: suminf.    0.15422 (10) obj. 91.8557 iterations 77
Cbc0038I Pass  25: suminf.    0.13830 (10) obj. 91.8384 iterations 68
Cbc0038I Pass  26: suminf.    0.81256 (12) obj. 91.8557 iterations 95
Cbc0038I Pass  27: suminf.    0.13830 (10) obj. 91.7947 iterations 90
Cbc0038I Pass  28: suminf.    0.19452 (10) obj. 91.8557 iterations 93
Cbc0038I Pass  29: suminf.    0.36362 (12) obj. 91.8557 iterations 132
Cbc0038I Pass  30: suminf.    0.15957 (10) obj. 91.8407 iterations 117
Cbc0038I Pass  31: suminf.    0.17342 (10) obj. 91.8557 iterations 130
Cbc0038I Pass  32: suminf.    0.13830 (9) obj. 91.8176 iterations 122
Cbc0038I Pass  33: suminf.    0.17342 (9) obj. 91.8557 iterations 130
Cbc0038I Pass  34: suminf.    0.49660 (12) obj. 91.8557 iterations 159
Cbc0038I Pass  35: suminf.    0.13830 (10) obj. 91.8171 iterations 128
Cbc0038I Rounding solution of 73.2085 is better than previous of 101.941

Cbc0038I Before mini branch and bound, 8631 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 8930 columns, reduced to 116 rows 240 columns
Cbc0038I Mini branch and bound improved solution from 73.2085 to 50.876 (0.39 seconds)
Cbc0038I Round again with cutoff of 40.9177
Cbc0038I Pass  35: suminf.    1.00000 (94) obj. 1.08448 iterations 0
Cbc0038I Pass  36: suminf.    0.86170 (81) obj. 15.0328 iterations 13
Cbc0038I Pass  37: suminf.    0.73014 (57) obj. 40.9177 iterations 29
Cbc0038I Pass  38: suminf.    0.60638 (57) obj. 40.7835 iterations 1
Cbc0038I Pass  39: suminf.    0.73014 (57) obj. 40.9177 iterations 18
Cbc0038I Pass  40: suminf.    0.60638 (57) obj. 40.7835 iterations 1
Cbc0038I Pass  41: suminf.    0.73014 (57) obj. 40.9177 iterations 1
Cbc0038I Pass  42: suminf.    1.01262 (48) obj. 40.9177 iterations 60
Cbc0038I Pass  43: suminf.    0.55319 (48) obj. 40.4194 iterations 28
Cbc0038I Pass  44: suminf.    1.01262 (48) obj. 40.9177 iterations 21
Cbc0038I Pass  45: suminf.    0.54255 (48) obj. 40.4079 iterations 15
Cbc0038I Pass  46: suminf.    1.01262 (48) obj. 40.9177 iterations 18
Cbc0038I Pass  47: suminf.    0.68379 (45) obj. 40.9177 iterations 25
Cbc0038I Pass  48: suminf.    0.53191 (45) obj. 40.753 iterations 40
Cbc0038I Pass  49: suminf.    0.68379 (45) obj. 40.9177 iterations 22
Cbc0038I Pass  50: suminf.    0.52128 (45) obj. 40.7414 iterations 16
Cbc0038I Pass  51: suminf.    0.68379 (45) obj. 40.9177 iterations 22
Cbc0038I Pass  52: suminf.    1.03014 (44) obj. 40.9177 iterations 49
Cbc0038I Pass  53: suminf.    1.03014 (44) obj. 40.9177 iterations 36
Cbc0038I Pass  54: suminf.    1.00887 (44) obj. 40.9177 iterations 11
Cbc0038I Pass  55: suminf.    1.00887 (44) obj. 40.9177 iterations 3
Cbc0038I Pass  56: suminf.    1.03014 (44) obj. 40.9177 iterations 13
Cbc0038I Pass  57: suminf.    1.03014 (44) obj. 40.9177 iterations 3
Cbc0038I Pass  58: suminf.    1.00887 (44) obj. 40.9177 iterations 14
Cbc0038I Pass  59: suminf.    1.00887 (44) obj. 40.9177 iterations 3
Cbc0038I Pass  60: suminf.    1.03014 (44) obj. 40.9177 iterations 11
Cbc0038I Pass  61: suminf.    0.88328 (41) obj. 40.9177 iterations 66
Cbc0038I Pass  62: suminf.    0.88328 (41) obj. 40.9177 iterations 58
Cbc0038I Pass  63: suminf.    0.86200 (41) obj. 40.9177 iterations 15
Cbc0038I Pass  64: suminf.    0.86200 (41) obj. 40.9177 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8762 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.50 seconds)
Cbc0038I After 0.50 seconds - Feasibility pump exiting with objective of 50.876 - took 0.27 seconds
Cbc0012I Integer solution of 50.875992 found by feasibility pump after 0 iterations and 0 nodes (0.50 seconds)
Cbc0012I Integer solution of 11.056363 found by DiveCoefficient after 30217 iterations and 0 nodes (11.47 seconds)
Cbc0031I 1284 added rows had average density of 11.312305
Cbc0013I At root node, 1284 cuts changed objective from 1.0844828 to 11.056363 in 37 passes
Cbc0014I Cut generator 0 (Probing) - 2093 row cuts average 2.2 elements, 0 column cuts (162 active)  in 1.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 239 row cuts average 164.6 elements, 0 column cuts (0 active)  in 0.863 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 3384 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.147 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1432 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.133 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 335 row cuts average 127.3 elements, 0 column cuts (0 active)  in 0.127 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 0.19200397, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.17559004, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.15897107, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.14227295, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.12564802, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.10931611, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.092727184, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.076220036, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.059577942, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.042928934, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.026246071, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.0096209049, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 6.9141388e-06 locked, 0 waiting for locks
Cbc0001I Search completed - best objective 11.05636276296936, took 30217 iterations and 0 nodes (11.74 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.08448 to 11.0564
Probing was tried 481 times and created 27209 cuts of which 2106 were active after adding rounds of cuts (13.046 seconds)
Gomory was tried 481 times and created 3107 cuts of which 0 were active after adding rounds of cuts (11.215 seconds)
Knapsack was tried 481 times and created 43992 cuts of which 0 were active after adding rounds of cuts (1.915 seconds)
Clique was tried 481 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.533 seconds)
MixedIntegerRounding2 was tried 481 times and created 18616 cuts of which 0 were active after adding rounds of cuts (1.733 seconds)
FlowCover was tried 481 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.107 seconds)
TwoMirCuts was tried 481 times and created 4355 cuts of which 0 were active after adding rounds of cuts (1.653 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Optimal solution found

Objective value:                11.05636276
Enumerated nodes:               0
Total iterations:               30217
Time (CPU seconds):             11.62
Time (Wallclock seconds):       11.75

Option for printingOptions changed from normal to all
Total time (CPU seconds):       11.64   (Wallclock seconds):       11.78

