Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/tesis/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/65a90c4e4d6f4db38edeef9751f0bedf-pulp.mps -sec 3600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/65a90c4e4d6f4db38edeef9751f0bedf-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1940 COLUMNS
At line 11272 RHS
At line 13208 BOUNDS
At line 15101 ENDATA
Problem MODEL has 1935 rows, 1892 columns and 7396 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2.33057e+07 - 0.03 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 162 strengthened rows, 0 substitutions
Cgl0004I processed model has 1935 rows, 1892 columns (43 integer (43 of which binary)) and 7439 elements
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.678635
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 4.17082e+07 iterations 158
Cbc0038I Solution found of 4.17082e+07
Cbc0038I Relaxing continuous gives 4.14552e+07
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 1807 continuous
Cbc0038I Full problem 1935 rows 1892 columns, reduced to 29 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.26 seconds)
Cbc0038I Round again with cutoff of 4.11688e+07
Cbc0038I Pass   2: suminf.    0.02548 (1) obj. 4.11688e+07 iterations 318
Cbc0038I Pass   3: suminf.    0.23029 (1) obj. 4.11688e+07 iterations 202
Cbc0038I Pass   4: suminf.    0.33965 (2) obj. 4.11688e+07 iterations 671
Cbc0038I Pass   5: suminf.    0.17749 (1) obj. 4.11688e+07 iterations 145
Cbc0038I Pass   6: suminf.    0.19300 (1) obj. 4.11688e+07 iterations 209
Cbc0038I Pass   7: suminf.    0.58248 (3) obj. 4.11688e+07 iterations 353
Cbc0038I Pass   8: suminf.    0.52041 (2) obj. 4.11688e+07 iterations 34
Cbc0038I Pass   9: suminf.    0.32534 (1) obj. 4.11688e+07 iterations 579
Cbc0038I Pass  10: suminf.    0.17749 (1) obj. 4.11688e+07 iterations 329
Cbc0038I Pass  11: suminf.    0.20625 (1) obj. 4.11688e+07 iterations 410
Cbc0038I Pass  12: suminf.    1.19127 (5) obj. 4.11688e+07 iterations 168
Cbc0038I Pass  13: suminf.    0.32969 (2) obj. 4.11688e+07 iterations 239
Cbc0038I Pass  14: suminf.    0.49802 (1) obj. 4.11688e+07 iterations 223
Cbc0038I Pass  15: suminf.    0.49802 (1) obj. 4.11688e+07 iterations 0
Cbc0038I Pass  16: suminf.    0.16359 (2) obj. 4.11688e+07 iterations 374
Cbc0038I Pass  17: suminf.    0.16359 (2) obj. 4.11688e+07 iterations 30
Cbc0038I Pass  18: suminf.    0.35734 (1) obj. 4.11688e+07 iterations 431
Cbc0038I Pass  19: suminf.    0.17749 (1) obj. 4.11688e+07 iterations 291
Cbc0038I Pass  20: suminf.    0.22721 (1) obj. 4.11688e+07 iterations 367
Cbc0038I Pass  21: suminf.    0.56954 (5) obj. 4.11688e+07 iterations 319
Cbc0038I Pass  22: suminf.    0.56954 (5) obj. 4.11688e+07 iterations 11
Cbc0038I Pass  23: suminf.    0.22599 (1) obj. 4.11688e+07 iterations 892
Cbc0038I Pass  24: suminf.    0.37835 (1) obj. 4.11688e+07 iterations 184
Cbc0038I Pass  25: suminf.    0.85953 (4) obj. 4.11688e+07 iterations 789
Cbc0038I Pass  26: suminf.    0.85953 (4) obj. 4.11688e+07 iterations 2
Cbc0038I Pass  27: suminf.    0.39610 (1) obj. 4.11688e+07 iterations 440
Cbc0038I Pass  28: suminf.    0.39610 (1) obj. 4.11688e+07 iterations 0
Cbc0038I Pass  29: suminf.    0.32554 (1) obj. 4.11688e+07 iterations 117
Cbc0038I Pass  30: suminf.    0.40714 (1) obj. 4.11688e+07 iterations 223
Cbc0038I Pass  31: suminf.    0.59253 (6) obj. 4.11688e+07 iterations 300
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 1653 continuous
Cbc0038I Full problem 1935 rows 1892 columns, reduced to 238 rows 216 columns
Cbc0038I Mini branch and bound improved solution from 4.14552e+07 to 3.94837e+07 (0.69 seconds)
Cbc0038I Freeing continuous variables gives a solution of 3.94649e+07
Cbc0038I Round again with cutoff of 3.92902e+07
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.19799 (1) obj. 3.92902e+07 iterations 43
Cbc0038I Pass  32: suminf.    0.23029 (1) obj. 3.92902e+07 iterations 51
Cbc0038I Pass  33: suminf.    1.36312 (4) obj. 3.92902e+07 iterations 580
Cbc0038I Pass  34: suminf.    0.31828 (2) obj. 3.92902e+07 iterations 260
Cbc0038I Pass  35: suminf.    0.80382 (2) obj. 3.92902e+07 iterations 1375
Cbc0038I Pass  36: suminf.    0.80382 (2) obj. 3.92902e+07 iterations 23
Cbc0038I Pass  37: suminf.    0.31828 (2) obj. 3.92902e+07 iterations 115
Cbc0038I Pass  38: suminf.    1.81306 (5) obj. 3.92902e+07 iterations 236
Cbc0038I Pass  39: suminf.    1.00407 (3) obj. 3.92902e+07 iterations 57
Cbc0038I Pass  40: suminf.    0.37835 (1) obj. 3.92902e+07 iterations 286
Cbc0038I Pass  41: suminf.    0.35437 (1) obj. 3.92902e+07 iterations 339
Cbc0038I Pass  42: suminf.    1.83386 (5) obj. 3.92902e+07 iterations 349
Cbc0038I Pass  43: suminf.    1.02920 (4) obj. 3.92902e+07 iterations 124
Cbc0038I Pass  44: suminf.    0.74654 (2) obj. 3.92902e+07 iterations 405
Cbc0038I Pass  45: suminf.    0.37835 (1) obj. 3.92902e+07 iterations 238
Cbc0038I Pass  46: suminf.    0.35734 (1) obj. 3.92902e+07 iterations 358
Cbc0038I Pass  47: suminf.    1.64715 (4) obj. 3.92902e+07 iterations 366
Cbc0038I Pass  48: suminf.    0.66305 (2) obj. 3.92902e+07 iterations 191
Cbc0038I Pass  49: suminf.    0.91585 (3) obj. 3.92902e+07 iterations 86
Cbc0038I Pass  50: suminf.    0.72788 (2) obj. 3.92902e+07 iterations 472
Cbc0038I Pass  51: suminf.    0.31356 (3) obj. 3.92902e+07 iterations 252
Cbc0038I Pass  52: suminf.    0.48363 (3) obj. 3.92902e+07 iterations 1478
Cbc0038I Pass  53: suminf.    0.39440 (2) obj. 3.92902e+07 iterations 26
Cbc0038I Pass  54: suminf.    0.08223 (1) obj. 3.92902e+07 iterations 315
Cbc0038I Pass  55: suminf.    0.05149 (1) obj. 3.92902e+07 iterations 409
Cbc0038I Pass  56: suminf.    1.13168 (5) obj. 3.92902e+07 iterations 569
Cbc0038I Pass  57: suminf.    0.36844 (2) obj. 3.92902e+07 iterations 148
Cbc0038I Pass  58: suminf.    0.73970 (2) obj. 3.92902e+07 iterations 404
Cbc0038I Pass  59: suminf.    0.26550 (1) obj. 3.92902e+07 iterations 706
Cbc0038I Pass  60: suminf.    0.47360 (1) obj. 3.92902e+07 iterations 108
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 1688 continuous
Cbc0038I Full problem 1935 rows 1892 columns, reduced to 169 rows 172 columns
Cbc0038I Mini branch and bound did not improve solution (1.34 seconds)
Cbc0038I After 1.34 seconds - Feasibility pump exiting with objective of 3.94649e+07 - took 1.11 seconds
Cbc0012I Integer solution of 39464897 found by feasibility pump after 0 iterations and 0 nodes (1.34 seconds)
Cbc0038I Full problem 1935 rows 1892 columns, reduced to 180 rows 347 columns
Cbc0031I 5 added rows had average density of 53
Cbc0013I At root node, 5 cuts changed objective from 38591333 to 38651371 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 9 row cuts average 67.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 39464897 best solution, best possible 38651371 (1.59 seconds)
Cbc0030I Thread 0 used 20 times,  waiting to start 0.17173648,  100 locks, 0.0007994175 locked, 0.00011444092 waiting for locks
Cbc0030I Thread 1 used 13 times,  waiting to start 0.3608582,  62 locks, 0.00044441223 locked, 0.00021123886 waiting for locks
Cbc0030I Thread 2 used 7 times,  waiting to start 0.5238719,  35 locks, 0.00028157234 locked, 8.1062317e-06 waiting for locks
Cbc0030I Thread 3 used 6 times,  waiting to start 0.6032083,  28 locks, 0.00019431114 locked, 0.00011873245 waiting for locks
Cbc0030I Thread 4 used 3 times,  waiting to start 0.7244854,  15 locks, 0.0001718998 locked, 4.9829483e-05 waiting for locks
Cbc0030I Thread 5 used 1 times,  waiting to start 0.86725116,  4 locks, 9.1075897e-05 locked, 1.9073486e-06 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.8791101,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.87793899,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.87675309,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.87558198,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.87442899,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.87328386,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0.62277889 waiting for threads,  108 locks, 7.6532364e-05 locked, 0.00044059753 waiting for locks
Cbc0001I Search completed - best objective 39464897.25045364, took 3523 iterations and 50 nodes (2.46 seconds)
Cbc0032I Strong branching done 230 times (11386 iterations), fathomed 18 nodes and fixed 0 variables
Cbc0035I Maximum depth 7, 9 variables fixed on reduced cost
Cuts at root node changed objective from 3.85913e+07 to 3.86514e+07
Probing was tried 117 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.058 seconds)
Gomory was tried 117 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.068 seconds)
Knapsack was tried 117 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.132 seconds)
Clique was tried 117 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
MixedIntegerRounding2 was tried 145 times and created 117 cuts of which 0 were active after adding rounds of cuts (0.057 seconds)
FlowCover was tried 145 times and created 13 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)
TwoMirCuts was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                39464897.25045364
Enumerated nodes:               50
Total iterations:               3523
Time (CPU seconds):             3.65
Time (Wallclock seconds):       2.49

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.66   (Wallclock seconds):       2.50

