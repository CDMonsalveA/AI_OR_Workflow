Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/28852ba5f3a3480da9666dffc7793592-pulp.mps -sec 3600 -timeMode elapsed -branch -printingOptions all -solution /tmp/28852ba5f3a3480da9666dffc7793592-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 191 COLUMNS
At line 26418 RHS
At line 26605 BOUNDS
At line 26699 ENDATA
Problem MODEL has 186 rows, 8742 columns and 17391 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
Option for timeMode changed from cpu to elapsed
Continuous objective value is 8.08948e+07 - 0.01 seconds
Cgl0004I processed model has 186 rows, 8742 columns (93 integer (93 of which binary)) and 17391 elements
Cbc0038I Initial state - 93 integers unsatisfied sum - 14.7187
Cbc0038I Pass   1: suminf.    0.36742 (1) obj. 1.82084e+09 iterations 93
Cbc0038I Pass   2: suminf.    0.36742 (1) obj. 1.82084e+09 iterations 0
Cbc0038I Solution found of 1.82375e+09
Cbc0038I Relaxing continuous gives 9.55387e+08
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 8464 continuous
Cbc0038I Full problem 186 rows 8742 columns, reduced to 180 rows 266 columns
Cbc0038I Mini branch and bound improved solution from 9.55387e+08 to 3.32158e+08 (0.08 seconds)
Cbc0038I Freeing continuous variables gives a solution of 3.24459e+08
Cbc0038I Round again with cutoff of 3.00102e+08
Cbc0038I Pass   3: suminf.    4.40112 (31) obj. 3.00102e+08 iterations 160
Cbc0038I Pass   4: suminf.    3.00215 (23) obj. 3.00102e+08 iterations 23
Cbc0038I Pass   5: suminf.    0.51050 (4) obj. 3.00102e+08 iterations 99
Cbc0038I Pass   6: suminf.    0.41640 (2) obj. 3.00102e+08 iterations 19
Cbc0038I Pass   7: suminf.    0.41430 (2) obj. 3.00102e+08 iterations 2
Cbc0038I Pass   8: suminf.    0.28026 (1) obj. 3.00102e+08 iterations 7
Cbc0038I Pass   9: suminf.    0.20029 (1) obj. 3.00102e+08 iterations 11
Cbc0038I Pass  10: suminf.    1.05111 (5) obj. 3.00102e+08 iterations 77
Cbc0038I Pass  11: suminf.    0.57844 (4) obj. 3.00102e+08 iterations 10
Cbc0038I Pass  12: suminf.    0.28540 (1) obj. 3.00102e+08 iterations 32
Cbc0038I Pass  13: suminf.    0.19096 (1) obj. 3.00102e+08 iterations 12
Cbc0038I Pass  14: suminf.    0.00000 (0) obj. 3.00102e+08 iterations 100
Cbc0038I Solution found of 3.00102e+08
Cbc0038I Relaxing continuous gives 2.98591e+08
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 8401 continuous
Cbc0038I Full problem 186 rows 8742 columns, reduced to 162 rows 309 columns
Cbc0038I Mini branch and bound improved solution from 2.98591e+08 to 2.67825e+08 (0.23 seconds)
Cbc0038I Freeing continuous variables gives a solution of 2.66176e+08
Cbc0038I Round again with cutoff of 2.29119e+08
Cbc0038I Pass  15: suminf.    6.25796 (45) obj. 2.29119e+08 iterations 18
Cbc0038I Pass  16: suminf.    5.40562 (42) obj. 2.29119e+08 iterations 11
Cbc0038I Pass  17: suminf.    2.78232 (30) obj. 2.29119e+08 iterations 65
Cbc0038I Pass  18: suminf.    2.76480 (28) obj. 2.29119e+08 iterations 3
Cbc0038I Pass  19: suminf.    3.49882 (25) obj. 2.29119e+08 iterations 79
Cbc0038I Pass  20: suminf.    3.49120 (25) obj. 2.29119e+08 iterations 1
Cbc0038I Pass  21: suminf.    6.56704 (36) obj. 2.29119e+08 iterations 79
Cbc0038I Pass  22: suminf.    6.56704 (36) obj. 2.29119e+08 iterations 0
Cbc0038I Pass  23: suminf.    5.86071 (35) obj. 2.29119e+08 iterations 18
Cbc0038I Pass  24: suminf.    5.86071 (35) obj. 2.29119e+08 iterations 0
Cbc0038I Pass  25: suminf.    5.87015 (34) obj. 2.29119e+08 iterations 24
Cbc0038I Pass  26: suminf.    5.85323 (34) obj. 2.29119e+08 iterations 1
Cbc0038I Pass  27: suminf.    6.36048 (33) obj. 2.29119e+08 iterations 18
Cbc0038I Pass  28: suminf.    6.15572 (33) obj. 2.29119e+08 iterations 4
Cbc0038I Pass  29: suminf.    6.15803 (33) obj. 2.29119e+08 iterations 3
Cbc0038I Pass  30: suminf.    6.15803 (33) obj. 2.29119e+08 iterations 0
Cbc0038I Pass  31: suminf.    6.15572 (33) obj. 2.29119e+08 iterations 8
Cbc0038I Pass  32: suminf.    6.76792 (34) obj. 2.29119e+08 iterations 56
Cbc0038I Pass  33: suminf.    6.75703 (35) obj. 2.29119e+08 iterations 4
Cbc0038I Pass  34: suminf.    6.62298 (35) obj. 2.29119e+08 iterations 24
Cbc0038I Pass  35: suminf.    6.62298 (35) obj. 2.29119e+08 iterations 0
Cbc0038I Pass  36: suminf.    6.51161 (34) obj. 2.29119e+08 iterations 5
Cbc0038I Pass  37: suminf.    6.51161 (34) obj. 2.29119e+08 iterations 0
Cbc0038I Pass  38: suminf.    6.21809 (34) obj. 2.29119e+08 iterations 9
Cbc0038I Pass  39: suminf.    6.21809 (34) obj. 2.29119e+08 iterations 0
Cbc0038I Pass  40: suminf.    6.51161 (34) obj. 2.29119e+08 iterations 3
Cbc0038I Pass  41: suminf.    4.10034 (29) obj. 2.29119e+08 iterations 68
Cbc0038I Pass  42: suminf.    6.99561 (35) obj. 2.29119e+08 iterations 35
Cbc0038I Pass  43: suminf.    6.99561 (35) obj. 2.29119e+08 iterations 0
Cbc0038I Pass  44: suminf.    7.02838 (35) obj. 2.29119e+08 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 8468 continuous
Cbc0038I Full problem 186 rows 8742 columns, reduced to 128 rows 208 columns
Cbc0038I Mini branch and bound did not improve solution (0.38 seconds)
Cbc0038I After 0.38 seconds - Feasibility pump exiting with objective of 2.66176e+08 - took 0.34 seconds
Cbc0012I Integer solution of 2.661756e+08 found by feasibility pump after 0 iterations and 0 nodes (0.38 seconds)
Cbc0012I Integer solution of 2.6047015e+08 found by DiveCoefficient after 121 iterations and 0 nodes (0.54 seconds)
Cbc0031I 106 added rows had average density of 111.42453
Cbc0013I At root node, 106 cuts changed objective from 80894771 to 2.3499746e+08 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 99 row cuts average 100.5 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 111 row cuts average 110.6 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 2.6047015e+08 best solution, best possible 2.3499746e+08 (0.56 seconds)
Cbc0012I Integer solution of 2.5491979e+08 found by DiveCoefficient after 125 iterations and 1 nodes (0.59 seconds)
Cbc0012I Integer solution of 2.5202676e+08 found by DiveCoefficient after 127 iterations and 1 nodes (0.63 seconds)
Cbc0012I Integer solution of 2.5151612e+08 found by DiveCoefficient after 139 iterations and 5 nodes (0.84 seconds)
Cbc0004I Integer solution of 2.4974783e+08 found after 232 iterations and 39 nodes (1.22 seconds)
Cbc0038I Full problem 186 rows 8742 columns, reduced to 137 rows 4098 columns
Cbc0004I Integer solution of 2.4965018e+08 found after 292 iterations and 54 nodes (1.33 seconds)
Cbc0004I Integer solution of 2.4910445e+08 found after 351 iterations and 72 nodes (1.43 seconds)
Cbc0016I Integer solution of 2.490068e+08 found by strong branching after 358 iterations and 76 nodes (1.44 seconds)
Cbc0038I Full problem 186 rows 8742 columns, reduced to 139 rows 4285 columns
Cbc0010I After 100 nodes, 26 on tree, 2.490068e+08 best solution, best possible 2.3499746e+08 (1.58 seconds)
Cbc0038I Full problem 186 rows 8742 columns, reduced to 142 rows 4568 columns
Cbc0010I After 200 nodes, 51 on tree, 2.490068e+08 best solution, best possible 2.3499746e+08 (1.85 seconds)
Cbc0004I Integer solution of 2.4886724e+08 found after 718 iterations and 211 nodes (1.88 seconds)
Cbc0010I After 300 nodes, 59 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (2.06 seconds)
Cbc0038I Full problem 186 rows 8742 columns, reduced to 142 rows 4571 columns
Cbc0010I After 400 nodes, 68 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (2.31 seconds)
Cbc0038I Full problem 186 rows 8742 columns, reduced to 144 rows 4760 columns
Cbc0010I After 500 nodes, 81 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (2.81 seconds)
Cbc0010I After 600 nodes, 102 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (3.30 seconds)
Cbc0038I Full problem 186 rows 8742 columns, reduced to 144 rows 4759 columns
Cbc0010I After 700 nodes, 126 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (3.86 seconds)
Cbc0038I Full problem 186 rows 8742 columns, reduced to 144 rows 4760 columns
Cbc0010I After 800 nodes, 149 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (4.32 seconds)
Cbc0038I Full problem 186 rows 8742 columns, reduced to 144 rows 4761 columns
Cbc0010I After 900 nodes, 177 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (4.64 seconds)
Cbc0010I After 1000 nodes, 194 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (4.98 seconds)
Cbc0038I Full problem 186 rows 8742 columns, reduced to 147 rows 5043 columns
Cbc0010I After 1100 nodes, 200 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (5.44 seconds)
Cbc0038I Full problem 186 rows 8742 columns, reduced to 143 rows 4665 columns
Cbc0010I After 1200 nodes, 202 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (5.90 seconds)
Cbc0010I After 1300 nodes, 198 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (6.27 seconds)
Cbc0010I After 1400 nodes, 195 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (6.66 seconds)
Cbc0010I After 1500 nodes, 197 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (7.19 seconds)
Cbc0010I After 1600 nodes, 164 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (7.59 seconds)
Cbc0010I After 1700 nodes, 125 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (8.08 seconds)
Cbc0038I Full problem 186 rows 8742 columns, reduced to 143 rows 4664 columns
Cbc0010I After 1800 nodes, 107 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (8.77 seconds)
Cbc0010I After 1900 nodes, 101 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (9.49 seconds)
Cbc0010I After 2000 nodes, 88 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (10.21 seconds)
Cbc0010I After 2100 nodes, 75 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (10.88 seconds)
Cbc0010I After 2200 nodes, 58 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (11.57 seconds)
Cbc0010I After 2300 nodes, 43 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (12.39 seconds)
Cbc0038I Full problem 186 rows 8742 columns, reduced to 147 rows 5044 columns
Cbc0010I After 2400 nodes, 34 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (13.12 seconds)
Cbc0010I After 2500 nodes, 29 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (13.88 seconds)
Cbc0010I After 2600 nodes, 29 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (14.64 seconds)
Cbc0010I After 2700 nodes, 23 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (15.20 seconds)
Cbc0010I After 2800 nodes, 17 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (15.82 seconds)
Cbc0010I After 2900 nodes, 15 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (16.58 seconds)
Cbc0038I Full problem 186 rows 8742 columns, reduced to 147 rows 5043 columns
Cbc0010I After 3000 nodes, 17 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (17.21 seconds)
Cbc0010I After 3100 nodes, 15 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (17.80 seconds)
Cbc0010I After 3200 nodes, 17 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (18.32 seconds)
Cbc0010I After 3300 nodes, 16 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (18.76 seconds)
Cbc0010I After 3400 nodes, 15 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (19.27 seconds)
Cbc0010I After 3500 nodes, 12 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (19.77 seconds)
Cbc0010I After 3600 nodes, 16 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (20.39 seconds)
Cbc0010I After 3700 nodes, 12 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (21.11 seconds)
Cbc0010I After 3800 nodes, 12 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (21.77 seconds)
Cbc0010I After 3900 nodes, 11 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (22.19 seconds)
Cbc0010I After 4000 nodes, 13 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (22.72 seconds)
Cbc0010I After 4100 nodes, 12 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (23.22 seconds)
Cbc0038I Full problem 186 rows 8742 columns, reduced to 148 rows 5136 columns
Cbc0010I After 4200 nodes, 13 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (23.91 seconds)
Cbc0010I After 4300 nodes, 13 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (24.70 seconds)
Cbc0010I After 4400 nodes, 11 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (25.47 seconds)
Cbc0010I After 4500 nodes, 13 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (26.28 seconds)
Cbc0010I After 4600 nodes, 10 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (27.15 seconds)
Cbc0010I After 4700 nodes, 15 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (27.94 seconds)
Cbc0010I After 4800 nodes, 14 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (28.60 seconds)
Cbc0010I After 4900 nodes, 10 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (29.28 seconds)
Cbc0010I After 5000 nodes, 11 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (29.93 seconds)
Cbc0010I After 5100 nodes, 19 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (30.44 seconds)
Cbc0010I After 5200 nodes, 15 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (31.02 seconds)
Cbc0010I After 5300 nodes, 16 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (31.57 seconds)
Cbc0038I Full problem 186 rows 8742 columns, reduced to 146 rows 4949 columns
Cbc0010I After 5400 nodes, 15 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (32.34 seconds)
Cbc0010I After 5500 nodes, 12 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (33.01 seconds)
Cbc0010I After 5600 nodes, 13 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (33.72 seconds)
Cbc0010I After 5700 nodes, 8 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (34.35 seconds)
Cbc0010I After 5800 nodes, 5 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (35.14 seconds)
Cbc0010I After 5900 nodes, 7 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (35.87 seconds)
Cbc0038I Full problem 186 rows 8742 columns, reduced to 149 rows 5231 columns
Cbc0010I After 6000 nodes, 11 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (36.64 seconds)
Cbc0010I After 6100 nodes, 17 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (37.33 seconds)
Cbc0010I After 6200 nodes, 11 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (38.00 seconds)
Cbc0010I After 6300 nodes, 9 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (38.63 seconds)
Cbc0010I After 6400 nodes, 15 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (39.30 seconds)
Cbc0010I After 6500 nodes, 19 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (39.90 seconds)
Cbc0010I After 6600 nodes, 12 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (40.47 seconds)
Cbc0010I After 6700 nodes, 18 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (40.96 seconds)
Cbc0010I After 6800 nodes, 10 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (41.51 seconds)
Cbc0010I After 6900 nodes, 9 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (42.03 seconds)
Cbc0010I After 7000 nodes, 10 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (42.72 seconds)
Cbc0010I After 7100 nodes, 15 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (43.30 seconds)
Cbc0038I Full problem 186 rows 8742 columns, reduced to 143 rows 4664 columns
Cbc0010I After 7200 nodes, 15 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (43.95 seconds)
Cbc0010I After 7300 nodes, 13 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (44.57 seconds)
Cbc0010I After 7400 nodes, 10 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (45.15 seconds)
Cbc0010I After 7500 nodes, 6 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (45.90 seconds)
Cbc0010I After 7600 nodes, 10 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (46.53 seconds)
Cbc0010I After 7700 nodes, 14 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (47.22 seconds)
Cbc0010I After 7800 nodes, 12 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (47.87 seconds)
Cbc0010I After 7900 nodes, 12 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (48.57 seconds)
Cbc0010I After 8000 nodes, 10 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (49.24 seconds)
Cbc0010I After 8100 nodes, 10 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (49.92 seconds)
Cbc0010I After 8200 nodes, 9 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (50.81 seconds)
Cbc0010I After 8300 nodes, 13 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (51.48 seconds)
Cbc0010I After 8400 nodes, 16 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (52.10 seconds)
Cbc0038I Full problem 186 rows 8742 columns, reduced to 148 rows 5137 columns
Cbc0010I After 8500 nodes, 14 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (52.65 seconds)
Cbc0010I After 8600 nodes, 19 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (53.15 seconds)
Cbc0010I After 8700 nodes, 11 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (53.75 seconds)
Cbc0010I After 8800 nodes, 20 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (54.29 seconds)
Cbc0010I After 8900 nodes, 14 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (54.73 seconds)
Cbc0038I Full problem 186 rows 8742 columns, reduced to 143 rows 4665 columns
Cbc0010I After 9000 nodes, 15 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (55.31 seconds)
Cbc0010I After 9100 nodes, 20 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (55.70 seconds)
Cbc0010I After 9200 nodes, 18 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (56.30 seconds)
Cbc0010I After 9300 nodes, 18 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (56.95 seconds)
Cbc0010I After 9400 nodes, 14 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (57.58 seconds)
Cbc0010I After 9500 nodes, 11 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (58.19 seconds)
Cbc0010I After 9600 nodes, 10 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (58.68 seconds)
Cbc0010I After 9700 nodes, 7 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (59.30 seconds)
Cbc0010I After 9800 nodes, 9 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (59.87 seconds)
Cbc0010I After 9900 nodes, 11 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (60.40 seconds)
Cbc0010I After 10000 nodes, 7 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (61.03 seconds)
Cbc0010I After 10100 nodes, 11 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (61.54 seconds)
Cbc0010I After 10200 nodes, 11 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (62.09 seconds)
Cbc0010I After 10300 nodes, 10 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (62.40 seconds)
Cbc0010I After 10400 nodes, 7 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (62.78 seconds)
Cbc0010I After 10500 nodes, 7 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (63.51 seconds)
Cbc0010I After 10600 nodes, 9 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (64.16 seconds)
Cbc0010I After 10700 nodes, 9 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (64.83 seconds)
Cbc0010I After 10800 nodes, 12 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (65.45 seconds)
Cbc0010I After 10900 nodes, 11 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (66.15 seconds)
Cbc0010I After 11000 nodes, 11 on tree, 2.4886724e+08 best solution, best possible 2.3499746e+08 (66.83 seconds)
Cbc0012I Integer solution of 2.4868245e+08 found by DiveCoefficient after 42945 iterations and 11010 nodes (67.12 seconds)
Cbc0010I After 11100 nodes, 26 on tree, 2.4868245e+08 best solution, best possible 2.3853731e+08 (67.66 seconds)
Cbc0010I After 11200 nodes, 12 on tree, 2.4868245e+08 best solution, best possible 2.3853731e+08 (68.32 seconds)
Cbc0012I Integer solution of 2.4845321e+08 found by DiveCoefficient after 43662 iterations and 11215 nodes (68.47 seconds)
Cbc0010I After 11300 nodes, 44 on tree, 2.4845321e+08 best solution, best possible 2.3853731e+08 (68.95 seconds)
Cbc0010I After 11400 nodes, 75 on tree, 2.4845321e+08 best solution, best possible 2.3853731e+08 (69.39 seconds)
Cbc0004I Integer solution of 2.4831366e+08 found after 44182 iterations and 11426 nodes (69.47 seconds)
Cbc0010I After 11500 nodes, 91 on tree, 2.4831366e+08 best solution, best possible 2.3853731e+08 (69.78 seconds)
Cbc0010I After 11600 nodes, 116 on tree, 2.4831366e+08 best solution, best possible 2.3853731e+08 (70.19 seconds)
Cbc0010I After 11700 nodes, 134 on tree, 2.4831366e+08 best solution, best possible 2.3853731e+08 (70.64 seconds)
Cbc0010I After 11800 nodes, 146 on tree, 2.4831366e+08 best solution, best possible 2.3853731e+08 (71.13 seconds)
Cbc0010I After 11900 nodes, 148 on tree, 2.4831366e+08 best solution, best possible 2.3853731e+08 (71.55 seconds)
Cbc0010I After 12000 nodes, 155 on tree, 2.4831366e+08 best solution, best possible 2.3853731e+08 (71.97 seconds)
Cbc0010I After 12100 nodes, 204 on tree, 2.4831366e+08 best solution, best possible 2.4207296e+08 (73.22 seconds)
Cbc0010I After 12200 nodes, 254 on tree, 2.4831366e+08 best solution, best possible 2.4301576e+08 (73.97 seconds)
Cbc0010I After 12300 nodes, 304 on tree, 2.4831366e+08 best solution, best possible 2.435375e+08 (74.64 seconds)
Cbc0010I After 12400 nodes, 354 on tree, 2.4831366e+08 best solution, best possible 2.4391108e+08 (75.18 seconds)
Cbc0010I After 12500 nodes, 404 on tree, 2.4831366e+08 best solution, best possible 2.4417786e+08 (75.69 seconds)
Cbc0010I After 12600 nodes, 454 on tree, 2.4831366e+08 best solution, best possible 2.4446541e+08 (76.11 seconds)
Cbc0010I After 12700 nodes, 504 on tree, 2.4831366e+08 best solution, best possible 2.4463706e+08 (76.55 seconds)
Cbc0010I After 12800 nodes, 554 on tree, 2.4831366e+08 best solution, best possible 2.447901e+08 (76.91 seconds)
Cbc0010I After 12900 nodes, 604 on tree, 2.4831366e+08 best solution, best possible 2.4491501e+08 (77.26 seconds)
Cbc0010I After 13000 nodes, 654 on tree, 2.4831366e+08 best solution, best possible 2.4505589e+08 (77.59 seconds)
Cbc0010I After 13100 nodes, 620 on tree, 2.4831366e+08 best solution, best possible 2.4505589e+08 (77.99 seconds)
Cbc0010I After 13200 nodes, 599 on tree, 2.4831366e+08 best solution, best possible 2.4505589e+08 (78.52 seconds)
Cbc0010I After 13300 nodes, 572 on tree, 2.4831366e+08 best solution, best possible 2.4505589e+08 (79.01 seconds)
Cbc0010I After 13400 nodes, 551 on tree, 2.4831366e+08 best solution, best possible 2.4505589e+08 (79.66 seconds)
Cbc0010I After 13500 nodes, 528 on tree, 2.4831366e+08 best solution, best possible 2.4505589e+08 (80.30 seconds)
Cbc0010I After 13600 nodes, 510 on tree, 2.4831366e+08 best solution, best possible 2.4505589e+08 (81.03 seconds)
Cbc0010I After 13700 nodes, 504 on tree, 2.4831366e+08 best solution, best possible 2.4505589e+08 (81.73 seconds)
Cbc0010I After 13800 nodes, 495 on tree, 2.4831366e+08 best solution, best possible 2.4505589e+08 (82.44 seconds)
Cbc0010I After 13900 nodes, 487 on tree, 2.4831366e+08 best solution, best possible 2.4505589e+08 (83.11 seconds)
Cbc0010I After 14000 nodes, 473 on tree, 2.4831366e+08 best solution, best possible 2.4505589e+08 (83.81 seconds)
Cbc0010I After 14100 nodes, 523 on tree, 2.4831366e+08 best solution, best possible 2.4518474e+08 (84.81 seconds)
Cbc0010I After 14200 nodes, 573 on tree, 2.4831366e+08 best solution, best possible 2.4532437e+08 (85.93 seconds)
Cbc0010I After 14300 nodes, 623 on tree, 2.4831366e+08 best solution, best possible 2.4543392e+08 (87.04 seconds)
Cbc0038I Full problem 186 rows 8742 columns, reduced to 147 rows 5043 columns
Cbc0010I After 14400 nodes, 673 on tree, 2.4831366e+08 best solution, best possible 2.4552794e+08 (88.16 seconds)
Cbc0010I After 14500 nodes, 722 on tree, 2.4831366e+08 best solution, best possible 2.4563278e+08 (89.19 seconds)
Cbc0010I After 14600 nodes, 772 on tree, 2.4831366e+08 best solution, best possible 2.4571232e+08 (90.27 seconds)
Cbc0010I After 14700 nodes, 816 on tree, 2.4831366e+08 best solution, best possible 2.457732e+08 (91.35 seconds)
Cbc0010I After 14800 nodes, 854 on tree, 2.4831366e+08 best solution, best possible 2.4584579e+08 (92.40 seconds)
Cbc0010I After 14900 nodes, 892 on tree, 2.4831366e+08 best solution, best possible 2.4591172e+08 (93.50 seconds)
Cbc0010I After 15000 nodes, 933 on tree, 2.4831366e+08 best solution, best possible 2.459604e+08 (94.59 seconds)
Cbc0010I After 15100 nodes, 965 on tree, 2.4831366e+08 best solution, best possible 2.460138e+08 (95.74 seconds)
Cbc0010I After 15200 nodes, 994 on tree, 2.4831366e+08 best solution, best possible 2.4607239e+08 (96.86 seconds)
Cbc0010I After 15300 nodes, 1022 on tree, 2.4831366e+08 best solution, best possible 2.4611999e+08 (98.03 seconds)
Cbc0010I After 15400 nodes, 1054 on tree, 2.4831366e+08 best solution, best possible 2.4617038e+08 (99.17 seconds)
Cbc0010I After 15500 nodes, 1075 on tree, 2.4831366e+08 best solution, best possible 2.462298e+08 (100.23 seconds)
Cbc0010I After 15600 nodes, 1081 on tree, 2.4831366e+08 best solution, best possible 2.4629909e+08 (101.21 seconds)
Cbc0010I After 15700 nodes, 1098 on tree, 2.4831366e+08 best solution, best possible 2.464e+08 (102.20 seconds)
Cbc0010I After 15800 nodes, 1097 on tree, 2.4831366e+08 best solution, best possible 2.4663721e+08 (103.19 seconds)
Cbc0010I After 15900 nodes, 1070 on tree, 2.4831366e+08 best solution, best possible 2.4672017e+08 (103.94 seconds)
Cbc0010I After 16000 nodes, 1037 on tree, 2.4831366e+08 best solution, best possible 2.4678587e+08 (104.66 seconds)
Cbc0010I After 16100 nodes, 998 on tree, 2.4831366e+08 best solution, best possible 2.468581e+08 (105.35 seconds)
Cbc0010I After 16200 nodes, 954 on tree, 2.4831366e+08 best solution, best possible 2.4691208e+08 (106.02 seconds)
Cbc0010I After 16300 nodes, 916 on tree, 2.4831366e+08 best solution, best possible 2.4696932e+08 (106.63 seconds)
Cbc0010I After 16400 nodes, 870 on tree, 2.4831366e+08 best solution, best possible 2.4703728e+08 (107.19 seconds)
Cbc0010I After 16500 nodes, 823 on tree, 2.4831366e+08 best solution, best possible 2.4712459e+08 (107.75 seconds)
Cbc0010I After 16600 nodes, 779 on tree, 2.4831366e+08 best solution, best possible 2.4719654e+08 (108.28 seconds)
Cbc0010I After 16700 nodes, 731 on tree, 2.4831366e+08 best solution, best possible 2.4727521e+08 (108.78 seconds)
Cbc0010I After 16800 nodes, 682 on tree, 2.4831366e+08 best solution, best possible 2.4737003e+08 (109.18 seconds)
Cbc0010I After 16900 nodes, 636 on tree, 2.4831366e+08 best solution, best possible 2.4744305e+08 (109.58 seconds)
Cbc0010I After 17000 nodes, 586 on tree, 2.4831366e+08 best solution, best possible 2.4749241e+08 (109.98 seconds)
Cbc0010I After 17100 nodes, 544 on tree, 2.4831366e+08 best solution, best possible 2.4749241e+08 (110.24 seconds)
Cbc0010I After 17200 nodes, 499 on tree, 2.4831366e+08 best solution, best possible 2.4749241e+08 (110.51 seconds)
Cbc0010I After 17300 nodes, 452 on tree, 2.4831366e+08 best solution, best possible 2.4749241e+08 (110.81 seconds)
Cbc0010I After 17400 nodes, 403 on tree, 2.4831366e+08 best solution, best possible 2.4749241e+08 (111.13 seconds)
Cbc0010I After 17500 nodes, 352 on tree, 2.4831366e+08 best solution, best possible 2.4749241e+08 (111.47 seconds)
Cbc0010I After 17600 nodes, 302 on tree, 2.4831366e+08 best solution, best possible 2.4749241e+08 (111.75 seconds)
Cbc0010I After 17700 nodes, 252 on tree, 2.4831366e+08 best solution, best possible 2.4749241e+08 (112.03 seconds)
Cbc0010I After 17800 nodes, 202 on tree, 2.4831366e+08 best solution, best possible 2.4749321e+08 (112.31 seconds)
Cbc0010I After 17900 nodes, 152 on tree, 2.4831366e+08 best solution, best possible 2.4749321e+08 (112.59 seconds)
Cbc0010I After 18000 nodes, 102 on tree, 2.4831366e+08 best solution, best possible 2.4750251e+08 (112.92 seconds)
Cbc0010I After 18100 nodes, 52 on tree, 2.4831366e+08 best solution, best possible 2.4784427e+08 (113.25 seconds)
Cbc0010I After 18200 nodes, 2 on tree, 2.4831366e+08 best solution, best possible 2.4828792e+08 (113.47 seconds)
Cbc0001I Search completed - best objective 248313656.3981953, took 69413 iterations and 18204 nodes (113.48 seconds)
Cbc0032I Strong branching done 44560 times (101488 iterations), fathomed 3795 nodes and fixed 8126 variables
Cbc0035I Maximum depth 26, 881 variables fixed on reduced cost
Cuts at root node changed objective from 8.08948e+07 to 2.34997e+08
Probing was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
Gomory was tried 4 times and created 99 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Knapsack was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
TwoMirCuts was tried 12921 times and created 112 cuts of which 0 were active after adding rounds of cuts (2.997 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                248313656.39819527
Enumerated nodes:               18204
Total iterations:               69413
Time (CPU seconds):             113.41
Time (Wallclock seconds):       113.49

Option for printingOptions changed from normal to all
Total time (CPU seconds):       113.43   (Wallclock seconds):       113.51

