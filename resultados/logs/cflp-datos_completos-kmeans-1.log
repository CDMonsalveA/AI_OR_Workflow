Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/9d2bd09431b84a70ada3d875215621b5-pulp.mps -sec 3600 -timeMode elapsed -branch -printingOptions all -solution /tmp/9d2bd09431b84a70ada3d875215621b5-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 209 COLUMNS
At line 31728 RHS
At line 31933 BOUNDS
At line 32036 ENDATA
Problem MODEL has 204 rows, 10506 columns and 20910 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.417e+08 - 0.01 seconds
Cgl0004I processed model has 204 rows, 10506 columns (102 integer (102 of which binary)) and 20910 elements
Cbc0038I Initial state - 102 integers unsatisfied sum - 17.1547
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.22876e+09 iterations 103
Cbc0038I Solution found of 1.22876e+09
Cbc0038I Relaxing continuous gives 1.07147e+09
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 10201 continuous
Cbc0038I Full problem 204 rows 10506 columns, reduced to 199 rows 295 columns
Cbc0038I Mini branch and bound improved solution from 1.07147e+09 to 4.21805e+08 (0.14 seconds)
Cbc0038I Freeing continuous variables gives a solution of 3.91027e+08
Cbc0038I Round again with cutoff of 3.66094e+08
Cbc0038I Pass   2: suminf.    5.72733 (33) obj. 3.66094e+08 iterations 169
Cbc0038I Pass   3: suminf.    5.07854 (30) obj. 3.66094e+08 iterations 22
Cbc0038I Pass   4: suminf.    1.23729 (9) obj. 3.66094e+08 iterations 95
Cbc0038I Pass   5: suminf.    1.19962 (9) obj. 3.66094e+08 iterations 1
Cbc0038I Pass   6: suminf.    0.35764 (1) obj. 3.66094e+08 iterations 62
Cbc0038I Pass   7: suminf.    0.20672 (1) obj. 3.66094e+08 iterations 19
Cbc0038I Pass   8: suminf.    0.19549 (1) obj. 3.66094e+08 iterations 112
Cbc0038I Pass   9: suminf.    0.34609 (1) obj. 3.66094e+08 iterations 19
Cbc0038I Pass  10: suminf.    0.19549 (1) obj. 3.66094e+08 iterations 26
Cbc0038I Pass  11: suminf.    0.52911 (2) obj. 3.66094e+08 iterations 97
Cbc0038I Pass  12: suminf.    0.31165 (1) obj. 3.66094e+08 iterations 21
Cbc0038I Pass  13: suminf.    0.27685 (1) obj. 3.66094e+08 iterations 15
Cbc0038I Pass  14: suminf.    0.12809 (1) obj. 3.66094e+08 iterations 100
Cbc0038I Pass  15: suminf.    0.39279 (1) obj. 3.66094e+08 iterations 18
Cbc0038I Pass  16: suminf.    0.12809 (1) obj. 3.66094e+08 iterations 40
Cbc0038I Pass  17: suminf.    0.57191 (3) obj. 3.66094e+08 iterations 97
Cbc0038I Pass  18: suminf.    0.39541 (1) obj. 3.66094e+08 iterations 35
Cbc0038I Pass  19: suminf.    0.16165 (1) obj. 3.66094e+08 iterations 27
Cbc0038I Pass  20: suminf.    0.79167 (6) obj. 3.66094e+08 iterations 101
Cbc0038I Pass  21: suminf.    0.35649 (2) obj. 3.66094e+08 iterations 29
Cbc0038I Pass  22: suminf.    0.35602 (2) obj. 3.66094e+08 iterations 2
Cbc0038I Pass  23: suminf.    0.33268 (2) obj. 3.66094e+08 iterations 11
Cbc0038I Pass  24: suminf.    0.33410 (2) obj. 3.66094e+08 iterations 1
Cbc0038I Pass  25: suminf.    0.31247 (1) obj. 3.66094e+08 iterations 10
Cbc0038I Pass  26: suminf.    0.28195 (1) obj. 3.66094e+08 iterations 12
Cbc0038I Pass  27: suminf.    0.04231 (1) obj. 3.66094e+08 iterations 89
Cbc0038I Pass  28: suminf.    0.40076 (1) obj. 3.66094e+08 iterations 18
Cbc0038I Pass  29: suminf.    0.04231 (1) obj. 3.66094e+08 iterations 47
Cbc0038I Pass  30: suminf.    0.50882 (2) obj. 3.66094e+08 iterations 99
Cbc0038I Pass  31: suminf.    0.38628 (1) obj. 3.66094e+08 iterations 20
Cbc0038I Rounding solution of 3.71309e+08 is better than previous of 3.91027e+08

Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 10044 continuous
Cbc0038I Full problem 204 rows 10506 columns, reduced to 194 rows 444 columns
Cbc0038I Mini branch and bound improved solution from 3.71309e+08 to 3.58024e+08 (0.39 seconds)
Cbc0038I Freeing continuous variables gives a solution of 3.52731e+08
Cbc0038I Round again with cutoff of 3.10525e+08
Cbc0038I Pass  31: suminf.    7.11223 (43) obj. 3.10525e+08 iterations 14
Cbc0038I Pass  32: suminf.    5.86639 (43) obj. 3.10525e+08 iterations 23
Cbc0038I Pass  33: suminf.    5.28174 (39) obj. 3.10525e+08 iterations 18
Cbc0038I Pass  34: suminf.    2.35047 (22) obj. 3.10525e+08 iterations 55
Cbc0038I Pass  35: suminf.    2.34755 (22) obj. 3.10525e+08 iterations 1
Cbc0038I Pass  36: suminf.    0.96986 (11) obj. 3.10525e+08 iterations 89
Cbc0038I Pass  37: suminf.    0.96986 (11) obj. 3.10525e+08 iterations 0
Cbc0038I Pass  38: suminf.    1.23773 (6) obj. 3.10525e+08 iterations 42
Cbc0038I Pass  39: suminf.    1.23773 (6) obj. 3.10525e+08 iterations 0
Cbc0038I Pass  40: suminf.    0.92664 (6) obj. 3.10525e+08 iterations 19
Cbc0038I Pass  41: suminf.    0.92664 (6) obj. 3.10525e+08 iterations 0
Cbc0038I Pass  42: suminf.    1.03492 (7) obj. 3.10525e+08 iterations 31
Cbc0038I Pass  43: suminf.    1.03492 (7) obj. 3.10525e+08 iterations 0
Cbc0038I Pass  44: suminf.    1.76876 (10) obj. 3.10525e+08 iterations 22
Cbc0038I Pass  45: suminf.    1.68331 (10) obj. 3.10525e+08 iterations 3
Cbc0038I Pass  46: suminf.    3.98652 (19) obj. 3.10525e+08 iterations 27
Cbc0038I Pass  47: suminf.    3.98652 (19) obj. 3.10525e+08 iterations 0
Cbc0038I Pass  48: suminf.    5.80191 (27) obj. 3.10525e+08 iterations 39
Cbc0038I Pass  49: suminf.    5.71217 (26) obj. 3.10525e+08 iterations 4
Cbc0038I Pass  50: suminf.    6.02743 (25) obj. 3.10525e+08 iterations 22
Cbc0038I Pass  51: suminf.    5.20166 (23) obj. 3.10525e+08 iterations 11
Cbc0038I Pass  52: suminf.    5.33909 (25) obj. 3.10525e+08 iterations 16
Cbc0038I Pass  53: suminf.    5.08483 (23) obj. 3.10525e+08 iterations 8
Cbc0038I Pass  54: suminf.    5.64962 (26) obj. 3.10525e+08 iterations 12
Cbc0038I Pass  55: suminf.    5.09667 (23) obj. 3.10525e+08 iterations 11
Cbc0038I Pass  56: suminf.    3.73915 (20) obj. 3.10525e+08 iterations 52
Cbc0038I Pass  57: suminf.    2.64617 (19) obj. 3.10525e+08 iterations 36
Cbc0038I Pass  58: suminf.    2.64617 (19) obj. 3.10525e+08 iterations 0
Cbc0038I Pass  59: suminf.    3.76328 (22) obj. 3.10525e+08 iterations 31
Cbc0038I Pass  60: suminf.    3.55592 (22) obj. 3.10525e+08 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 10159 continuous
Cbc0038I Full problem 204 rows 10506 columns, reduced to 170 rows 303 columns
Cbc0038I Mini branch and bound improved solution from 3.52731e+08 to 3.46364e+08 (0.57 seconds)
Cbc0038I Freeing continuous variables gives a solution of 3.40923e+08
Cbc0038I Round again with cutoff of 2.59877e+08
Cbc0038I Pass  60: suminf.    8.50171 (53) obj. 2.59877e+08 iterations 13
Cbc0038I Pass  61: suminf.    6.98763 (49) obj. 2.59877e+08 iterations 30
Cbc0038I Pass  62: suminf.    2.79645 (29) obj. 2.59877e+08 iterations 92
Cbc0038I Pass  63: suminf.    2.79645 (29) obj. 2.59877e+08 iterations 0
Cbc0038I Pass  64: suminf.    2.50092 (26) obj. 2.59877e+08 iterations 74
Cbc0038I Pass  65: suminf.    2.50092 (26) obj. 2.59877e+08 iterations 0
Cbc0038I Pass  66: suminf.    7.81464 (45) obj. 2.59877e+08 iterations 84
Cbc0038I Pass  67: suminf.    7.62076 (44) obj. 2.59877e+08 iterations 6
Cbc0038I Pass  68: suminf.    7.56589 (45) obj. 2.59877e+08 iterations 23
Cbc0038I Pass  69: suminf.    7.17727 (47) obj. 2.59877e+08 iterations 7
Cbc0038I Pass  70: suminf.    7.39030 (46) obj. 2.59877e+08 iterations 9
Cbc0038I Pass  71: suminf.    7.95315 (48) obj. 2.59877e+08 iterations 79
Cbc0038I Pass  72: suminf.    7.52620 (46) obj. 2.59877e+08 iterations 7
Cbc0038I Pass  73: suminf.    6.92551 (43) obj. 2.59877e+08 iterations 6
Cbc0038I Pass  74: suminf.    8.48592 (47) obj. 2.59877e+08 iterations 31
Cbc0038I Pass  75: suminf.    7.64503 (45) obj. 2.59877e+08 iterations 4
Cbc0038I Pass  76: suminf.    7.01220 (45) obj. 2.59877e+08 iterations 7
Cbc0038I Pass  77: suminf.    8.69174 (48) obj. 2.59877e+08 iterations 23
Cbc0038I Pass  78: suminf.    7.57623 (46) obj. 2.59877e+08 iterations 7
Cbc0038I Pass  79: suminf.    7.59412 (46) obj. 2.59877e+08 iterations 22
Cbc0038I Pass  80: suminf.    7.13496 (45) obj. 2.59877e+08 iterations 8
Cbc0038I Pass  81: suminf.    7.85521 (48) obj. 2.59877e+08 iterations 22
Cbc0038I Pass  82: suminf.    9.48033 (51) obj. 2.59877e+08 iterations 58
Cbc0038I Pass  83: suminf.    8.39440 (50) obj. 2.59877e+08 iterations 7
Cbc0038I Pass  84: suminf.    8.54603 (48) obj. 2.59877e+08 iterations 9
Cbc0038I Pass  85: suminf.    8.54603 (48) obj. 2.59877e+08 iterations 0
Cbc0038I Pass  86: suminf.    8.03761 (47) obj. 2.59877e+08 iterations 21
Cbc0038I Pass  87: suminf.    7.71859 (47) obj. 2.59877e+08 iterations 8
Cbc0038I Pass  88: suminf.    8.91221 (47) obj. 2.59877e+08 iterations 15
Cbc0038I Pass  89: suminf.    7.84588 (48) obj. 2.59877e+08 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 10202 continuous
Cbc0038I Full problem 204 rows 10506 columns, reduced to 144 rows 234 columns
Cbc0038I Mini branch and bound did not improve solution (0.71 seconds)
Cbc0038I After 0.71 seconds - Feasibility pump exiting with objective of 3.40923e+08 - took 0.67 seconds
Cbc0012I Integer solution of 3.4092289e+08 found by feasibility pump after 0 iterations and 0 nodes (0.71 seconds)
Cbc0012I Integer solution of 3.3495009e+08 found by DiveCoefficient after 141 iterations and 0 nodes (0.93 seconds)
Cbc0031I 114 added rows had average density of 127.05263
Cbc0013I At root node, 114 cuts changed objective from 1.4169954e+08 to 3.1032697e+08 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 108 row cuts average 108.6 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 129 row cuts average 129.7 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 3.3495009e+08 best solution, best possible 3.1032697e+08 (0.95 seconds)
Cbc0012I Integer solution of 3.3244421e+08 found by DiveCoefficient after 144 iterations and 1 nodes (1.01 seconds)
Cbc0012I Integer solution of 3.3244235e+08 found by DiveCoefficient after 148 iterations and 3 nodes (1.12 seconds)
Cbc0012I Integer solution of 3.3233904e+08 found by DiveCoefficient after 151 iterations and 4 nodes (1.20 seconds)
Cbc0012I Integer solution of 3.3180869e+08 found by DiveCoefficient after 164 iterations and 5 nodes (1.29 seconds)
Cbc0012I Integer solution of 3.2971485e+08 found by DiveCoefficient after 168 iterations and 7 nodes (1.38 seconds)
Cbc0012I Integer solution of 3.2877547e+08 found by DiveCoefficient after 200 iterations and 17 nodes (1.54 seconds)
Cbc0016I Integer solution of 3.2315931e+08 found by strong branching after 238 iterations and 33 nodes (1.70 seconds)
Cbc0038I Full problem 204 rows 10506 columns, reduced to 149 rows 4806 columns
Cbc0004I Integer solution of 3.2250082e+08 found after 306 iterations and 55 nodes (1.86 seconds)
Cbc0038I Full problem 204 rows 10506 columns, reduced to 156 rows 5532 columns
Cbc0010I After 100 nodes, 26 on tree, 3.2250082e+08 best solution, best possible 3.1032697e+08 (2.23 seconds)
Cbc0004I Integer solution of 3.2246164e+08 found after 623 iterations and 131 nodes (2.43 seconds)
Cbc0004I Integer solution of 3.222249e+08 found after 792 iterations and 169 nodes (2.72 seconds)
Cbc0038I Full problem 204 rows 10506 columns, reduced to 154 rows 5324 columns
Cbc0010I After 200 nodes, 27 on tree, 3.222249e+08 best solution, best possible 3.1032697e+08 (2.98 seconds)
Cbc0038I Full problem 204 rows 10506 columns, reduced to 149 rows 4808 columns
Cbc0010I After 300 nodes, 42 on tree, 3.222249e+08 best solution, best possible 3.1032697e+08 (3.76 seconds)
Cbc0038I Full problem 204 rows 10506 columns, reduced to 144 rows 4292 columns
Cbc0010I After 400 nodes, 38 on tree, 3.222249e+08 best solution, best possible 3.1032697e+08 (4.44 seconds)
Cbc0038I Full problem 204 rows 10506 columns, reduced to 148 rows 4705 columns
Cbc0010I After 500 nodes, 37 on tree, 3.222249e+08 best solution, best possible 3.1032697e+08 (5.32 seconds)
Cbc0010I After 600 nodes, 27 on tree, 3.222249e+08 best solution, best possible 3.1032697e+08 (6.10 seconds)
Cbc0038I Full problem 204 rows 10506 columns, reduced to 155 rows 5427 columns
Cbc0010I After 700 nodes, 14 on tree, 3.222249e+08 best solution, best possible 3.1032697e+08 (6.99 seconds)
Cbc0038I Full problem 204 rows 10506 columns, reduced to 150 rows 4912 columns
Cbc0010I After 800 nodes, 22 on tree, 3.222249e+08 best solution, best possible 3.1032697e+08 (8.02 seconds)
Cbc0038I Full problem 204 rows 10506 columns, reduced to 153 rows 5221 columns
Cbc0010I After 900 nodes, 27 on tree, 3.222249e+08 best solution, best possible 3.1032697e+08 (8.79 seconds)
Cbc0010I After 1000 nodes, 8 on tree, 3.222249e+08 best solution, best possible 3.1032697e+08 (9.50 seconds)
Cbc0010I After 1100 nodes, 17 on tree, 3.222249e+08 best solution, best possible 3.1032697e+08 (10.31 seconds)
Cbc0038I Full problem 204 rows 10506 columns, reduced to 153 rows 5221 columns
Cbc0010I After 1200 nodes, 11 on tree, 3.222249e+08 best solution, best possible 3.1032697e+08 (11.09 seconds)
Cbc0010I After 1300 nodes, 11 on tree, 3.222249e+08 best solution, best possible 3.1032697e+08 (11.98 seconds)
Cbc0010I After 1400 nodes, 7 on tree, 3.222249e+08 best solution, best possible 3.1032697e+08 (12.87 seconds)
Cbc0010I After 1500 nodes, 7 on tree, 3.222249e+08 best solution, best possible 3.1032697e+08 (13.80 seconds)
Cbc0010I After 1600 nodes, 7 on tree, 3.222249e+08 best solution, best possible 3.1032697e+08 (14.50 seconds)
Cbc0004I Integer solution of 3.2208182e+08 found after 8340 iterations and 1672 nodes (15.13 seconds)
Cbc0004I Integer solution of 3.2200676e+08 found after 8344 iterations and 1675 nodes (15.14 seconds)
Cbc0010I After 1700 nodes, 19 on tree, 3.2200676e+08 best solution, best possible 3.1032697e+08 (15.38 seconds)
Cbc0010I After 1800 nodes, 55 on tree, 3.2200676e+08 best solution, best possible 3.1032697e+08 (16.19 seconds)
Cbc0010I After 1900 nodes, 53 on tree, 3.2200676e+08 best solution, best possible 3.1032697e+08 (16.84 seconds)
Cbc0010I After 2000 nodes, 26 on tree, 3.2200676e+08 best solution, best possible 3.1032697e+08 (17.59 seconds)
Cbc0010I After 2100 nodes, 30 on tree, 3.2200676e+08 best solution, best possible 3.1032697e+08 (18.57 seconds)
Cbc0010I After 2200 nodes, 6 on tree, 3.2200676e+08 best solution, best possible 3.1032697e+08 (19.33 seconds)
Cbc0010I After 2300 nodes, 4 on tree, 3.2200676e+08 best solution, best possible 3.1032697e+08 (20.44 seconds)
Cbc0038I Full problem 204 rows 10506 columns, reduced to 156 rows 5531 columns
Cbc0010I After 2400 nodes, 23 on tree, 3.2200676e+08 best solution, best possible 3.1032697e+08 (21.42 seconds)
Cbc0010I After 2500 nodes, 6 on tree, 3.2200676e+08 best solution, best possible 3.1032697e+08 (22.18 seconds)
Cbc0010I After 2600 nodes, 13 on tree, 3.2200676e+08 best solution, best possible 3.1032697e+08 (23.32 seconds)
Cbc0010I After 2700 nodes, 18 on tree, 3.2200676e+08 best solution, best possible 3.1032697e+08 (24.39 seconds)
Cbc0010I After 2800 nodes, 8 on tree, 3.2200676e+08 best solution, best possible 3.1032697e+08 (25.16 seconds)
Cbc0010I After 2900 nodes, 7 on tree, 3.2200676e+08 best solution, best possible 3.1032697e+08 (26.02 seconds)
Cbc0010I After 3000 nodes, 10 on tree, 3.2200676e+08 best solution, best possible 3.1032697e+08 (27.00 seconds)
Cbc0010I After 3100 nodes, 10 on tree, 3.2200676e+08 best solution, best possible 3.1032697e+08 (28.09 seconds)
Cbc0010I After 3200 nodes, 23 on tree, 3.2200676e+08 best solution, best possible 3.1196855e+08 (29.04 seconds)
Cbc0010I After 3300 nodes, 38 on tree, 3.2200676e+08 best solution, best possible 3.1196855e+08 (30.20 seconds)
Cbc0010I After 3400 nodes, 9 on tree, 3.2200676e+08 best solution, best possible 3.1196855e+08 (31.04 seconds)
Cbc0010I After 3500 nodes, 12 on tree, 3.2200676e+08 best solution, best possible 3.1196855e+08 (32.28 seconds)
Cbc0010I After 3600 nodes, 12 on tree, 3.2200676e+08 best solution, best possible 3.1196855e+08 (33.11 seconds)
Cbc0038I Full problem 204 rows 10506 columns, reduced to 154 rows 5326 columns
Cbc0010I After 3700 nodes, 7 on tree, 3.2200676e+08 best solution, best possible 3.1196855e+08 (33.89 seconds)
Cbc0010I After 3800 nodes, 12 on tree, 3.2200676e+08 best solution, best possible 3.1196855e+08 (34.71 seconds)
Cbc0010I After 3900 nodes, 7 on tree, 3.2200676e+08 best solution, best possible 3.1196855e+08 (35.57 seconds)
Cbc0010I After 4000 nodes, 7 on tree, 3.2200676e+08 best solution, best possible 3.1196855e+08 (36.50 seconds)
Cbc0010I After 4100 nodes, 2 on tree, 3.2200676e+08 best solution, best possible 3.1196855e+08 (37.47 seconds)
Cbc0010I After 4200 nodes, 28 on tree, 3.2200676e+08 best solution, best possible 3.137517e+08 (38.34 seconds)
Cbc0010I After 4300 nodes, 19 on tree, 3.2200676e+08 best solution, best possible 3.137517e+08 (39.28 seconds)
Cbc0010I After 4400 nodes, 11 on tree, 3.2200676e+08 best solution, best possible 3.137517e+08 (40.09 seconds)
Cbc0010I After 4500 nodes, 13 on tree, 3.2200676e+08 best solution, best possible 3.137517e+08 (40.96 seconds)
Cbc0010I After 4600 nodes, 4 on tree, 3.2200676e+08 best solution, best possible 3.137517e+08 (42.03 seconds)
Cbc0010I After 4700 nodes, 14 on tree, 3.2200676e+08 best solution, best possible 3.1529962e+08 (42.99 seconds)
Cbc0038I Full problem 204 rows 10506 columns, reduced to 156 rows 5532 columns
Cbc0010I After 4800 nodes, 5 on tree, 3.2200676e+08 best solution, best possible 3.1529962e+08 (43.89 seconds)
Cbc0010I After 4900 nodes, 2 on tree, 3.2200676e+08 best solution, best possible 3.2130237e+08 (44.77 seconds)
Cbc0001I Search completed - best objective 322006759.7526923, took 25487 iterations and 4906 nodes (44.79 seconds)
Cbc0032I Strong branching done 15676 times (61086 iterations), fathomed 718 nodes and fixed 2798 variables
Cbc0035I Maximum depth 26, 601 variables fixed on reduced cost
Cuts at root node changed objective from 1.417e+08 to 3.10327e+08
Probing was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
Gomory was tried 5 times and created 108 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
Knapsack was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
FlowCover was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
TwoMirCuts was tried 3210 times and created 129 cuts of which 0 were active after adding rounds of cuts (0.852 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                322006759.75269234
Enumerated nodes:               4906
Total iterations:               25487
Time (CPU seconds):             44.69
Time (Wallclock seconds):       44.81

Option for printingOptions changed from normal to all
Total time (CPU seconds):       44.71   (Wallclock seconds):       44.83

