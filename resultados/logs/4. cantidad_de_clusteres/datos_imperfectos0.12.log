Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/99d515c05b194d37983ded9603fb89f6-pulp.mps -sec 60 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/99d515c05b194d37983ded9603fb89f6-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 271 COLUMNS
At line 89116 RHS
At line 89383 BOUNDS
At line 107206 ENDATA
Problem MODEL has 266 rows, 17822 columns and 35511 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 60
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.11897 - 0.01 seconds
Cgl0004I processed model has 266 rows, 17822 columns (17822 integer (17822 of which binary)) and 35511 elements
Cbc0038I Initial state - 133 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (133) obj. 1.11897 iterations 0
Cbc0038I Pass   2: suminf.    0.85714 (114) obj. 22.2195 iterations 19
Cbc0038I Pass   3: suminf.    0.72180 (96) obj. 42.2094 iterations 18
Cbc0038I Pass   4: suminf.    0.53383 (71) obj. 69.9732 iterations 25
Cbc0038I Pass   5: suminf.    0.33835 (45) obj. 98.8476 iterations 26
Cbc0038I Pass   6: suminf.    0.15789 (21) obj. 125.501 iterations 24
Cbc0038I Pass   7: suminf.    0.01504 (2) obj. 146.601 iterations 19
Cbc0038I Solution found of 148.822
Cbc0038I Before mini branch and bound, 17689 integers at bound fixed and 0 continuous
Cbc0038I Full problem 266 rows 17822 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.25 seconds)
Cbc0038I Round again with cutoff of 134.052
Cbc0038I Pass   8: suminf.    1.00000 (133) obj. 1.11897 iterations 0
Cbc0038I Pass   9: suminf.    0.84962 (113) obj. 23.33 iterations 20
Cbc0038I Pass  10: suminf.    0.72932 (97) obj. 41.0988 iterations 16
Cbc0038I Pass  11: suminf.    0.54135 (72) obj. 68.8627 iterations 25
Cbc0038I Pass  12: suminf.    0.39098 (52) obj. 91.0737 iterations 20
Cbc0038I Pass  13: suminf.    0.24812 (33) obj. 112.174 iterations 19
Cbc0038I Pass  14: suminf.    0.12782 (17) obj. 129.943 iterations 16
Cbc0038I Pass  15: suminf.    0.39550 (14) obj. 134.052 iterations 27
Cbc0038I Pass  16: suminf.    0.39550 (14) obj. 134.052 iterations 0
Cbc0038I Pass  17: suminf.    0.39550 (14) obj. 134.052 iterations 4
Cbc0038I Pass  18: suminf.    0.39550 (14) obj. 134.052 iterations 0
Cbc0038I Pass  19: suminf.    0.39550 (14) obj. 134.052 iterations 1
Cbc0038I Pass  20: suminf.    0.39550 (14) obj. 134.052 iterations 0
Cbc0038I Pass  21: suminf.    0.65881 (11) obj. 134.052 iterations 39
Cbc0038I Pass  22: suminf.    0.07519 (9) obj. 134.012 iterations 53
Cbc0038I Pass  23: suminf.    0.11117 (9) obj. 134.052 iterations 52
Cbc0038I Pass  24: suminf.    0.08271 (9) obj. 134.02 iterations 51
Cbc0038I Pass  25: suminf.    0.36355 (10) obj. 134.052 iterations 101
Cbc0038I Pass  26: suminf.    0.09774 (8) obj. 134.035 iterations 100
Cbc0038I Pass  27: suminf.    0.11337 (8) obj. 134.052 iterations 108
Cbc0038I Pass  28: suminf.    0.09774 (8) obj. 134.035 iterations 96
Cbc0038I Pass  29: suminf.    0.09858 (11) obj. 134.052 iterations 155
Cbc0038I Pass  30: suminf.    0.09774 (9) obj. 134.052 iterations 208
Cbc0038I Pass  31: suminf.    0.09782 (7) obj. 134.052 iterations 163
Cbc0038I Pass  32: suminf.    0.09023 (7) obj. 134.044 iterations 152
Cbc0038I Pass  33: suminf.    0.09782 (7) obj. 134.052 iterations 156
Cbc0038I Pass  34: suminf.    0.69393 (11) obj. 134.052 iterations 152
Cbc0038I Pass  35: suminf.    0.09774 (9) obj. 133.999 iterations 167
Cbc0038I Pass  36: suminf.    0.14543 (8) obj. 134.052 iterations 181
Cbc0038I Pass  37: suminf.    0.08271 (8) obj. 133.982 iterations 161
Cbc0038I Rounding solution of 100.374 is better than previous of 148.822

Cbc0038I Before mini branch and bound, 17457 integers at bound fixed and 0 continuous
Cbc0038I Full problem 266 rows 17822 columns, reduced to 122 rows 251 columns
Cbc0038I Mini branch and bound improved solution from 100.374 to 80.4725 (0.54 seconds)
Cbc0038I Round again with cutoff of 64.6018
Cbc0038I Pass  37: suminf.    1.00000 (133) obj. 1.11897 iterations 0
Cbc0038I Pass  38: suminf.    0.86466 (115) obj. 21.1089 iterations 18
Cbc0038I Pass  39: suminf.    0.72932 (97) obj. 41.0988 iterations 18
Cbc0038I Pass  40: suminf.    0.73346 (76) obj. 64.6018 iterations 25
Cbc0038I Pass  41: suminf.    0.57143 (76) obj. 64.4204 iterations 1
Cbc0038I Pass  42: suminf.    0.73346 (76) obj. 64.6018 iterations 14
Cbc0038I Pass  43: suminf.    0.57143 (76) obj. 64.4204 iterations 1
Cbc0038I Pass  44: suminf.    0.73346 (76) obj. 64.6018 iterations 2
Cbc0038I Pass  45: suminf.    0.57143 (76) obj. 64.4204 iterations 1
Cbc0038I Pass  46: suminf.    0.73346 (76) obj. 64.6018 iterations 1
Cbc0038I Pass  47: suminf.    0.93368 (70) obj. 64.6018 iterations 17
Cbc0038I Pass  48: suminf.    0.93368 (70) obj. 64.6018 iterations 8
Cbc0038I Pass  49: suminf.    0.88857 (70) obj. 64.6018 iterations 14
Cbc0038I Pass  50: suminf.    0.88857 (70) obj. 64.6018 iterations 1
Cbc0038I Pass  51: suminf.    0.88857 (70) obj. 64.6018 iterations 15
Cbc0038I Pass  52: suminf.    0.88857 (70) obj. 64.6018 iterations 0
Cbc0038I Pass  53: suminf.    0.88857 (70) obj. 64.6018 iterations 15
Cbc0038I Pass  54: suminf.    0.77477 (61) obj. 64.6018 iterations 87
Cbc0038I Pass  55: suminf.    0.50376 (61) obj. 64.2985 iterations 68
Cbc0038I Pass  56: suminf.    0.77477 (61) obj. 64.6018 iterations 71
Cbc0038I Pass  57: suminf.    0.49624 (61) obj. 64.2901 iterations 51
Cbc0038I Pass  58: suminf.    0.77477 (61) obj. 64.6018 iterations 57
Cbc0038I Pass  59: suminf.    0.59106 (58) obj. 64.6018 iterations 38
Cbc0038I Pass  60: suminf.    0.48120 (58) obj. 64.4788 iterations 71
Cbc0038I Pass  61: suminf.    0.59106 (58) obj. 64.6018 iterations 71
Cbc0038I Pass  62: suminf.    0.48120 (58) obj. 64.4788 iterations 51
Cbc0038I Pass  63: suminf.    0.59106 (58) obj. 64.6018 iterations 57
Cbc0038I Pass  64: suminf.    1.17606 (47) obj. 64.6018 iterations 101
Cbc0038I Pass  65: suminf.    0.54240 (46) obj. 64.6018 iterations 94
Cbc0038I Pass  66: suminf.    0.43714 (46) obj. 64.6018 iterations 61
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17563 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.75 seconds)
Cbc0038I After 0.75 seconds - Feasibility pump exiting with objective of 80.4725 - took 0.55 seconds
Cbc0012I Integer solution of 80.472458 found by feasibility pump after 0 iterations and 0 nodes (0.76 seconds)
Cbc0031I 2086 added rows had average density of 12.200384
Cbc0013I At root node, 2086 cuts changed objective from 1.1189655 to 13.423713 in 50 passes
Cbc0014I Cut generator 0 (Probing) - 3405 row cuts average 2.3 elements, 0 column cuts (418 active)  in 2.980 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 319 row cuts average 194.6 elements, 0 column cuts (0 active)  in 2.106 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 8044 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.438 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.133 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2342 row cuts average 12.3 elements, 0 column cuts (0 active)  in 0.345 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 227 row cuts average 134.5 elements, 0 column cuts (0 active)  in 0.275 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1293 row cuts average 326.8 elements, 0 column cuts (0 active)  in 8.920 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 80.472458 best solution, best possible 13.423713 (59.14 seconds)
Cbc0030I Thread 0 used 1 times,  waiting to start 0.741359, 0.951512 cpu time, 4 locks, 0.001406908 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 1.630193, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 1.5687311, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 1.5058272, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 1.4396169, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 1.372874, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 1.3050282, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 1.2377279, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 1.16997, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 1.1005969, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 1.0335629, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.96498704, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0.95165253 waiting for threads,  6 locks, 1.3113022e-05 locked, 9.5367432e-07 waiting for locks
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 80.472458 (best possible 13.423713), took 84123 iterations and 1 nodes (60.36 seconds)
Cbc0032I Strong branching done 286 times (21138 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.11897 to 13.4237
Probing was tried 651 times and created 44276 cuts of which 5434 were active after adding rounds of cuts (38.747 seconds)
Gomory was tried 650 times and created 4147 cuts of which 0 were active after adding rounds of cuts (27.378 seconds)
Knapsack was tried 650 times and created 104572 cuts of which 0 were active after adding rounds of cuts (5.699 seconds)
Clique was tried 650 times and created 0 cuts of which 0 were active after adding rounds of cuts (1.725 seconds)
MixedIntegerRounding2 was tried 650 times and created 30446 cuts of which 0 were active after adding rounds of cuts (4.479 seconds)
FlowCover was tried 650 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.288 seconds)
TwoMirCuts was tried 650 times and created 2951 cuts of which 0 were active after adding rounds of cuts (3.576 seconds)
ZeroHalf was tried 650 times and created 16809 cuts of which 0 were active after adding rounds of cuts (115.960 seconds)

Result - Stopped on time limit

Objective value:                80.47245774
Lower bound:                    13.424
Gap:                            4.99
Enumerated nodes:               1
Total iterations:               84123
Time (CPU seconds):             60.19
Time (Wallclock seconds):       60.41

Option for printingOptions changed from normal to all
Total time (CPU seconds):       60.23   (Wallclock seconds):       60.46

