Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/8e84fa9af5d944e1b2712060e0c6a019-pulp.mps -sec 3600 -timeMode elapsed -branch -printingOptions all -solution /tmp/8e84fa9af5d944e1b2712060e0c6a019-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 133 COLUMNS
At line 12614 RHS
At line 12743 BOUNDS
At line 12808 ENDATA
Problem MODEL has 128 rows, 4160 columns and 8256 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
Option for timeMode changed from cpu to elapsed
Continuous objective value is 4.13455e+07 - 0.00 seconds
Cgl0004I processed model has 128 rows, 4160 columns (64 integer (64 of which binary)) and 8256 elements
Cbc0038I Initial state - 64 integers unsatisfied sum - 12.1976
Cbc0038I Pass   1: suminf.    0.39813 (1) obj. 7.53267e+08 iterations 63
Cbc0038I Solution found of 7.5552e+08
Cbc0038I Relaxing continuous gives 7.35585e+08
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 3969 continuous
Cbc0038I Full problem 128 rows 4160 columns, reduced to 124 rows 185 columns
Cbc0038I Mini branch and bound improved solution from 7.35585e+08 to 2.00673e+08 (0.03 seconds)
Cbc0038I Freeing continuous variables gives a solution of 1.98558e+08
Cbc0038I Round again with cutoff of 1.82837e+08
Cbc0038I Pass   2: suminf.    5.47843 (30) obj. 1.82837e+08 iterations 90
Cbc0038I Pass   3: suminf.    5.03096 (29) obj. 1.82837e+08 iterations 5
Cbc0038I Pass   4: suminf.    0.91860 (7) obj. 1.82837e+08 iterations 56
Cbc0038I Pass   5: suminf.    0.07207 (1) obj. 1.82837e+08 iterations 42
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 1.82837e+08 iterations 10
Cbc0038I Solution found of 1.82837e+08
Cbc0038I Relaxing continuous gives 1.77958e+08
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 3957 continuous
Cbc0038I Full problem 128 rows 4160 columns, reduced to 105 rows 171 columns
Cbc0038I Mini branch and bound improved solution from 1.77958e+08 to 1.74642e+08 (0.09 seconds)
Cbc0038I Freeing continuous variables gives a solution of 1.56912e+08
Cbc0038I Round again with cutoff of 1.33798e+08
Cbc0038I Pass   7: suminf.    6.55109 (35) obj. 1.33798e+08 iterations 6
Cbc0038I Pass   8: suminf.    6.12850 (34) obj. 1.33798e+08 iterations 1
Cbc0038I Pass   9: suminf.    2.34735 (19) obj. 1.33798e+08 iterations 45
Cbc0038I Pass  10: suminf.    3.13830 (21) obj. 1.33798e+08 iterations 63
Cbc0038I Pass  11: suminf.    5.18821 (25) obj. 1.33798e+08 iterations 44
Cbc0038I Pass  12: suminf.    4.83021 (24) obj. 1.33798e+08 iterations 4
Cbc0038I Pass  13: suminf.    4.61897 (25) obj. 1.33798e+08 iterations 8
Cbc0038I Pass  14: suminf.    4.61897 (25) obj. 1.33798e+08 iterations 0
Cbc0038I Pass  15: suminf.    5.31303 (25) obj. 1.33798e+08 iterations 12
Cbc0038I Pass  16: suminf.    5.13868 (24) obj. 1.33798e+08 iterations 4
Cbc0038I Pass  17: suminf.    5.31303 (25) obj. 1.33798e+08 iterations 4
Cbc0038I Pass  18: suminf.    4.88242 (24) obj. 1.33798e+08 iterations 56
Cbc0038I Pass  19: suminf.    4.76241 (25) obj. 1.33798e+08 iterations 3
Cbc0038I Pass  20: suminf.    4.11567 (25) obj. 1.33798e+08 iterations 13
Cbc0038I Pass  21: suminf.    4.11567 (25) obj. 1.33798e+08 iterations 0
Cbc0038I Pass  22: suminf.    4.78358 (25) obj. 1.33798e+08 iterations 15
Cbc0038I Pass  23: suminf.    4.70696 (25) obj. 1.33798e+08 iterations 3
Cbc0038I Pass  24: suminf.    5.66384 (26) obj. 1.33798e+08 iterations 9
Cbc0038I Pass  25: suminf.    5.66384 (26) obj. 1.33798e+08 iterations 0
Cbc0038I Pass  26: suminf.    5.45253 (26) obj. 1.33798e+08 iterations 6
Cbc0038I Pass  27: suminf.    5.45253 (26) obj. 1.33798e+08 iterations 0
Cbc0038I Pass  28: suminf.    5.66384 (26) obj. 1.33798e+08 iterations 4
Cbc0038I Pass  29: suminf.    5.06558 (26) obj. 1.33798e+08 iterations 38
Cbc0038I Pass  30: suminf.    5.06558 (26) obj. 1.33798e+08 iterations 0
Cbc0038I Pass  31: suminf.    5.66384 (26) obj. 1.33798e+08 iterations 19
Cbc0038I Pass  32: suminf.    5.66384 (26) obj. 1.33798e+08 iterations 0
Cbc0038I Pass  33: suminf.    5.45253 (26) obj. 1.33798e+08 iterations 6
Cbc0038I Pass  34: suminf.    5.45253 (26) obj. 1.33798e+08 iterations 0
Cbc0038I Pass  35: suminf.    5.22321 (26) obj. 1.33798e+08 iterations 9
Cbc0038I Pass  36: suminf.    5.22321 (26) obj. 1.33798e+08 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 3975 continuous
Cbc0038I Full problem 128 rows 4160 columns, reduced to 87 rows 139 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of 1.56912e+08 - took 0.14 seconds
Cbc0012I Integer solution of 1.5691169e+08 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0012I Integer solution of 1.561554e+08 found by DiveCoefficient after 128 iterations and 0 nodes (0.29 seconds)
Cbc0031I 85 added rows had average density of 95.658824
Cbc0013I At root node, 85 cuts changed objective from 41345549 to 1.4319529e+08 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 64.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 82 row cuts average 86.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 109 row cuts average 114.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1.561554e+08 best solution, best possible 1.4319529e+08 (0.30 seconds)
Cbc0012I Integer solution of 1.5556857e+08 found by DiveCoefficient after 134 iterations and 2 nodes (0.32 seconds)
Cbc0012I Integer solution of 1.555167e+08 found by DiveCoefficient after 135 iterations and 3 nodes (0.36 seconds)
Cbc0012I Integer solution of 1.5446365e+08 found by DiveCoefficient after 140 iterations and 4 nodes (0.39 seconds)
Cbc0012I Integer solution of 1.5240834e+08 found by DiveCoefficient after 147 iterations and 6 nodes (0.44 seconds)
Cbc0012I Integer solution of 1.5183988e+08 found by DiveCoefficient after 151 iterations and 7 nodes (0.46 seconds)
Cbc0012I Integer solution of 1.4857015e+08 found by DiveCoefficient after 161 iterations and 8 nodes (0.47 seconds)
Cbc0004I Integer solution of 1.4601029e+08 found after 170 iterations and 14 nodes (0.48 seconds)
Cbc0012I Integer solution of 1.4586689e+08 found by DiveCoefficient after 269 iterations and 28 nodes (0.54 seconds)
Cbc0012I Integer solution of 1.4546831e+08 found by DiveCoefficient after 273 iterations and 29 nodes (0.55 seconds)
Cbc0012I Integer solution of 1.4504081e+08 found by DiveCoefficient after 294 iterations and 32 nodes (0.62 seconds)
Cbc0012I Integer solution of 1.4498981e+08 found by rounding after 298 iterations and 35 nodes (0.63 seconds)
Cbc0001I Search completed - best objective 144989806.0295079, took 337 iterations and 42 nodes (0.64 seconds)
Cbc0032I Strong branching done 260 times (1010 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 13, 2 variables fixed on reduced cost
Cuts at root node changed objective from 4.13455e+07 to 1.43195e+08
Probing was tried 9 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
Gomory was tried 9 times and created 82 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Knapsack was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
FlowCover was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
TwoMirCuts was tried 33 times and created 110 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                144989806.02950788
Enumerated nodes:               42
Total iterations:               337
Time (CPU seconds):             0.58
Time (Wallclock seconds):       0.65

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.59   (Wallclock seconds):       0.66

