Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/b7d6928b56a34c9a8a3acb043bc109a5-pulp.mps -sec 3600 -timeMode elapsed -branch -printingOptions all -solution /tmp/b7d6928b56a34c9a8a3acb043bc109a5-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 57 COLUMNS
At line 2164 RHS
At line 2217 BOUNDS
At line 2244 ENDATA
Problem MODEL has 52 rows, 702 columns and 1378 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
Option for timeMode changed from cpu to elapsed
Continuous objective value is 3.20722e+06 - 0.00 seconds
Cgl0004I processed model has 52 rows, 702 columns (26 integer (26 of which binary)) and 1378 elements
Cbc0038I Initial state - 26 integers unsatisfied sum - 1.03086
Cbc0038I Pass   1: suminf.    0.03086 (1) obj. 1.25968e+09 iterations 25
Cbc0038I Pass   2: suminf.    0.03086 (1) obj. 1.25968e+09 iterations 0
Cbc0038I Solution found of 1.26269e+09
Cbc0038I Relaxing continuous gives 1.24895e+09
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 625 continuous
Cbc0038I Full problem 52 rows 702 columns, reduced to 51 rows 75 columns
Cbc0038I Mini branch and bound improved solution from 1.24895e+09 to 6.84412e+07 (0.01 seconds)
Cbc0038I Freeing continuous variables gives a solution of 6.14923e+07
Cbc0038I Round again with cutoff of 5.56638e+07
Cbc0038I Pass   3: suminf.    1.03086 (13) obj. 5.56638e+07 iterations 36
Cbc0038I Pass   4: suminf.    0.41729 (7) obj. 5.56638e+07 iterations 26
Cbc0038I Pass   5: suminf.    0.38189 (9) obj. 5.56638e+07 iterations 24
Cbc0038I Pass   6: suminf.    0.38189 (9) obj. 5.56638e+07 iterations 0
Cbc0038I Pass   7: suminf.    0.54763 (9) obj. 5.56638e+07 iterations 11
Cbc0038I Pass   8: suminf.    0.54763 (9) obj. 5.56638e+07 iterations 0
Cbc0038I Pass   9: suminf.    0.52963 (9) obj. 5.56638e+07 iterations 1
Cbc0038I Pass  10: suminf.    0.52963 (9) obj. 5.56638e+07 iterations 0
Cbc0038I Pass  11: suminf.    0.54763 (9) obj. 5.56638e+07 iterations 2
Cbc0038I Pass  12: suminf.    0.22104 (6) obj. 5.56638e+07 iterations 8
Cbc0038I Pass  13: suminf.    0.56111 (9) obj. 5.56638e+07 iterations 10
Cbc0038I Pass  14: suminf.    0.56111 (9) obj. 5.56638e+07 iterations 0
Cbc0038I Pass  15: suminf.    0.54763 (9) obj. 5.56638e+07 iterations 3
Cbc0038I Pass  16: suminf.    0.54763 (9) obj. 5.56638e+07 iterations 0
Cbc0038I Pass  17: suminf.    0.52963 (9) obj. 5.56638e+07 iterations 1
Cbc0038I Pass  18: suminf.    0.52963 (9) obj. 5.56638e+07 iterations 0
Cbc0038I Pass  19: suminf.    0.54763 (9) obj. 5.56638e+07 iterations 2
Cbc0038I Pass  20: suminf.    0.07756 (3) obj. 5.56638e+07 iterations 17
Cbc0038I Pass  21: suminf.    0.11016 (5) obj. 5.56638e+07 iterations 9
Cbc0038I Pass  22: suminf.    0.52443 (9) obj. 5.56638e+07 iterations 14
Cbc0038I Pass  23: suminf.    0.52443 (9) obj. 5.56638e+07 iterations 0
Cbc0038I Pass  24: suminf.    0.54763 (9) obj. 5.56638e+07 iterations 4
Cbc0038I Pass  25: suminf.    0.54763 (9) obj. 5.56638e+07 iterations 0
Cbc0038I Pass  26: suminf.    0.52963 (9) obj. 5.56638e+07 iterations 1
Cbc0038I Pass  27: suminf.    0.52963 (9) obj. 5.56638e+07 iterations 0
Cbc0038I Pass  28: suminf.    0.54763 (9) obj. 5.56638e+07 iterations 2
Cbc0038I Pass  29: suminf.    0.45387 (9) obj. 5.56638e+07 iterations 4
Cbc0038I Pass  30: suminf.    0.45387 (9) obj. 5.56638e+07 iterations 0
Cbc0038I Pass  31: suminf.    0.54763 (9) obj. 5.56638e+07 iterations 3
Cbc0038I Pass  32: suminf.    0.54763 (9) obj. 5.56638e+07 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 625 continuous
Cbc0038I Full problem 52 rows 702 columns, reduced to 39 rows 61 columns
Cbc0038I Mini branch and bound improved solution from 6.14923e+07 to 5.63265e+07 (0.05 seconds)
Cbc0038I Freeing continuous variables gives a solution of 5.59017e+07
Cbc0038I Round again with cutoff of 4.51725e+07
Cbc0038I Pass  32: suminf.    1.03086 (16) obj. 4.51725e+07 iterations 6
Cbc0038I Pass  33: suminf.    0.85196 (13) obj. 4.51725e+07 iterations 30
Cbc0038I Pass  34: suminf.    0.85196 (13) obj. 4.51725e+07 iterations 0
Cbc0038I Pass  35: suminf.    0.51930 (12) obj. 4.51725e+07 iterations 17
Cbc0038I Pass  36: suminf.    0.33215 (12) obj. 4.51725e+07 iterations 1
Cbc0038I Pass  37: suminf.    0.51930 (12) obj. 4.51725e+07 iterations 4
Cbc0038I Pass  38: suminf.    0.23963 (9) obj. 4.51725e+07 iterations 15
Cbc0038I Pass  39: suminf.    0.51930 (12) obj. 4.51725e+07 iterations 16
Cbc0038I Pass  40: suminf.    0.27089 (10) obj. 4.51725e+07 iterations 3
Cbc0038I Pass  41: suminf.    0.51930 (12) obj. 4.51725e+07 iterations 5
Cbc0038I Pass  42: suminf.    0.33215 (12) obj. 4.51725e+07 iterations 1
Cbc0038I Pass  43: suminf.    0.51930 (12) obj. 4.51725e+07 iterations 4
Cbc0038I Pass  44: suminf.    0.78796 (13) obj. 4.51725e+07 iterations 3
Cbc0038I Pass  45: suminf.    0.78796 (13) obj. 4.51725e+07 iterations 0
Cbc0038I Pass  46: suminf.    0.51930 (12) obj. 4.51725e+07 iterations 2
Cbc0038I Pass  47: suminf.    0.51930 (12) obj. 4.51725e+07 iterations 7
Cbc0038I Pass  48: suminf.    0.32815 (12) obj. 4.51725e+07 iterations 1
Cbc0038I Pass  49: suminf.    0.18121 (7) obj. 4.51725e+07 iterations 14
Cbc0038I Pass  50: suminf.    0.51930 (12) obj. 4.51725e+07 iterations 16
Cbc0038I Pass  51: suminf.    0.26491 (10) obj. 4.51725e+07 iterations 3
Cbc0038I Pass  52: suminf.    0.51930 (12) obj. 4.51725e+07 iterations 7
Cbc0038I Pass  53: suminf.    0.33215 (12) obj. 4.51725e+07 iterations 1
Cbc0038I Pass  54: suminf.    0.51930 (12) obj. 4.51725e+07 iterations 4
Cbc0038I Pass  55: suminf.    0.27859 (8) obj. 4.51725e+07 iterations 11
Cbc0038I Pass  56: suminf.    0.51930 (12) obj. 4.51725e+07 iterations 13
Cbc0038I Pass  57: suminf.    0.51930 (12) obj. 4.51725e+07 iterations 7
Cbc0038I Pass  58: suminf.    0.20861 (10) obj. 4.51725e+07 iterations 3
Cbc0038I Pass  59: suminf.    0.51930 (12) obj. 4.51725e+07 iterations 4
Cbc0038I Pass  60: suminf.    0.26999 (10) obj. 4.51725e+07 iterations 3
Cbc0038I Pass  61: suminf.    0.51930 (12) obj. 4.51725e+07 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 629 continuous
Cbc0038I Full problem 52 rows 702 columns, reduced to 36 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of 5.59017e+07 - took 0.09 seconds
Cbc0012I Integer solution of 55901665 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0012I Integer solution of 55413602 found by DiveCoefficient after 961 iterations and 0 nodes (0.30 seconds)
Cbc0031I 35 added rows had average density of 64.2
Cbc0013I At root node, 35 cuts changed objective from 3207218.6 to 44696382 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 25 row cuts average 25.3 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 210 row cuts average 96.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 15 row cuts average 87.7 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 54 row cuts average 63.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 55413602 best solution, best possible 44696382 (0.30 seconds)
Cbc0012I Integer solution of 55134452 found by DiveCoefficient after 962 iterations and 1 nodes (0.31 seconds)
Cbc0012I Integer solution of 54471710 found by DiveCoefficient after 991 iterations and 2 nodes (0.32 seconds)
Cbc0012I Integer solution of 54381654 found by DiveCoefficient after 1005 iterations and 3 nodes (0.34 seconds)
Cbc0012I Integer solution of 54273554 found by DiveCoefficient after 1007 iterations and 4 nodes (0.34 seconds)
Cbc0012I Integer solution of 54129149 found by DiveCoefficient after 1016 iterations and 6 nodes (0.35 seconds)
Cbc0012I Integer solution of 53990756 found by DiveCoefficient after 1032 iterations and 8 nodes (0.36 seconds)
Cbc0012I Integer solution of 53690918 found by DiveCoefficient after 1036 iterations and 9 nodes (0.37 seconds)
Cbc0012I Integer solution of 51354980 found by DiveCoefficient after 1040 iterations and 10 nodes (0.37 seconds)
Cbc0012I Integer solution of 47240078 found by rounding after 1066 iterations and 14 nodes (0.37 seconds)
Cbc0016I Integer solution of 47139928 found by strong branching after 1083 iterations and 17 nodes (0.37 seconds)
Cbc0016I Integer solution of 46672928 found by strong branching after 1098 iterations and 18 nodes (0.38 seconds)
Cbc0001I Search completed - best objective 46672927.57691731, took 1162 iterations and 28 nodes (0.38 seconds)
Cbc0032I Strong branching done 182 times (1166 iterations), fathomed 3 nodes and fixed 0 variables
Cbc0035I Maximum depth 13, 0 variables fixed on reduced cost
Cuts at root node changed objective from 3.20722e+06 to 4.46964e+07
Probing was tried 123 times and created 29 cuts of which 0 were active after adding rounds of cuts (0.037 seconds)
Gomory was tried 123 times and created 210 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 15 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.048 seconds)
TwoMirCuts was tried 123 times and created 60 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                46672927.57691731
Enumerated nodes:               28
Total iterations:               1162
Time (CPU seconds):             0.38
Time (Wallclock seconds):       0.39

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.38   (Wallclock seconds):       0.39

