Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/6b1bcbe6c7124b9fbaec83efd6811191-pulp.mps -sec 60 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/6b1bcbe6c7124b9fbaec83efd6811191-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 579 COLUMNS
At line 413286 RHS
At line 413861 BOUNDS
At line 496518 ENDATA
Problem MODEL has 574 rows, 82656 columns and 165025 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 60
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.2569 - 0.04 seconds
Cgl0004I processed model has 574 rows, 82656 columns (82656 integer (82656 of which binary)) and 165025 elements
Cbc0038I Initial state - 287 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (287) obj. 1.2569 iterations 0
Cbc0038I Pass   2: suminf.    0.96516 (277) obj. 13.7821 iterations 10
Cbc0038I Pass   3: suminf.    0.88153 (253) obj. 43.8425 iterations 24
Cbc0038I Pass   4: suminf.    0.83624 (240) obj. 60.1252 iterations 13
Cbc0038I Pass   5: suminf.    0.79443 (228) obj. 75.1554 iterations 12
Cbc0038I Pass   6: suminf.    0.73868 (212) obj. 95.1957 iterations 16
Cbc0038I Pass   7: suminf.    0.65157 (187) obj. 126.509 iterations 25
Cbc0038I Pass   8: suminf.    0.58537 (168) obj. 150.306 iterations 19
Cbc0038I Pass   9: suminf.    0.48780 (140) obj. 185.377 iterations 28
Cbc0038I Pass  10: suminf.    0.41115 (118) obj. 212.932 iterations 22
Cbc0038I Pass  11: suminf.    0.37282 (107) obj. 226.71 iterations 11
Cbc0038I Pass  12: suminf.    0.31707 (91) obj. 246.75 iterations 16
Cbc0038I Pass  13: suminf.    0.21951 (63) obj. 281.821 iterations 28
Cbc0038I Pass  14: suminf.    0.15679 (45) obj. 304.366 iterations 18
Cbc0038I Pass  15: suminf.    0.07666 (22) obj. 333.174 iterations 23
Cbc0038I Solution found of 360.729
Cbc0038I Before mini branch and bound, 82369 integers at bound fixed and 0 continuous
Cbc0038I Full problem 574 rows 82656 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (1.84 seconds)
Cbc0038I Round again with cutoff of 324.782
Cbc0038I Pass  16: suminf.    1.00000 (287) obj. 1.2569 iterations 0
Cbc0038I Pass  17: suminf.    0.95470 (274) obj. 17.5396 iterations 13
Cbc0038I Pass  18: suminf.    0.85366 (245) obj. 53.8626 iterations 29
Cbc0038I Pass  19: suminf.    0.77700 (223) obj. 81.418 iterations 22
Cbc0038I Pass  20: suminf.    0.67596 (194) obj. 117.741 iterations 29
Cbc0038I Pass  21: suminf.    0.57840 (166) obj. 152.811 iterations 28
Cbc0038I Pass  22: suminf.    0.50174 (144) obj. 180.367 iterations 22
Cbc0038I Pass  23: suminf.    0.40767 (117) obj. 214.185 iterations 27
Cbc0038I Pass  24: suminf.    0.36934 (106) obj. 227.962 iterations 11
Cbc0038I Pass  25: suminf.    0.32404 (93) obj. 244.245 iterations 13
Cbc0038I Pass  26: suminf.    0.23345 (67) obj. 276.811 iterations 26
Cbc0038I Pass  27: suminf.    0.16028 (46) obj. 303.114 iterations 21
Cbc0038I Pass  28: suminf.    0.39999 (29) obj. 324.782 iterations 28
Cbc0038I Pass  29: suminf.    0.10105 (29) obj. 324.406 iterations 1
Cbc0038I Pass  30: suminf.    0.39999 (29) obj. 324.782 iterations 16
Cbc0038I Pass  31: suminf.    0.10105 (29) obj. 324.406 iterations 1
Cbc0038I Pass  32: suminf.    0.39999 (29) obj. 324.782 iterations 1
Cbc0038I Pass  33: suminf.    0.88980 (27) obj. 324.782 iterations 200
Cbc0038I Pass  34: suminf.    0.12343 (26) obj. 324.782 iterations 101
Cbc0038I Pass  35: suminf.    0.10253 (22) obj. 324.782 iterations 56
Cbc0038I Pass  36: suminf.    0.10253 (22) obj. 324.782 iterations 3
Cbc0038I Pass  37: suminf.    0.10950 (22) obj. 324.782 iterations 20
Cbc0038I Pass  38: suminf.    0.10950 (22) obj. 324.782 iterations 0
Cbc0038I Pass  39: suminf.    0.10253 (22) obj. 324.782 iterations 87
Cbc0038I Pass  40: suminf.    0.21006 (19) obj. 324.782 iterations 297
Cbc0038I Pass  41: suminf.    0.07666 (17) obj. 324.762 iterations 333
Cbc0038I Pass  42: suminf.    0.09268 (15) obj. 324.782 iterations 294
Cbc0038I Pass  43: suminf.    0.07317 (15) obj. 324.758 iterations 285
Cbc0038I Pass  44: suminf.    0.09268 (15) obj. 324.782 iterations 295
Cbc0038I Pass  45: suminf.    0.90919 (20) obj. 324.782 iterations 366
Cbc0038I Rounding solution of 261.821 is better than previous of 360.729

Cbc0038I Before mini branch and bound, 81929 integers at bound fixed and 0 continuous
Cbc0038I Full problem 574 rows 82656 columns, reduced to 233 rows 471 columns
Cbc0038I Mini branch and bound improved solution from 261.821 to 208.621 (2.98 seconds)
Cbc0038I Round again with cutoff of 167.148
Cbc0038I Pass  45: suminf.    1.00000 (287) obj. 1.2569 iterations 0
Cbc0038I Pass  46: suminf.    0.94077 (270) obj. 22.5497 iterations 17
Cbc0038I Pass  47: suminf.    0.89199 (256) obj. 40.0849 iterations 14
Cbc0038I Pass  48: suminf.    0.82927 (238) obj. 62.6302 iterations 18
Cbc0038I Pass  49: suminf.    0.75610 (217) obj. 88.9331 iterations 21
Cbc0038I Pass  50: suminf.    0.66202 (190) obj. 122.751 iterations 27
Cbc0038I Pass  51: suminf.    0.59930 (172) obj. 145.296 iterations 18
Cbc0038I Pass  52: suminf.    0.98493 (155) obj. 167.148 iterations 33
Cbc0038I Pass  53: suminf.    0.54007 (155) obj. 166.589 iterations 1
Cbc0038I Pass  54: suminf.    0.98493 (155) obj. 167.148 iterations 28
Cbc0038I Pass  55: suminf.    0.54007 (155) obj. 166.589 iterations 1
Cbc0038I Pass  56: suminf.    0.98493 (155) obj. 167.148 iterations 1
Cbc0038I Pass  57: suminf.    0.80852 (136) obj. 167.148 iterations 68
Cbc0038I Pass  58: suminf.    0.80852 (136) obj. 167.148 iterations 56
Cbc0038I Pass  59: suminf.    0.75974 (136) obj. 167.148 iterations 49
Cbc0038I Pass  60: suminf.    0.75974 (136) obj. 167.148 iterations 0
Cbc0038I Pass  61: suminf.    0.75974 (136) obj. 167.148 iterations 83
Cbc0038I Pass  62: suminf.    0.75974 (136) obj. 167.148 iterations 0
Cbc0038I Pass  63: suminf.    0.75974 (136) obj. 167.148 iterations 42
Cbc0038I Pass  64: suminf.    0.75974 (136) obj. 167.148 iterations 0
Cbc0038I Pass  65: suminf.    0.75974 (136) obj. 167.148 iterations 47
Cbc0038I Pass  66: suminf.    0.88987 (118) obj. 167.148 iterations 181
Cbc0038I Pass  67: suminf.    0.88987 (118) obj. 167.148 iterations 174
Cbc0038I Pass  68: suminf.    0.86199 (118) obj. 167.148 iterations 110
Cbc0038I Pass  69: suminf.    0.86199 (118) obj. 167.148 iterations 2
Cbc0038I Pass  70: suminf.    0.86199 (118) obj. 167.148 iterations 105
Cbc0038I Pass  71: suminf.    0.86199 (118) obj. 167.148 iterations 3
Cbc0038I Pass  72: suminf.    0.86199 (118) obj. 167.148 iterations 83
Cbc0038I Pass  73: suminf.    0.86199 (118) obj. 167.148 iterations 4
Cbc0038I Pass  74: suminf.    0.85503 (118) obj. 167.148 iterations 125
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 82210 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (3.97 seconds)
Cbc0038I After 3.97 seconds - Feasibility pump exiting with objective of 208.621 - took 2.61 seconds
Cbc0012I Integer solution of 208.62116 found by feasibility pump after 0 iterations and 0 nodes (3.98 seconds)
Cbc0031I 3105 added rows had average density of 6.7072464
Cbc0013I At root node, 3105 cuts changed objective from 1.2568966 to 17.421936 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 1074 row cuts average 2.3 elements, 0 column cuts (1104 active)  in 5.521 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 72 row cuts average 152.0 elements, 0 column cuts (0 active)  in 1.645 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 4210 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.395 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2672 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.527 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 532 row cuts average 55.8 elements, 0 column cuts (0 active)  in 7.808 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 1.052732, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.96574378, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.88205218, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.79806519, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.70405006, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.60968995, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.51703501, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.4203608, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.32280207, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.22403502, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.12825894, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.032964945, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 8.1062317e-06 locked, 9.5367432e-07 waiting for locks
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 208.62116 (best possible 17.421936), took 36949 iterations and 0 nodes (62.54 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.2569 to 17.4219
Probing was tried 208 times and created 13962 cuts of which 14352 were active after adding rounds of cuts (71.772 seconds)
Gomory was tried 208 times and created 936 cuts of which 0 were active after adding rounds of cuts (21.389 seconds)
Knapsack was tried 208 times and created 54730 cuts of which 0 were active after adding rounds of cuts (5.131 seconds)
Clique was tried 208 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.761 seconds)
MixedIntegerRounding2 was tried 208 times and created 34736 cuts of which 0 were active after adding rounds of cuts (6.847 seconds)
FlowCover was tried 208 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.322 seconds)
TwoMirCuts was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.053 seconds)
ZeroHalf was tried 208 times and created 6916 cuts of which 0 were active after adding rounds of cuts (101.500 seconds)

Result - Stopped on time limit

Objective value:                208.62116432
Lower bound:                    17.422
Gap:                            10.97
Enumerated nodes:               0
Total iterations:               36949
Time (CPU seconds):             62.00
Time (Wallclock seconds):       62.63

Option for printingOptions changed from normal to all
Total time (CPU seconds):       62.18   (Wallclock seconds):       62.87

