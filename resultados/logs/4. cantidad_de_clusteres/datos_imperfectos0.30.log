Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/66c21c7f132c49b89029f47c6450be7d-pulp.mps -sec 60 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/66c21c7f132c49b89029f47c6450be7d-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 675 COLUMNS
At line 562806 RHS
At line 563477 BOUNDS
At line 676038 ENDATA
Problem MODEL has 670 rows, 112560 columns and 224785 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 60
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.3 - 0.07 seconds
Cgl0004I processed model has 670 rows, 112560 columns (112560 integer (112560 of which binary)) and 224785 elements
Cbc0038I Initial state - 335 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (335) obj. 1.3 iterations 0
Cbc0038I Pass   2: suminf.    0.91343 (306) obj. 38.8875 iterations 29
Cbc0038I Pass   3: suminf.    0.85672 (287) obj. 63.5137 iterations 19
Cbc0038I Pass   4: suminf.    0.77910 (261) obj. 97.2128 iterations 26
Cbc0038I Pass   5: suminf.    0.72537 (243) obj. 120.543 iterations 18
Cbc0038I Pass   6: suminf.    0.69254 (232) obj. 134.8 iterations 11
Cbc0038I Pass   7: suminf.    0.64478 (216) obj. 155.538 iterations 16
Cbc0038I Pass   8: suminf.    0.60597 (203) obj. 172.388 iterations 13
Cbc0038I Pass   9: suminf.    0.55224 (185) obj. 195.718 iterations 18
Cbc0038I Pass  10: suminf.    0.49254 (165) obj. 221.64 iterations 20
Cbc0038I Pass  11: suminf.    0.41194 (138) obj. 256.636 iterations 27
Cbc0038I Pass  12: suminf.    0.33433 (112) obj. 290.335 iterations 26
Cbc0038I Pass  13: suminf.    0.27761 (93) obj. 314.961 iterations 19
Cbc0038I Pass  14: suminf.    0.20896 (70) obj. 344.772 iterations 23
Cbc0038I Pass  15: suminf.    0.14328 (48) obj. 373.286 iterations 22
Cbc0038I Pass  16: suminf.    0.05672 (19) obj. 410.874 iterations 29
Cbc0038I Solution found of 435.5
Cbc0038I Before mini branch and bound, 112225 integers at bound fixed and 0 continuous
Cbc0038I Full problem 670 rows 112560 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (2.69 seconds)
Cbc0038I Round again with cutoff of 392.08
Cbc0038I Pass  17: suminf.    1.00000 (335) obj. 1.3 iterations 0
Cbc0038I Pass  18: suminf.    0.94030 (315) obj. 27.2224 iterations 20
Cbc0038I Pass  19: suminf.    0.88358 (296) obj. 51.8487 iterations 19
Cbc0038I Pass  20: suminf.    0.80000 (268) obj. 88.14 iterations 28
Cbc0038I Pass  21: suminf.    0.73731 (247) obj. 115.359 iterations 21
Cbc0038I Pass  22: suminf.    0.69254 (232) obj. 134.8 iterations 15
Cbc0038I Pass  23: suminf.    0.60597 (203) obj. 172.388 iterations 29
Cbc0038I Pass  24: suminf.    0.54328 (182) obj. 199.606 iterations 21
Cbc0038I Pass  25: suminf.    0.48060 (161) obj. 226.825 iterations 21
Cbc0038I Pass  26: suminf.    0.43582 (146) obj. 246.267 iterations 15
Cbc0038I Pass  27: suminf.    0.40000 (134) obj. 261.82 iterations 12
Cbc0038I Pass  28: suminf.    0.34627 (116) obj. 285.15 iterations 18
Cbc0038I Pass  29: suminf.    0.30149 (101) obj. 304.592 iterations 15
Cbc0038I Pass  30: suminf.    0.21493 (72) obj. 342.179 iterations 29
Cbc0038I Pass  31: suminf.    0.15522 (52) obj. 368.102 iterations 20
Cbc0038I Pass  32: suminf.    0.10746 (36) obj. 388.84 iterations 16
Cbc0038I Pass  33: suminf.    0.59702 (34) obj. 392.08 iterations 52
Cbc0038I Pass  34: suminf.    0.59702 (34) obj. 392.08 iterations 0
Cbc0038I Pass  35: suminf.    0.59702 (34) obj. 392.08 iterations 1
Cbc0038I Pass  36: suminf.    0.59702 (34) obj. 392.08 iterations 0
Cbc0038I Pass  37: suminf.    0.59702 (34) obj. 392.08 iterations 1
Cbc0038I Pass  38: suminf.    0.15619 (30) obj. 392.08 iterations 77
Cbc0038I Pass  39: suminf.    0.09254 (28) obj. 392.074 iterations 129
Cbc0038I Pass  40: suminf.    0.09678 (28) obj. 392.08 iterations 138
Cbc0038I Pass  41: suminf.    0.08358 (27) obj. 392.063 iterations 140
Cbc0038I Pass  42: suminf.    0.09678 (27) obj. 392.08 iterations 134
Cbc0038I Pass  43: suminf.    0.83408 (25) obj. 392.08 iterations 144
Cbc0038I Pass  44: suminf.    0.11009 (24) obj. 392.08 iterations 142
Cbc0038I Pass  45: suminf.    0.10412 (23) obj. 392.08 iterations 61
Cbc0038I Pass  46: suminf.    0.10412 (23) obj. 392.08 iterations 0
Cbc0038I Rounding solution of 342.621 is better than previous of 435.5

Cbc0038I Before mini branch and bound, 112022 integers at bound fixed and 0 continuous
Cbc0038I Full problem 670 rows 112560 columns, reduced to 72 rows 144 columns
Cbc0038I Mini branch and bound improved solution from 342.621 to 337.247 (4.49 seconds)
Cbc0038I Round again with cutoff of 270.058
Cbc0038I Pass  46: suminf.    1.00000 (335) obj. 1.3 iterations 0
Cbc0038I Pass  47: suminf.    0.96716 (324) obj. 15.5573 iterations 11
Cbc0038I Pass  48: suminf.    0.93134 (312) obj. 31.1107 iterations 12
Cbc0038I Pass  49: suminf.    0.86866 (291) obj. 58.3293 iterations 21
Cbc0038I Pass  50: suminf.    0.82090 (275) obj. 79.0672 iterations 16
Cbc0038I Pass  51: suminf.    0.77015 (258) obj. 101.101 iterations 17
Cbc0038I Pass  52: suminf.    0.70746 (237) obj. 128.32 iterations 21
Cbc0038I Pass  53: suminf.    0.64478 (216) obj. 155.538 iterations 21
Cbc0038I Pass  54: suminf.    0.61493 (206) obj. 168.499 iterations 10
Cbc0038I Pass  55: suminf.    0.58209 (195) obj. 182.757 iterations 11
Cbc0038I Pass  56: suminf.    0.50746 (170) obj. 215.16 iterations 25
Cbc0038I Pass  57: suminf.    0.46866 (157) obj. 232.009 iterations 13
Cbc0038I Pass  58: suminf.    0.39104 (131) obj. 265.708 iterations 26
Cbc0038I Pass  59: suminf.    0.73661 (128) obj. 270.058 iterations 48
Cbc0038I Pass  60: suminf.    0.38209 (128) obj. 269.597 iterations 1
Cbc0038I Pass  61: suminf.    0.73661 (128) obj. 270.058 iterations 2
Cbc0038I Pass  62: suminf.    0.38209 (128) obj. 269.597 iterations 1
Cbc0038I Pass  63: suminf.    0.73661 (128) obj. 270.058 iterations 1
Cbc0038I Pass  64: suminf.    1.32533 (108) obj. 270.058 iterations 158
Cbc0038I Pass  65: suminf.    0.36716 (106) obj. 270.01 iterations 154
Cbc0038I Pass  66: suminf.    0.40375 (104) obj. 270.058 iterations 150
Cbc0038I Pass  67: suminf.    0.32836 (104) obj. 269.96 iterations 126
Cbc0038I Pass  68: suminf.    0.40375 (104) obj. 270.058 iterations 129
Cbc0038I Pass  69: suminf.    0.32836 (104) obj. 269.96 iterations 128
Cbc0038I Pass  70: suminf.    0.40375 (104) obj. 270.058 iterations 118
Cbc0038I Pass  71: suminf.    1.18338 (98) obj. 270.058 iterations 211
Cbc0038I Pass  72: suminf.    0.34925 (96) obj. 270.01 iterations 226
Cbc0038I Pass  73: suminf.    0.38595 (95) obj. 270.058 iterations 189
Cbc0038I Pass  74: suminf.    0.34030 (95) obj. 269.998 iterations 187
Cbc0038I Pass  75: suminf.    0.38595 (95) obj. 270.058 iterations 197
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 112043 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (6.05 seconds)
Cbc0038I After 6.05 seconds - Feasibility pump exiting with objective of 337.247 - took 4.10 seconds
Cbc0012I Integer solution of 337.247 found by feasibility pump after 0 iterations and 0 nodes (6.07 seconds)
Cbc0031I 4886 added rows had average density of 5.3125256
Cbc0013I At root node, 4886 cuts changed objective from 1.3 to 18.224129 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 9673 row cuts average 2.0 elements, 0 column cuts (1682 active)  in 0.527 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 86 row cuts average 82.3 elements, 0 column cuts (0 active)  in 2.017 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 4589 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.555 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2947 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.778 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 582 row cuts average 42.3 elements, 0 column cuts (0 active)  in 10.798 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 1.423331, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 1.3120339, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 1.1993301, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 1.087594, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.97610879, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.84864998, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.71682501, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.58315611, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.44807982, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.31628203, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.18267488, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.049276114, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 9.059906e-06 locked, 9.5367432e-07 waiting for locks
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 337.247 (best possible 18.224129), took 33617 iterations and 0 nodes (68.73 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.3 to 18.2241
Probing was tried 195 times and created 125749 cuts of which 21866 were active after adding rounds of cuts (6.854 seconds)
Gomory was tried 195 times and created 1118 cuts of which 0 were active after adding rounds of cuts (26.216 seconds)
Knapsack was tried 195 times and created 59657 cuts of which 0 were active after adding rounds of cuts (7.216 seconds)
Clique was tried 195 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.877 seconds)
MixedIntegerRounding2 was tried 195 times and created 38311 cuts of which 0 were active after adding rounds of cuts (10.109 seconds)
FlowCover was tried 195 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.432 seconds)
TwoMirCuts was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.063 seconds)
ZeroHalf was tried 195 times and created 7566 cuts of which 0 were active after adding rounds of cuts (140.376 seconds)

Result - Stopped on time limit

Objective value:                337.24699696
Lower bound:                    18.224
Gap:                            17.51
Enumerated nodes:               0
Total iterations:               33617
Time (CPU seconds):             68.04
Time (Wallclock seconds):       68.87

Option for printingOptions changed from normal to all
Total time (CPU seconds):       68.31   (Wallclock seconds):       69.18

