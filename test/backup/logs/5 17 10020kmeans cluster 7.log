Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/tesis/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/8a9edbd448c94ef6ad4140572beb3bf3-pulp.mps -sec 3600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/8a9edbd448c94ef6ad4140572beb3bf3-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 788 COLUMNS
At line 4488 RHS
At line 5272 BOUNDS
At line 6029 ENDATA
Problem MODEL has 783 rows, 756 columns and 2916 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.82986e+07 - 0.00 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0004I processed model has 783 rows, 756 columns (27 integer (27 of which binary)) and 2943 elements
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.917283
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 4.18857e+07 iterations 38
Cbc0038I Solution found of 4.18857e+07
Cbc0038I Relaxing continuous gives 3.08084e+07
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 684 continuous
Cbc0038I Full problem 783 rows 756 columns, reduced to 53 rows 40 columns
Cbc0038I Mini branch and bound improved solution from 3.08084e+07 to 2.07652e+07 (0.03 seconds)
Cbc0038I Freeing continuous variables gives a solution of 2.06246e+07
Cbc0038I Round again with cutoff of 2.05212e+07
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.26194 (1) obj. 2.05212e+07 iterations 205
Cbc0038I Pass   3: suminf.    0.14801 (1) obj. 2.05212e+07 iterations 365
Cbc0038I Pass   4: suminf.    0.47084 (4) obj. 2.05212e+07 iterations 110
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. 2.05212e+07 iterations 32
Cbc0038I Solution found of 2.05212e+07
Cbc0038I Relaxing continuous gives 2.03612e+07
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 665 continuous
Cbc0038I Full problem 783 rows 756 columns, reduced to 76 rows 61 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of 2.0207e+07
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 3
Cbc0038I Pass   6: suminf.    0.27006 (1) obj. 2.0207e+07 iterations 0
Cbc0038I Pass   7: suminf.    0.27203 (1) obj. 2.0207e+07 iterations 338
Cbc0038I Pass   8: suminf.    0.22974 (1) obj. 2.0207e+07 iterations 68
Cbc0038I Pass   9: suminf.    0.22974 (1) obj. 2.0207e+07 iterations 10
Cbc0038I Pass  10: suminf.    0.63387 (3) obj. 2.0207e+07 iterations 32
Cbc0038I Pass  11: suminf.    0.23876 (1) obj. 2.0207e+07 iterations 73
Cbc0038I Pass  12: suminf.    0.27731 (1) obj. 2.0207e+07 iterations 117
Cbc0038I Pass  13: suminf.    0.35945 (1) obj. 2.0207e+07 iterations 94
Cbc0038I Pass  14: suminf.    0.27038 (1) obj. 2.0207e+07 iterations 154
Cbc0038I Pass  15: suminf.    0.32900 (1) obj. 2.0207e+07 iterations 102
Cbc0038I Pass  16: suminf.    0.90130 (3) obj. 2.0207e+07 iterations 51
Cbc0038I Pass  17: suminf.    0.32352 (1) obj. 2.0207e+07 iterations 70
Cbc0038I Pass  18: suminf.    0.27468 (1) obj. 2.0207e+07 iterations 232
Cbc0038I Pass  19: suminf.    0.19454 (1) obj. 2.0207e+07 iterations 188
Cbc0038I Pass  20: suminf.    0.19454 (1) obj. 2.0207e+07 iterations 13
Cbc0038I Pass  21: suminf.    1.95550 (5) obj. 2.0207e+07 iterations 97
Cbc0038I Pass  22: suminf.    1.38419 (4) obj. 2.0207e+07 iterations 89
Cbc0038I Pass  23: suminf.    0.27038 (1) obj. 2.0207e+07 iterations 285
Cbc0038I Pass  24: suminf.    0.27038 (1) obj. 2.0207e+07 iterations 0
Cbc0038I Pass  25: suminf.    0.32900 (1) obj. 2.0207e+07 iterations 289
Cbc0038I Pass  26: suminf.    1.22192 (4) obj. 2.0207e+07 iterations 92
Cbc0038I Pass  27: suminf.    0.27862 (1) obj. 2.0207e+07 iterations 100
Cbc0038I Pass  28: suminf.    0.27468 (1) obj. 2.0207e+07 iterations 171
Cbc0038I Pass  29: suminf.    0.18337 (1) obj. 2.0207e+07 iterations 354
Cbc0038I Pass  30: suminf.    0.18337 (1) obj. 2.0207e+07 iterations 8
Cbc0038I Pass  31: suminf.    0.27006 (1) obj. 2.0207e+07 iterations 192
Cbc0038I Pass  32: suminf.    0.27203 (1) obj. 2.0207e+07 iterations 257
Cbc0038I Pass  33: suminf.    0.27203 (1) obj. 2.0207e+07 iterations 30
Cbc0038I Pass  34: suminf.    0.27203 (1) obj. 2.0207e+07 iterations 5
Cbc0038I Pass  35: suminf.    0.75287 (2) obj. 2.0207e+07 iterations 111
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 579 continuous
Cbc0038I Full problem 783 rows 756 columns, reduced to 183 rows 158 columns
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I After 0.21 seconds - Feasibility pump exiting with objective of 2.03612e+07 - took 0.19 seconds
Cbc0012I Integer solution of 20361214 found by feasibility pump after 0 iterations and 0 nodes (0.21 seconds)
Cbc0038I Full problem 783 rows 756 columns, reduced to 141 rows 166 columns
Cbc0031I 11 added rows had average density of 308.36364
Cbc0013I At root node, 11 cuts changed objective from 19590205 to 19624583 in 35 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 46 row cuts average 532.4 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 76 row cuts average 185.7 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 7 row cuts average 183.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 20361214 best solution, best possible 19624583 (0.60 seconds)
Cbc0038I Full problem 794 rows 756 columns, reduced to 587 rows 560 columns
Cbc0044I Reduced cost fixing - 587 rows, 560 columns - restarting search
Cbc0012I Integer solution of 20361214 found by Previous solution after 0 iterations and 0 nodes (1.16 seconds)
Cbc0038I Full problem 587 rows 560 columns, reduced to 141 rows 166 columns
Cbc0031I 10 added rows had average density of 305.9
Cbc0013I At root node, 10 cuts changed objective from 19590205 to 19624635 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 521.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 70.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 4 row cuts average 306.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (Stored from first) - 10 row cuts average 260.7 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 20361214 best solution, best possible 19624635 (1.35 seconds)
Cbc0030I Thread 0 used 14 times,  waiting to start 0.037307739,  83 locks, 0.001080513 locked, 0.00023174286 waiting for locks
Cbc0030I Thread 1 used 7 times,  waiting to start 0.28634763,  40 locks, 0.00064897537 locked, 0.00029325485 waiting for locks
Cbc0030I Thread 2 used 2 times,  waiting to start 0.41939616,  13 locks, 0.00021529198 locked, 0.00026321411 waiting for locks
Cbc0030I Thread 3 used 5 times,  waiting to start 0.50000882,  30 locks, 0.0004556179 locked, 0.00028395653 waiting for locks
Cbc0030I Thread 4 used 2 times,  waiting to start 0.61493587,  10 locks, 0.0001578331 locked, 9.5367432e-07 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.62339306,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.62211013,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.62045383,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.61911511,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.6178751,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.6165688,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.61514306,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0.4020853 waiting for threads,  64 locks, 0.00011348724 locked, 0.00094795227 waiting for locks
Cbc0001I Search completed - best objective 20361213.78065146, took 3699 iterations and 30 nodes (1.97 seconds)
Cbc0032I Strong branching done 216 times (9841 iterations), fathomed 11 nodes and fixed 5 variables
Cbc0035I Maximum depth 9, 38 variables fixed on reduced cost
Cbc0038I Probing was tried 65 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Cbc0038I Gomory was tried 65 times and created 39 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)
Cbc0038I Knapsack was tried 65 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.026 seconds)
Cbc0038I Clique was tried 65 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I MixedIntegerRounding2 was tried 90 times and created 20 cuts of which 0 were active after adding rounds of cuts (0.033 seconds)
Cbc0038I FlowCover was tried 65 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
Cbc0038I TwoMirCuts was tried 82 times and created 52 cuts of which 0 were active after adding rounds of cuts (0.054 seconds)
Cbc0038I ZeroHalf was tried 65 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I Stored from first was tried 90 times and created 141 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0030I Thread 0 used 16 times,  waiting to start 0.94598055,  89 locks, 0.0017650127 locked, 0.00067877769 waiting for locks
Cbc0030I Thread 1 used 12 times,  waiting to start 1.1093404,  72 locks, 0.0011997223 locked, 0.0010869503 waiting for locks
Cbc0030I Thread 2 used 10 times,  waiting to start 1.197598,  56 locks, 0.0010578632 locked, 0.00075221062 waiting for locks
Cbc0030I Thread 3 used 4 times,  waiting to start 1.1767585,  26 locks, 0.00043582916 locked, 0.0001013279 waiting for locks
Cbc0030I Thread 4 used 5 times,  waiting to start 1.2766297,  26 locks, 0.00059723854 locked, 0.00043773651 waiting for locks
Cbc0030I Thread 5 used 3 times,  waiting to start 1.3253379,  16 locks, 0.00031161308 locked, 0.00037813187 waiting for locks
Cbc0030I Thread 6 used 3 times,  waiting to start 1.3764021,  13 locks, 0.00032544136 locked, 0.00016975403 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 1.3924761,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 1.3889489,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 1.385359,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 1.3815641,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 1.3779109,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0.15433311 waiting for threads,  116 locks, 0.00056838989 locked, 0.0032889843 waiting for locks
Cbc0001I Search completed - best objective 20361213.78065144, took 8017 iterations and 83 nodes (2.00 seconds)
Cbc0032I Strong branching done 228 times (10505 iterations), fathomed 5 nodes and fixed 1 variables
Cbc0035I Maximum depth 12, 34 variables fixed on reduced cost
Cuts at root node changed objective from 1.95902e+07 to 1.96246e+07
Probing was tried 455 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.104 seconds)
Gomory was tried 455 times and created 598 cuts of which 0 were active after adding rounds of cuts (0.273 seconds)
Knapsack was tried 455 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.202 seconds)
Clique was tried 455 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
MixedIntegerRounding2 was tried 489 times and created 1011 cuts of which 0 were active after adding rounds of cuts (0.198 seconds)
FlowCover was tried 455 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.222 seconds)
TwoMirCuts was tried 455 times and created 91 cuts of which 0 were active after adding rounds of cuts (0.090 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                20361213.78065144
Enumerated nodes:               83
Total iterations:               8017
Time (CPU seconds):             3.52
Time (Wallclock seconds):       2.02

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.53   (Wallclock seconds):       2.02

