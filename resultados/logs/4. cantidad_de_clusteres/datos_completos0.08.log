Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/32804a0351dd4f88a6e48506311897ca-pulp.mps -sec 60 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/32804a0351dd4f88a6e48506311897ca-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 77 COLUMNS
At line 6666 RHS
At line 6739 BOUNDS
At line 8072 ENDATA
Problem MODEL has 72 rows, 1332 columns and 2628 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 60
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.08448 - 0.00 seconds
Cgl0004I processed model has 72 rows, 1332 columns (1332 integer (1332 of which binary)) and 2628 elements
Cbc0038I Initial state - 36 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (36) obj. 1.08448 iterations 0
Cbc0038I Pass   2: suminf.    0.72222 (26) obj. 11.6281 iterations 10
Cbc0038I Pass   3: suminf.    0.38889 (14) obj. 24.2804 iterations 12
Cbc0038I Pass   4: suminf.    0.05556 (2) obj. 36.9327 iterations 12
Cbc0038I Solution found of 39.0414
Cbc0038I Before mini branch and bound, 1296 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 1332 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of 35.2457
Cbc0038I Pass   5: suminf.    1.00000 (36) obj. 1.08448 iterations 0
Cbc0038I Pass   6: suminf.    0.22222 (8) obj. 30.6065 iterations 28
Cbc0038I Pass   7: suminf.    0.49999 (4) obj. 35.2457 iterations 10
Cbc0038I Pass   8: suminf.    0.11111 (4) obj. 34.8239 iterations 1
Cbc0038I Pass   9: suminf.    0.98157 (7) obj. 35.2457 iterations 30
Cbc0038I Pass  10: suminf.    0.17703 (5) obj. 35.2457 iterations 10
Cbc0038I Pass  11: suminf.    0.12147 (4) obj. 35.2457 iterations 3
Cbc0038I Pass  12: suminf.    0.12147 (4) obj. 35.2457 iterations 1
Cbc0038I Pass  13: suminf.    0.12147 (4) obj. 35.2457 iterations 2
Cbc0038I Pass  14: suminf.    0.12147 (4) obj. 35.2457 iterations 0
Cbc0038I Pass  15: suminf.    0.12147 (4) obj. 35.2457 iterations 2
Cbc0038I Pass  16: suminf.    1.01038 (6) obj. 35.2457 iterations 89
Cbc0038I Pass  17: suminf.    0.11111 (4) obj. 34.8796 iterations 54
Cbc0038I Pass  18: suminf.    0.44870 (3) obj. 35.2457 iterations 57
Cbc0038I Pass  19: suminf.    0.05556 (2) obj. 34.8193 iterations 53
Cbc0038I Pass  20: suminf.    0.44870 (2) obj. 35.2457 iterations 49
Cbc0038I Pass  21: suminf.    0.59602 (6) obj. 35.2457 iterations 88
Cbc0038I Pass  22: suminf.    0.11111 (4) obj. 35.0918 iterations 66
Cbc0038I Pass  23: suminf.    0.25303 (2) obj. 35.2457 iterations 58
Cbc0038I Pass  24: suminf.    0.08333 (2) obj. 35.0617 iterations 54
Cbc0038I Pass  25: suminf.    0.25303 (2) obj. 35.2457 iterations 44
Cbc0038I Pass  26: suminf.    0.70183 (7) obj. 35.2457 iterations 82
Cbc0038I Pass  27: suminf.    0.13889 (5) obj. 35.2242 iterations 63
Cbc0038I Pass  28: suminf.    0.15871 (4) obj. 35.2457 iterations 61
Cbc0038I Pass  29: suminf.    0.11111 (4) obj. 35.1941 iterations 59
Cbc0038I Pass  30: suminf.    0.15871 (4) obj. 35.2457 iterations 59
Cbc0038I Pass  31: suminf.    0.05556 (2) obj. 34.4463 iterations 110
Cbc0038I Pass  32: suminf.    0.05556 (2) obj. 34.4463 iterations 60
Cbc0038I Pass  33: suminf.    0.26288 (2) obj. 35.2457 iterations 58
Cbc0038I Pass  34: suminf.    0.26288 (2) obj. 35.2457 iterations 0
Cbc0038I Rounding solution of 31.9432 is better than previous of 39.0414

Cbc0038I Before mini branch and bound, 1183 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 1332 columns, reduced to 58 rows 137 columns
Cbc0038I Mini branch and bound improved solution from 31.9432 to 19.8469 (0.05 seconds)
Cbc0038I Round again with cutoff of 16.0944
Cbc0038I Pass  34: suminf.    1.00000 (36) obj. 1.08448 iterations 0
Cbc0038I Pass  35: suminf.    0.84063 (22) obj. 16.0944 iterations 15
Cbc0038I Pass  36: suminf.    0.61111 (22) obj. 15.8455 iterations 1
Cbc0038I Pass  37: suminf.    0.84063 (22) obj. 16.0944 iterations 2
Cbc0038I Pass  38: suminf.    0.61111 (22) obj. 15.8455 iterations 1
Cbc0038I Pass  39: suminf.    0.84063 (22) obj. 16.0944 iterations 1
Cbc0038I Pass  40: suminf.    0.81661 (18) obj. 16.0944 iterations 42
Cbc0038I Pass  41: suminf.    0.58333 (18) obj. 15.8414 iterations 14
Cbc0038I Pass  42: suminf.    0.81661 (17) obj. 16.0944 iterations 27
Cbc0038I Pass  43: suminf.    0.58333 (17) obj. 15.8414 iterations 17
Cbc0038I Pass  44: suminf.    0.81661 (17) obj. 16.0944 iterations 15
Cbc0038I Pass  45: suminf.    1.12185 (18) obj. 16.0944 iterations 66
Cbc0038I Pass  46: suminf.    0.63889 (17) obj. 15.5706 iterations 18
Cbc0038I Pass  47: suminf.    1.04482 (17) obj. 16.0944 iterations 20
Cbc0038I Pass  48: suminf.    1.04482 (17) obj. 16.0944 iterations 1
Cbc0038I Pass  49: suminf.    0.93370 (16) obj. 16.0944 iterations 8
Cbc0038I Pass  50: suminf.    0.93370 (16) obj. 16.0944 iterations 1
Cbc0038I Pass  51: suminf.    0.98926 (16) obj. 16.0944 iterations 10
Cbc0038I Pass  52: suminf.    0.98926 (16) obj. 16.0944 iterations 1
Cbc0038I Pass  53: suminf.    0.98926 (16) obj. 16.0944 iterations 10
Cbc0038I Pass  54: suminf.    0.98926 (16) obj. 16.0944 iterations 1
Cbc0038I Pass  55: suminf.    0.98926 (16) obj. 16.0944 iterations 8
Cbc0038I Pass  56: suminf.    0.55207 (17) obj. 16.0944 iterations 44
Cbc0038I Pass  57: suminf.    0.55207 (17) obj. 16.0944 iterations 22
Cbc0038I Pass  58: suminf.    0.60763 (17) obj. 16.0944 iterations 12
Cbc0038I Pass  59: suminf.    0.60763 (17) obj. 16.0944 iterations 1
Cbc0038I Pass  60: suminf.    0.60763 (17) obj. 16.0944 iterations 8
Cbc0038I Pass  61: suminf.    0.60763 (17) obj. 16.0944 iterations 1
Cbc0038I Pass  62: suminf.    0.60763 (17) obj. 16.0944 iterations 8
Cbc0038I Pass  63: suminf.    1.03556 (20) obj. 16.0944 iterations 55
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1240 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of 19.8469 - took 0.05 seconds
Cbc0012I Integer solution of 19.846903 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0012I Integer solution of 10.109876 found by DiveCoefficient after 971 iterations and 0 nodes (0.32 seconds)
Cbc0031I 204 added rows had average density of 20.122549
Cbc0013I At root node, 204 cuts changed objective from 1.0844828 to 10.109876 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 730 row cuts average 2.0 elements, 0 column cuts (154 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 146 row cuts average 156.2 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 294 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 229 row cuts average 34.7 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 193 row cuts average 110.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 0.064528942, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.058872938, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.053228855, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.047589064, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.042009115, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.036511898, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.03084898, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.02534008, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.019804001, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.013875008, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.0082929134, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.0028140545, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 6.9141388e-06 locked, 9.5367432e-07 waiting for locks
Cbc0001I Search completed - best objective 10.10987552130538, took 971 iterations and 0 nodes (0.42 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.08448 to 10.1099
Probing was tried 195 times and created 9490 cuts of which 2002 were active after adding rounds of cuts (0.737 seconds)
Gomory was tried 195 times and created 1898 cuts of which 0 were active after adding rounds of cuts (0.495 seconds)
Knapsack was tried 195 times and created 3822 cuts of which 0 were active after adding rounds of cuts (0.210 seconds)
Clique was tried 195 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
MixedIntegerRounding2 was tried 195 times and created 2977 cuts of which 0 were active after adding rounds of cuts (0.144 seconds)
FlowCover was tried 195 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
TwoMirCuts was tried 195 times and created 2509 cuts of which 0 were active after adding rounds of cuts (0.249 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                10.10987552
Enumerated nodes:               0
Total iterations:               971
Time (CPU seconds):             0.38
Time (Wallclock seconds):       0.42

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.39   (Wallclock seconds):       0.43

