Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/b8a40a26ff7a41afacecb8ffc8b144c4-pulp.mps -sec 60 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/b8a40a26ff7a41afacecb8ffc8b144c4-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 559 COLUMNS
At line 385036 RHS
At line 385591 BOUNDS
At line 462598 ENDATA
Problem MODEL has 554 rows, 77006 columns and 153735 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 60
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.24828 - 0.04 seconds
Cgl0004I processed model has 554 rows, 77006 columns (77006 integer (77006 of which binary)) and 153735 elements
Cbc0038I Initial state - 277 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (277) obj. 1.24828 iterations 0
Cbc0038I Pass   2: suminf.    0.93863 (260) obj. 22.3924 iterations 17
Cbc0038I Pass   3: suminf.    0.88448 (245) obj. 41.0489 iterations 15
Cbc0038I Pass   4: suminf.    0.77978 (216) obj. 77.1182 iterations 29
Cbc0038I Pass   5: suminf.    0.70036 (194) obj. 104.481 iterations 22
Cbc0038I Pass   6: suminf.    0.61733 (171) obj. 133.088 iterations 23
Cbc0038I Pass   7: suminf.    0.53430 (148) obj. 161.695 iterations 23
Cbc0038I Pass   8: suminf.    0.47653 (132) obj. 181.595 iterations 16
Cbc0038I Pass   9: suminf.    0.43682 (121) obj. 195.276 iterations 11
Cbc0038I Pass  10: suminf.    0.40072 (111) obj. 207.714 iterations 10
Cbc0038I Pass  11: suminf.    0.30686 (85) obj. 240.052 iterations 26
Cbc0038I Pass  12: suminf.    0.26715 (74) obj. 253.733 iterations 11
Cbc0038I Pass  13: suminf.    0.23105 (64) obj. 266.171 iterations 10
Cbc0038I Pass  14: suminf.    0.19495 (54) obj. 278.609 iterations 10
Cbc0038I Pass  15: suminf.    0.15162 (42) obj. 293.534 iterations 12
Cbc0038I Pass  16: suminf.    0.10830 (30) obj. 308.459 iterations 12
Cbc0038I Pass  17: suminf.    0.06859 (19) obj. 322.141 iterations 11
Cbc0038I Solution found of 345.772
Cbc0038I Before mini branch and bound, 76729 integers at bound fixed and 0 continuous
Cbc0038I Full problem 554 rows 77006 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (2.06 seconds)
Cbc0038I Round again with cutoff of 311.32
Cbc0038I Pass  18: suminf.    1.00000 (277) obj. 1.24828 iterations 0
Cbc0038I Pass  19: suminf.    0.91336 (253) obj. 31.0987 iterations 24
Cbc0038I Pass  20: suminf.    0.85921 (238) obj. 49.7553 iterations 15
Cbc0038I Pass  21: suminf.    0.82310 (228) obj. 62.193 iterations 10
Cbc0038I Pass  22: suminf.    0.74007 (205) obj. 90.7997 iterations 23
Cbc0038I Pass  23: suminf.    0.65343 (181) obj. 120.65 iterations 24
Cbc0038I Pass  24: suminf.    0.61372 (170) obj. 134.332 iterations 11
Cbc0038I Pass  25: suminf.    0.57762 (160) obj. 146.769 iterations 10
Cbc0038I Pass  26: suminf.    0.48014 (133) obj. 180.351 iterations 27
Cbc0038I Pass  27: suminf.    0.42238 (117) obj. 200.251 iterations 16
Cbc0038I Pass  28: suminf.    0.35018 (97) obj. 225.127 iterations 20
Cbc0038I Pass  29: suminf.    0.24910 (69) obj. 259.952 iterations 28
Cbc0038I Pass  30: suminf.    0.18412 (51) obj. 282.34 iterations 18
Cbc0038I Pass  31: suminf.    0.12996 (36) obj. 300.997 iterations 15
Cbc0038I Pass  32: suminf.    0.39999 (28) obj. 311.32 iterations 38
Cbc0038I Pass  33: suminf.    0.10108 (28) obj. 310.947 iterations 1
Cbc0038I Pass  34: suminf.    0.39999 (28) obj. 311.32 iterations 1
Cbc0038I Pass  35: suminf.    0.95221 (26) obj. 311.32 iterations 135
Cbc0038I Pass  36: suminf.    0.15957 (25) obj. 311.32 iterations 51
Cbc0038I Pass  37: suminf.    0.15957 (25) obj. 311.32 iterations 62
Cbc0038I Pass  38: suminf.    0.15957 (25) obj. 311.32 iterations 2
Cbc0038I Pass  39: suminf.    0.15235 (24) obj. 311.32 iterations 77
Cbc0038I Pass  40: suminf.    0.15235 (24) obj. 311.32 iterations 2
Cbc0038I Pass  41: suminf.    0.15235 (24) obj. 311.32 iterations 42
Cbc0038I Pass  42: suminf.    0.15235 (24) obj. 311.32 iterations 2
Cbc0038I Pass  43: suminf.    0.15957 (24) obj. 311.32 iterations 16
Cbc0038I Pass  44: suminf.    0.15957 (24) obj. 311.32 iterations 3
Cbc0038I Pass  45: suminf.    0.15957 (24) obj. 311.32 iterations 32
Cbc0038I Pass  46: suminf.    0.15957 (24) obj. 311.32 iterations 1
Cbc0038I Pass  47: suminf.    0.15957 (24) obj. 311.32 iterations 16
Cbc0038I Rounding solution of 291.276 is better than previous of 345.772

Cbc0038I Before mini branch and bound, 76611 integers at bound fixed and 0 continuous
Cbc0038I Full problem 554 rows 77006 columns, reduced to 42 rows 84 columns
Cbc0038I Mini branch and bound improved solution from 291.276 to 287.836 (3.25 seconds)
Cbc0038I Round again with cutoff of 230.519
Cbc0038I Pass  47: suminf.    1.00000 (277) obj. 1.24828 iterations 0
Cbc0038I Pass  48: suminf.    0.93141 (258) obj. 24.8799 iterations 19
Cbc0038I Pass  49: suminf.    0.88087 (244) obj. 42.2927 iterations 14
Cbc0038I Pass  50: suminf.    0.80505 (223) obj. 68.4118 iterations 21
Cbc0038I Pass  51: suminf.    0.72202 (200) obj. 97.0185 iterations 23
Cbc0038I Pass  52: suminf.    0.63538 (176) obj. 126.869 iterations 24
Cbc0038I Pass  53: suminf.    0.59928 (166) obj. 139.307 iterations 10
Cbc0038I Pass  54: suminf.    0.53069 (147) obj. 162.938 iterations 19
Cbc0038I Pass  55: suminf.    0.42960 (119) obj. 197.764 iterations 28
Cbc0038I Pass  56: suminf.    0.36462 (101) obj. 220.152 iterations 18
Cbc0038I Pass  57: suminf.    0.66953 (93) obj. 230.519 iterations 24
Cbc0038I Pass  58: suminf.    0.33574 (93) obj. 230.102 iterations 1
Cbc0038I Pass  59: suminf.    0.66953 (93) obj. 230.519 iterations 22
Cbc0038I Pass  60: suminf.    0.33574 (93) obj. 230.102 iterations 1
Cbc0038I Pass  61: suminf.    0.66953 (93) obj. 230.519 iterations 4
Cbc0038I Pass  62: suminf.    0.33574 (93) obj. 230.102 iterations 1
Cbc0038I Pass  63: suminf.    0.66953 (93) obj. 230.519 iterations 1
Cbc0038I Pass  64: suminf.    0.79214 (78) obj. 230.519 iterations 59
Cbc0038I Pass  65: suminf.    0.33935 (78) obj. 229.953 iterations 115
Cbc0038I Pass  66: suminf.    0.79214 (77) obj. 230.519 iterations 100
Cbc0038I Pass  67: suminf.    0.30686 (77) obj. 229.913 iterations 96
Cbc0038I Pass  68: suminf.    0.79214 (77) obj. 230.519 iterations 93
Cbc0038I Pass  69: suminf.    0.54317 (66) obj. 230.519 iterations 239
Cbc0038I Pass  70: suminf.    0.54317 (66) obj. 230.519 iterations 183
Cbc0038I Pass  71: suminf.    0.51429 (66) obj. 230.519 iterations 34
Cbc0038I Pass  72: suminf.    0.51429 (66) obj. 230.519 iterations 1
Cbc0038I Pass  73: suminf.    0.50707 (66) obj. 230.519 iterations 47
Cbc0038I Pass  74: suminf.    0.50707 (66) obj. 230.519 iterations 1
Cbc0038I Pass  75: suminf.    0.51429 (66) obj. 230.519 iterations 67
Cbc0038I Pass  76: suminf.    0.72309 (63) obj. 230.519 iterations 197
Cbc0038I Rounding solution of 271.929 is better than previous of 287.836

Cbc0038I Before mini branch and bound, 76544 integers at bound fixed and 0 continuous
Cbc0038I Full problem 554 rows 77006 columns, reduced to 66 rows 132 columns
Cbc0038I Mini branch and bound improved solution from 271.929 to 262.76 (4.42 seconds)
Cbc0038I Round again with cutoff of 161.737
Cbc0038I Pass  76: suminf.    1.00000 (277) obj. 1.24828 iterations 0
Cbc0038I Pass  77: suminf.    0.94585 (262) obj. 19.9048 iterations 15
Cbc0038I Pass  78: suminf.    0.85921 (238) obj. 49.7553 iterations 24
Cbc0038I Pass  79: suminf.    0.77256 (214) obj. 79.6058 iterations 24
Cbc0038I Pass  80: suminf.    0.72924 (202) obj. 94.531 iterations 12
Cbc0038I Pass  81: suminf.    0.63899 (177) obj. 125.625 iterations 25
Cbc0038I Pass  82: suminf.    0.55596 (154) obj. 154.232 iterations 23
Cbc0038I Pass  83: suminf.    0.56867 (148) obj. 161.737 iterations 14
Cbc0038I Pass  84: suminf.    0.53430 (148) obj. 161.695 iterations 1
Cbc0038I Pass  85: suminf.    0.56867 (148) obj. 161.737 iterations 10
Cbc0038I Pass  86: suminf.    0.53430 (148) obj. 161.695 iterations 1
Cbc0038I Pass  87: suminf.    0.56867 (148) obj. 161.737 iterations 4
Cbc0038I Pass  88: suminf.    0.53430 (148) obj. 161.695 iterations 1
Cbc0038I Pass  89: suminf.    0.56867 (148) obj. 161.737 iterations 1
Cbc0038I Pass  90: suminf.    1.46908 (121) obj. 161.737 iterations 171
Cbc0038I Pass  91: suminf.    0.50903 (119) obj. 161.699 iterations 193
Cbc0038I Pass  92: suminf.    0.53974 (116) obj. 161.737 iterations 148
Cbc0038I Pass  93: suminf.    0.47292 (116) obj. 161.654 iterations 139
Cbc0038I Pass  94: suminf.    0.53974 (116) obj. 161.737 iterations 149
Cbc0038I Pass  95: suminf.    0.48014 (116) obj. 161.663 iterations 155
Cbc0038I Pass  96: suminf.    0.53974 (116) obj. 161.737 iterations 133
Cbc0038I Pass  97: suminf.    0.75443 (113) obj. 161.737 iterations 195
Cbc0038I Pass  98: suminf.    0.48375 (112) obj. 161.4 iterations 273
Cbc0038I Pass  99: suminf.    0.75443 (111) obj. 161.737 iterations 195
Cbc0038I Pass 100: suminf.    0.46209 (111) obj. 161.373 iterations 203
Cbc0038I Pass 101: suminf.    0.75443 (111) obj. 161.737 iterations 198
Cbc0038I Pass 102: suminf.    0.45126 (110) obj. 161.359 iterations 197
Cbc0038I Pass 103: suminf.    0.75443 (110) obj. 161.737 iterations 186
Cbc0038I Pass 104: suminf.    0.45487 (110) obj. 161.364 iterations 196
Cbc0038I Pass 105: suminf.    0.74083 (107) obj. 161.737 iterations 315
Cbc0038I Rounding solution of 259.426 is better than previous of 262.76

Cbc0038I Before mini branch and bound, 76494 integers at bound fixed and 0 continuous
Cbc0038I Full problem 554 rows 77006 columns, reduced to 103 rows 207 columns
Cbc0038I Mini branch and bound improved solution from 259.426 to 250.662 (5.71 seconds)
Cbc0038I Round again with cutoff of 113.591
Cbc0038I Pass 105: suminf.    1.00000 (277) obj. 1.24828 iterations 0
Cbc0038I Pass 106: suminf.    0.91697 (254) obj. 29.855 iterations 23
Cbc0038I Pass 107: suminf.    0.82310 (228) obj. 62.193 iterations 26
Cbc0038I Pass 108: suminf.    0.76173 (211) obj. 83.3371 iterations 17
Cbc0038I Pass 109: suminf.    0.99807 (187) obj. 113.591 iterations 30
Cbc0038I Pass 110: suminf.    0.67509 (187) obj. 113.188 iterations 1
Cbc0038I Pass 111: suminf.    0.99807 (187) obj. 113.591 iterations 25
Cbc0038I Pass 112: suminf.    0.67509 (187) obj. 113.188 iterations 1
Cbc0038I Pass 113: suminf.    0.99807 (187) obj. 113.591 iterations 6
Cbc0038I Pass 114: suminf.    0.67509 (187) obj. 113.188 iterations 1
Cbc0038I Pass 115: suminf.    0.99807 (187) obj. 113.591 iterations 1
Cbc0038I Pass 116: suminf.    0.73512 (167) obj. 113.591 iterations 58
Cbc0038I Pass 117: suminf.    0.73512 (167) obj. 113.591 iterations 55
Cbc0038I Pass 118: suminf.    0.66292 (165) obj. 113.591 iterations 34
Cbc0038I Pass 119: suminf.    0.66292 (165) obj. 113.591 iterations 0
Cbc0038I Pass 120: suminf.    0.66292 (165) obj. 113.591 iterations 49
Cbc0038I Pass 121: suminf.    0.66292 (165) obj. 113.591 iterations 0
Cbc0038I Pass 122: suminf.    0.66292 (165) obj. 113.591 iterations 22
Cbc0038I Pass 123: suminf.    0.72890 (153) obj. 113.591 iterations 90
Cbc0038I Pass 124: suminf.    0.64621 (153) obj. 113.487 iterations 188
Cbc0038I Pass 125: suminf.    0.72890 (151) obj. 113.591 iterations 138
Cbc0038I Pass 126: suminf.    0.61733 (151) obj. 113.451 iterations 116
Cbc0038I Pass 127: suminf.    0.72890 (151) obj. 113.591 iterations 120
Cbc0038I Pass 128: suminf.    0.61372 (151) obj. 113.447 iterations 114
Cbc0038I Pass 129: suminf.    0.72890 (151) obj. 113.591 iterations 116
Cbc0038I Pass 130: suminf.    0.79237 (144) obj. 113.591 iterations 149
Cbc0038I Pass 131: suminf.    0.62455 (144) obj. 113.381 iterations 226
Cbc0038I Pass 132: suminf.    0.79237 (143) obj. 113.591 iterations 178
Cbc0038I Pass 133: suminf.    0.61011 (143) obj. 113.363 iterations 180
Cbc0038I Pass 134: suminf.    0.79237 (143) obj. 113.591 iterations 178
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 76556 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (6.81 seconds)
Cbc0038I After 6.81 seconds - Feasibility pump exiting with objective of 250.662 - took 5.45 seconds
Cbc0012I Integer solution of 250.66203 found by feasibility pump after 0 iterations and 0 nodes (6.82 seconds)
Cbc0031I 2357 added rows had average density of 8.6427662
Cbc0013I At root node, 2357 cuts changed objective from 1.2482759 to 16.905323 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 1044 row cuts average 2.3 elements, 0 column cuts (1220 active)  in 5.468 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 74 row cuts average 189.9 elements, 0 column cuts (0 active)  in 1.518 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 3520 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.334 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2429 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.468 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 506 row cuts average 30.9 elements, 0 column cuts (0 active)  in 6.668 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 0.99931288, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.92060399, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.83875513, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.75900984, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.67189097, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.57950091, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.48713112, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.39953494, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.30816793, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.21672702, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.1251061, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.032552958, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 1.0967255e-05 locked, 9.5367432e-07 waiting for locks
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 250.66203 (best possible 16.905323), took 35930 iterations and 0 nodes (61.50 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.24828 to 16.9053
Probing was tried 208 times and created 13572 cuts of which 15860 were active after adding rounds of cuts (71.080 seconds)
Gomory was tried 195 times and created 962 cuts of which 0 were active after adding rounds of cuts (19.739 seconds)
Knapsack was tried 195 times and created 45760 cuts of which 0 were active after adding rounds of cuts (4.342 seconds)
Clique was tried 195 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.680 seconds)
MixedIntegerRounding2 was tried 195 times and created 31577 cuts of which 0 were active after adding rounds of cuts (6.084 seconds)
FlowCover was tried 195 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.291 seconds)
TwoMirCuts was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.051 seconds)
ZeroHalf was tried 195 times and created 6578 cuts of which 0 were active after adding rounds of cuts (86.687 seconds)

Result - Stopped on time limit

Objective value:                250.66202740
Lower bound:                    16.905
Gap:                            13.83
Enumerated nodes:               0
Total iterations:               35930
Time (CPU seconds):             60.91
Time (Wallclock seconds):       61.61

Option for printingOptions changed from normal to all
Total time (CPU seconds):       61.12   (Wallclock seconds):       61.84

