Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/eb408d2df53e4f3697124b7907483afb-pulp.mps -sec 3600 -timeMode elapsed -branch -printingOptions all -solution /tmp/eb408d2df53e4f3697124b7907483afb-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 123 COLUMNS
At line 10744 RHS
At line 10863 BOUNDS
At line 10923 ENDATA
Problem MODEL has 118 rows, 3540 columns and 7021 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
Option for timeMode changed from cpu to elapsed
Continuous objective value is 3.44697e+07 - 0.00 seconds
Cgl0004I processed model has 118 rows, 3540 columns (59 integer (59 of which binary)) and 7021 elements
Cbc0038I Initial state - 59 integers unsatisfied sum - 7.08459
Cbc0038I Pass   1: suminf.    0.13895 (1) obj. 7.18299e+08 iterations 58
Cbc0038I Solution found of 7.33367e+08
Cbc0038I Relaxing continuous gives 4.52886e+08
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 3364 continuous
Cbc0038I Full problem 118 rows 3540 columns, reduced to 113 rows 166 columns
Cbc0038I Mini branch and bound improved solution from 4.52886e+08 to 1.87707e+08 (0.04 seconds)
Cbc0038I Freeing continuous variables gives a solution of 1.67973e+08
Cbc0038I Round again with cutoff of 1.54623e+08
Cbc0038I Pass   2: suminf.    1.47331 (10) obj. 1.54623e+08 iterations 104
Cbc0038I Pass   3: suminf.    0.60970 (13) obj. 1.54623e+08 iterations 61
Cbc0038I Pass   4: suminf.    0.39780 (4) obj. 1.54623e+08 iterations 68
Cbc0038I Pass   5: suminf.    0.22362 (7) obj. 1.54623e+08 iterations 24
Cbc0038I Pass   6: suminf.    0.77894 (3) obj. 1.54623e+08 iterations 20
Cbc0038I Pass   7: suminf.    0.16581 (2) obj. 1.54623e+08 iterations 3
Cbc0038I Pass   8: suminf.    0.35280 (2) obj. 1.54623e+08 iterations 17
Cbc0038I Pass   9: suminf.    0.05583 (1) obj. 1.54623e+08 iterations 5
Cbc0038I Pass  10: suminf.    0.54825 (3) obj. 1.54623e+08 iterations 27
Cbc0038I Pass  11: suminf.    0.06745 (1) obj. 1.54623e+08 iterations 8
Cbc0038I Pass  12: suminf.    0.45758 (3) obj. 1.54623e+08 iterations 7
Cbc0038I Pass  13: suminf.    0.58758 (4) obj. 1.54623e+08 iterations 37
Cbc0038I Pass  14: suminf.    0.82575 (5) obj. 1.54623e+08 iterations 22
Cbc0038I Pass  15: suminf.    0.08280 (2) obj. 1.54623e+08 iterations 23
Cbc0038I Pass  16: suminf.    0.19697 (3) obj. 1.54623e+08 iterations 7
Cbc0038I Pass  17: suminf.    0.19697 (3) obj. 1.54623e+08 iterations 0
Cbc0038I Pass  18: suminf.    0.16114 (2) obj. 1.54623e+08 iterations 10
Cbc0038I Pass  19: suminf.    0.16114 (2) obj. 1.54623e+08 iterations 0
Cbc0038I Pass  20: suminf.    0.15879 (2) obj. 1.54623e+08 iterations 4
Cbc0038I Pass  21: suminf.    0.15879 (2) obj. 1.54623e+08 iterations 0
Cbc0038I Pass  22: suminf.    0.40739 (2) obj. 1.54623e+08 iterations 6
Cbc0038I Pass  23: suminf.    0.40739 (2) obj. 1.54623e+08 iterations 0
Cbc0038I Pass  24: suminf.    0.12823 (4) obj. 1.54623e+08 iterations 42
Cbc0038I Pass  25: suminf.    0.71232 (8) obj. 1.54623e+08 iterations 15
Cbc0038I Pass  26: suminf.    0.17286 (4) obj. 1.54623e+08 iterations 12
Cbc0038I Pass  27: suminf.    0.44741 (5) obj. 1.54623e+08 iterations 16
Cbc0038I Pass  28: suminf.    0.44741 (5) obj. 1.54623e+08 iterations 0
Cbc0038I Pass  29: suminf.    0.69275 (6) obj. 1.54623e+08 iterations 17
Cbc0038I Pass  30: suminf.    0.69275 (6) obj. 1.54623e+08 iterations 0
Cbc0038I Pass  31: suminf.    1.45397 (6) obj. 1.54623e+08 iterations 10
Cbc0038I Rounding solution of 1.6583e+08 is better than previous of 1.67973e+08

Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 3307 continuous
Cbc0038I Full problem 118 rows 3540 columns, reduced to 110 rows 221 columns
Cbc0038I Mini branch and bound improved solution from 1.6583e+08 to 1.52229e+08 (0.17 seconds)
Cbc0038I Freeing continuous variables gives a solution of 1.43168e+08
Cbc0038I Round again with cutoff of 1.21428e+08
Cbc0038I Pass  31: suminf.    2.01773 (22) obj. 1.21428e+08 iterations 15
Cbc0038I Pass  32: suminf.    1.38869 (23) obj. 1.21428e+08 iterations 96
Cbc0038I Pass  33: suminf.    3.36427 (23) obj. 1.21428e+08 iterations 54
Cbc0038I Pass  34: suminf.    3.36427 (23) obj. 1.21428e+08 iterations 0
Cbc0038I Pass  35: suminf.    4.15706 (23) obj. 1.21428e+08 iterations 25
Cbc0038I Pass  36: suminf.    3.14637 (22) obj. 1.21428e+08 iterations 9
Cbc0038I Pass  37: suminf.    4.07375 (24) obj. 1.21428e+08 iterations 16
Cbc0038I Pass  38: suminf.    3.39607 (23) obj. 1.21428e+08 iterations 12
Cbc0038I Pass  39: suminf.    4.28402 (24) obj. 1.21428e+08 iterations 7
Cbc0038I Pass  40: suminf.    4.28402 (24) obj. 1.21428e+08 iterations 0
Cbc0038I Pass  41: suminf.    3.79361 (23) obj. 1.21428e+08 iterations 15
Cbc0038I Pass  42: suminf.    3.35488 (23) obj. 1.21428e+08 iterations 9
Cbc0038I Pass  43: suminf.    3.79361 (23) obj. 1.21428e+08 iterations 6
Cbc0038I Pass  44: suminf.    2.78050 (22) obj. 1.21428e+08 iterations 31
Cbc0038I Pass  45: suminf.    2.68388 (22) obj. 1.21428e+08 iterations 2
Cbc0038I Pass  46: suminf.    2.68388 (22) obj. 1.21428e+08 iterations 0
Cbc0038I Pass  47: suminf.    3.57227 (23) obj. 1.21428e+08 iterations 21
Cbc0038I Pass  48: suminf.    3.27460 (22) obj. 1.21428e+08 iterations 4
Cbc0038I Pass  49: suminf.    3.47868 (22) obj. 1.21428e+08 iterations 6
Cbc0038I Pass  50: suminf.    2.67317 (22) obj. 1.21428e+08 iterations 45
Cbc0038I Pass  51: suminf.    2.67317 (22) obj. 1.21428e+08 iterations 0
Cbc0038I Pass  52: suminf.    3.77738 (24) obj. 1.21428e+08 iterations 21
Cbc0038I Pass  53: suminf.    3.74987 (24) obj. 1.21428e+08 iterations 1
Cbc0038I Pass  54: suminf.    4.23095 (24) obj. 1.21428e+08 iterations 5
Cbc0038I Pass  55: suminf.    4.10104 (25) obj. 1.21428e+08 iterations 1
Cbc0038I Pass  56: suminf.    3.59431 (23) obj. 1.21428e+08 iterations 9
Cbc0038I Pass  57: suminf.    3.32046 (24) obj. 1.21428e+08 iterations 8
Cbc0038I Pass  58: suminf.    3.32311 (24) obj. 1.21428e+08 iterations 2
Cbc0038I Pass  59: suminf.    2.23901 (17) obj. 1.21428e+08 iterations 44
Cbc0038I Pass  60: suminf.    1.97665 (16) obj. 1.21428e+08 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 3359 continuous
Cbc0038I Full problem 118 rows 3540 columns, reduced to 92 rows 149 columns
Cbc0038I Mini branch and bound did not improve solution (0.27 seconds)
Cbc0038I After 0.27 seconds - Feasibility pump exiting with objective of 1.43168e+08 - took 0.23 seconds
Cbc0012I Integer solution of 1.4316758e+08 found by feasibility pump after 0 iterations and 0 nodes (0.27 seconds)
Cbc0012I Integer solution of 1.425995e+08 found by DiveCoefficient after 237 iterations and 0 nodes (0.44 seconds)
Cbc0031I 90 added rows had average density of 118.66667
Cbc0013I At root node, 90 cuts changed objective from 34469678 to 1.2799091e+08 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 7 row cuts average 59.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 79 row cuts average 97.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 3 row cuts average 177.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 127 row cuts average 125.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1.425995e+08 best solution, best possible 1.2799091e+08 (0.46 seconds)
Cbc0012I Integer solution of 1.4218648e+08 found by DiveCoefficient after 240 iterations and 1 nodes (0.49 seconds)
Cbc0012I Integer solution of 1.4149203e+08 found by DiveCoefficient after 247 iterations and 3 nodes (0.54 seconds)
Cbc0012I Integer solution of 1.4095822e+08 found by DiveCoefficient after 251 iterations and 4 nodes (0.59 seconds)
Cbc0012I Integer solution of 1.3985103e+08 found by DiveCoefficient after 284 iterations and 8 nodes (0.69 seconds)
Cbc0012I Integer solution of 1.3919804e+08 found by DiveCoefficient after 290 iterations and 10 nodes (0.71 seconds)
Cbc0012I Integer solution of 1.38837e+08 found by DiveCoefficient after 293 iterations and 11 nodes (0.72 seconds)
Cbc0012I Integer solution of 1.3362797e+08 found by rounding after 341 iterations and 27 nodes (0.80 seconds)
Cbc0012I Integer solution of 1.3120439e+08 found by rounding after 345 iterations and 29 nodes (0.80 seconds)
Cbc0001I Search completed - best objective 131204392.3187, took 574 iterations and 56 nodes (0.91 seconds)
Cbc0032I Strong branching done 524 times (2144 iterations), fathomed 5 nodes and fixed 12 variables
Cbc0035I Maximum depth 26, 0 variables fixed on reduced cost
Cuts at root node changed objective from 3.44697e+07 to 1.27991e+08
Probing was tried 13 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.031 seconds)
Gomory was tried 13 times and created 79 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Knapsack was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 13 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
FlowCover was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.033 seconds)
TwoMirCuts was tried 51 times and created 127 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                131204392.31870002
Enumerated nodes:               56
Total iterations:               574
Time (CPU seconds):             0.89
Time (Wallclock seconds):       0.92

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.90   (Wallclock seconds):       0.93

