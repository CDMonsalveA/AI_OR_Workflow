Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/43c071edcef4494094bbb0f91df70183-pulp.mps -sec 3600 -timeMode elapsed -branch -printingOptions all -solution /tmp/43c071edcef4494094bbb0f91df70183-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 85 COLUMNS
At line 5006 RHS
At line 5087 BOUNDS
At line 5128 ENDATA
Problem MODEL has 80 rows, 1640 columns and 3240 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.94238e+07 - 0.00 seconds
Cgl0004I processed model has 80 rows, 1640 columns (40 integer (40 of which binary)) and 3240 elements
Cbc0038I Initial state - 40 integers unsatisfied sum - 5.86838
Cbc0038I Pass   1: suminf.    0.22708 (1) obj. 4.56937e+08 iterations 39
Cbc0038I Pass   2: suminf.    0.22708 (1) obj. 4.56937e+08 iterations 0
Cbc0038I Solution found of 4.59341e+08
Cbc0038I Relaxing continuous gives 2.85927e+08
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 1521 continuous
Cbc0038I Full problem 80 rows 1640 columns, reduced to 74 rows 109 columns
Cbc0038I Mini branch and bound improved solution from 2.85927e+08 to 1.21458e+08 (0.02 seconds)
Cbc0038I Freeing continuous variables gives a solution of 1.15538e+08
Cbc0038I Round again with cutoff of 1.05926e+08
Cbc0038I Pass   3: suminf.    3.11435 (19) obj. 1.05926e+08 iterations 75
Cbc0038I Pass   4: suminf.    2.85032 (18) obj. 1.05926e+08 iterations 4
Cbc0038I Pass   5: suminf.    0.24409 (4) obj. 1.05926e+08 iterations 42
Cbc0038I Pass   6: suminf.    0.19380 (2) obj. 1.05926e+08 iterations 22
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. 1.05926e+08 iterations 20
Cbc0038I Solution found of 1.05926e+08
Cbc0038I Relaxing continuous gives 1.0546e+08
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 1516 continuous
Cbc0038I Full problem 80 rows 1640 columns, reduced to 47 rows 88 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Freeing continuous variables gives a solution of 1.0546e+08
Cbc0038I Round again with cutoff of 8.82531e+07
Cbc0038I Pass   8: suminf.    3.53747 (21) obj. 8.82531e+07 iterations 2
Cbc0038I Pass   9: suminf.    3.15617 (20) obj. 8.82531e+07 iterations 4
Cbc0038I Pass  10: suminf.    0.63542 (8) obj. 8.82531e+07 iterations 38
Cbc0038I Pass  11: suminf.    0.68170 (9) obj. 8.82531e+07 iterations 28
Cbc0038I Pass  12: suminf.    2.67472 (13) obj. 8.82531e+07 iterations 26
Cbc0038I Pass  13: suminf.    2.12842 (12) obj. 8.82531e+07 iterations 3
Cbc0038I Pass  14: suminf.    2.59499 (13) obj. 8.82531e+07 iterations 18
Cbc0038I Pass  15: suminf.    2.23087 (12) obj. 8.82531e+07 iterations 3
Cbc0038I Pass  16: suminf.    2.62116 (12) obj. 8.82531e+07 iterations 4
Cbc0038I Pass  17: suminf.    2.09347 (10) obj. 8.82531e+07 iterations 7
Cbc0038I Pass  18: suminf.    2.49584 (11) obj. 8.82531e+07 iterations 4
Cbc0038I Pass  19: suminf.    2.02446 (12) obj. 8.82531e+07 iterations 21
Cbc0038I Pass  20: suminf.    2.65325 (12) obj. 8.82531e+07 iterations 12
Cbc0038I Pass  21: suminf.    2.13566 (11) obj. 8.82531e+07 iterations 6
Cbc0038I Pass  22: suminf.    2.65325 (12) obj. 8.82531e+07 iterations 5
Cbc0038I Pass  23: suminf.    2.52700 (12) obj. 8.82531e+07 iterations 13
Cbc0038I Pass  24: suminf.    2.65325 (12) obj. 8.82531e+07 iterations 9
Cbc0038I Pass  25: suminf.    1.41032 (9) obj. 8.82531e+07 iterations 28
Cbc0038I Pass  26: suminf.    2.55477 (12) obj. 8.82531e+07 iterations 16
Cbc0038I Pass  27: suminf.    2.55477 (12) obj. 8.82531e+07 iterations 0
Cbc0038I Pass  28: suminf.    2.61925 (12) obj. 8.82531e+07 iterations 10
Cbc0038I Pass  29: suminf.    2.19205 (12) obj. 8.82531e+07 iterations 7
Cbc0038I Pass  30: suminf.    2.77856 (13) obj. 8.82531e+07 iterations 4
Cbc0038I Pass  31: suminf.    2.13566 (11) obj. 8.82531e+07 iterations 7
Cbc0038I Pass  32: suminf.    2.65325 (12) obj. 8.82531e+07 iterations 5
Cbc0038I Pass  33: suminf.    2.20758 (12) obj. 8.82531e+07 iterations 16
Cbc0038I Pass  34: suminf.    2.20758 (12) obj. 8.82531e+07 iterations 0
Cbc0038I Pass  35: suminf.    1.34841 (8) obj. 8.82531e+07 iterations 29
Cbc0038I Pass  36: suminf.    1.89728 (11) obj. 8.82531e+07 iterations 24
Cbc0038I Pass  37: suminf.    2.49584 (11) obj. 8.82531e+07 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 1504 continuous
Cbc0038I Full problem 80 rows 1640 columns, reduced to 64 rows 118 columns
Cbc0038I Mini branch and bound improved solution from 1.0546e+08 to 9.60832e+07 (0.13 seconds)
Cbc0038I Freeing continuous variables gives a solution of 9.06948e+07
Cbc0038I Round again with cutoff of 6.76043e+07
Cbc0038I Pass  37: suminf.    4.07757 (26) obj. 6.76043e+07 iterations 5
Cbc0038I Pass  38: suminf.    3.56259 (24) obj. 6.76043e+07 iterations 4
Cbc0038I Pass  39: suminf.    2.53283 (20) obj. 6.76043e+07 iterations 55
Cbc0038I Pass  40: suminf.    2.45395 (21) obj. 6.76043e+07 iterations 1
Cbc0038I Pass  41: suminf.    3.16604 (20) obj. 6.76043e+07 iterations 20
Cbc0038I Pass  42: suminf.    3.04459 (19) obj. 6.76043e+07 iterations 4
Cbc0038I Pass  43: suminf.    3.35888 (20) obj. 6.76043e+07 iterations 7
Cbc0038I Pass  44: suminf.    3.23356 (21) obj. 6.76043e+07 iterations 1
Cbc0038I Pass  45: suminf.    3.35888 (20) obj. 6.76043e+07 iterations 1
Cbc0038I Pass  46: suminf.    3.19086 (20) obj. 6.76043e+07 iterations 21
Cbc0038I Pass  47: suminf.    3.07062 (19) obj. 6.76043e+07 iterations 1
Cbc0038I Pass  48: suminf.    3.49831 (19) obj. 6.76043e+07 iterations 8
Cbc0038I Pass  49: suminf.    3.74084 (20) obj. 6.76043e+07 iterations 22
Cbc0038I Pass  50: suminf.    3.46129 (20) obj. 6.76043e+07 iterations 2
Cbc0038I Pass  51: suminf.    3.23356 (21) obj. 6.76043e+07 iterations 11
Cbc0038I Pass  52: suminf.    3.23356 (21) obj. 6.76043e+07 iterations 0
Cbc0038I Pass  53: suminf.    3.35888 (20) obj. 6.76043e+07 iterations 1
Cbc0038I Pass  54: suminf.    3.08923 (19) obj. 6.76043e+07 iterations 22
Cbc0038I Pass  55: suminf.    3.35888 (20) obj. 6.76043e+07 iterations 11
Cbc0038I Pass  56: suminf.    3.22353 (21) obj. 6.76043e+07 iterations 35
Cbc0038I Pass  57: suminf.    3.22353 (21) obj. 6.76043e+07 iterations 0
Cbc0038I Pass  58: suminf.    3.38141 (21) obj. 6.76043e+07 iterations 17
Cbc0038I Pass  59: suminf.    3.23356 (21) obj. 6.76043e+07 iterations 3
Cbc0038I Pass  60: suminf.    3.23356 (21) obj. 6.76043e+07 iterations 0
Cbc0038I Pass  61: suminf.    3.19521 (21) obj. 6.76043e+07 iterations 24
Cbc0038I Pass  62: suminf.    3.06356 (20) obj. 6.76043e+07 iterations 3
Cbc0038I Pass  63: suminf.    3.41540 (21) obj. 6.76043e+07 iterations 12
Cbc0038I Pass  64: suminf.    3.44737 (21) obj. 6.76043e+07 iterations 31
Cbc0038I Pass  65: suminf.    3.44737 (21) obj. 6.76043e+07 iterations 0
Cbc0038I Pass  66: suminf.    3.36206 (20) obj. 6.76043e+07 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 1536 continuous
Cbc0038I Full problem 80 rows 1640 columns, reduced to 42 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of 9.06948e+07 - took 0.10 seconds
Cbc0012I Integer solution of 90694811 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0012I Integer solution of 90485107 found by DiveCoefficient after 2054 iterations and 0 nodes (1.07 seconds)
Cbc0031I 68 added rows had average density of 137.14706
Cbc0013I At root node, 68 cuts changed objective from 19423764 to 84082705 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10 row cuts average 40.0 elements, 0 column cuts (0 active)  in 0.098 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 751 row cuts average 356.9 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 34 row cuts average 233.8 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.317 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 108 row cuts average 126.3 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 90485107 best solution, best possible 84082705 (1.08 seconds)
Cbc0012I Integer solution of 90367993 found by DiveCoefficient after 2073 iterations and 2 nodes (1.11 seconds)
Cbc0012I Integer solution of 89985633 found by DiveCoefficient after 2102 iterations and 3 nodes (1.13 seconds)
Cbc0012I Integer solution of 88879002 found by DiveCoefficient after 2108 iterations and 3 nodes (1.14 seconds)
Cbc0012I Integer solution of 88570097 found by DiveCoefficient after 2133 iterations and 6 nodes (1.18 seconds)
Cbc0012I Integer solution of 88292090 found by DiveCoefficient after 2138 iterations and 7 nodes (1.19 seconds)
Cbc0012I Integer solution of 88008646 found by DiveCoefficient after 2139 iterations and 8 nodes (1.19 seconds)
Cbc0012I Integer solution of 87864164 found by DiveCoefficient after 2209 iterations and 12 nodes (1.22 seconds)
Cbc0004I Integer solution of 87322782 found after 2237 iterations and 15 nodes (1.23 seconds)
Cbc0012I Integer solution of 86135337 found by DiveCoefficient after 2274 iterations and 19 nodes (1.24 seconds)
Cbc0012I Integer solution of 85172213 found by DiveCoefficient after 2276 iterations and 20 nodes (1.25 seconds)
Cbc0016I Integer solution of 84486349 found by strong branching after 2298 iterations and 24 nodes (1.26 seconds)
Cbc0012I Integer solution of 84404353 found by DiveCoefficient after 2389 iterations and 32 nodes (1.28 seconds)
Cbc0001I Search completed - best objective 84404353.224538, took 2490 iterations and 36 nodes (1.30 seconds)
Cbc0032I Strong branching done 276 times (2595 iterations), fathomed 4 nodes and fixed 14 variables
Cbc0035I Maximum depth 10, 8 variables fixed on reduced cost
Cuts at root node changed objective from 1.94238e+07 to 8.40827e+07
Probing was tried 100 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.098 seconds)
Gomory was tried 134 times and created 751 cuts of which 0 were active after adding rounds of cuts (0.069 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 34 cuts of which 0 were active after adding rounds of cuts (0.054 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.317 seconds)
TwoMirCuts was tried 134 times and created 112 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                84404353.22453800
Enumerated nodes:               36
Total iterations:               2490
Time (CPU seconds):             1.22
Time (Wallclock seconds):       1.32

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.22   (Wallclock seconds):       1.32

