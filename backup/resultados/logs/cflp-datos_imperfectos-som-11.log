Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/51cef226e59748a09f5d885a3a0fa265-pulp.mps -sec 3600 -timeMode elapsed -branch -printingOptions all -solution /tmp/51cef226e59748a09f5d885a3a0fa265-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 157 COLUMNS
At line 17714 RHS
At line 17867 BOUNDS
At line 17944 ENDATA
Problem MODEL has 152 rows, 5852 columns and 11628 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.15014e+08 - 0.00 seconds
Cgl0004I processed model has 152 rows, 5852 columns (76 integer (76 of which binary)) and 11628 elements
Cbc0038I Initial state - 76 integers unsatisfied sum - 9.16668
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 4.01796e+08 iterations 76
Cbc0038I Solution found of 4.01796e+08
Cbc0038I Relaxing continuous gives 3.67814e+08
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 5625 continuous
Cbc0038I Full problem 152 rows 5852 columns, reduced to 148 rows 219 columns
Cbc0038I Mini branch and bound improved solution from 3.67814e+08 to 3.03594e+08 (0.08 seconds)
Cbc0038I Freeing continuous variables gives a solution of 2.46903e+08
Cbc0038I Round again with cutoff of 2.33714e+08
Cbc0038I Pass   2: suminf.    2.19220 (27) obj. 2.33714e+08 iterations 102
Cbc0038I Pass   3: suminf.    1.67517 (25) obj. 2.33714e+08 iterations 14
Cbc0038I Pass   4: suminf.    0.36916 (3) obj. 2.33714e+08 iterations 84
Cbc0038I Pass   5: suminf.    0.36915 (3) obj. 2.33714e+08 iterations 1
Cbc0038I Pass   6: suminf.    0.34239 (2) obj. 2.33714e+08 iterations 22
Cbc0038I Pass   7: suminf.    0.34239 (2) obj. 2.33714e+08 iterations 0
Cbc0038I Pass   8: suminf.    0.32676 (1) obj. 2.33714e+08 iterations 14
Cbc0038I Pass   9: suminf.    0.30519 (1) obj. 2.33714e+08 iterations 7
Cbc0038I Pass  10: suminf.    1.00019 (8) obj. 2.33714e+08 iterations 75
Cbc0038I Pass  11: suminf.    0.33703 (1) obj. 2.33714e+08 iterations 60
Cbc0038I Pass  12: suminf.    0.29670 (1) obj. 2.33714e+08 iterations 4
Cbc0038I Pass  13: suminf.    0.73068 (5) obj. 2.33714e+08 iterations 56
Cbc0038I Pass  14: suminf.    1.16526 (11) obj. 2.33714e+08 iterations 20
Cbc0038I Pass  15: suminf.    1.16526 (11) obj. 2.33714e+08 iterations 0
Cbc0038I Pass  16: suminf.    4.03004 (26) obj. 2.33714e+08 iterations 43
Cbc0038I Pass  17: suminf.    3.81201 (26) obj. 2.33714e+08 iterations 3
Cbc0038I Pass  18: suminf.    3.86252 (25) obj. 2.33714e+08 iterations 39
Cbc0038I Pass  19: suminf.    2.94533 (23) obj. 2.33714e+08 iterations 7
Cbc0038I Pass  20: suminf.    3.90620 (26) obj. 2.33714e+08 iterations 13
Cbc0038I Pass  21: suminf.    3.63209 (25) obj. 2.33714e+08 iterations 3
Cbc0038I Pass  22: suminf.    3.86199 (25) obj. 2.33714e+08 iterations 16
Cbc0038I Pass  23: suminf.    3.40862 (25) obj. 2.33714e+08 iterations 4
Cbc0038I Pass  24: suminf.    3.85981 (26) obj. 2.33714e+08 iterations 16
Cbc0038I Pass  25: suminf.    2.22052 (16) obj. 2.33714e+08 iterations 60
Cbc0038I Pass  26: suminf.    2.02264 (15) obj. 2.33714e+08 iterations 3
Cbc0038I Pass  27: suminf.    3.49753 (25) obj. 2.33714e+08 iterations 25
Cbc0038I Pass  28: suminf.    3.05248 (21) obj. 2.33714e+08 iterations 10
Cbc0038I Pass  29: suminf.    4.21033 (26) obj. 2.33714e+08 iterations 12
Cbc0038I Pass  30: suminf.    3.59664 (24) obj. 2.33714e+08 iterations 2
Cbc0038I Pass  31: suminf.    2.97472 (20) obj. 2.33714e+08 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 5550 continuous
Cbc0038I Full problem 152 rows 5852 columns, reduced to 141 rows 283 columns
Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
Cbc0038I After 0.22 seconds - Feasibility pump exiting with objective of 2.46903e+08 - took 0.17 seconds
Cbc0012I Integer solution of 2.4690327e+08 found by feasibility pump after 0 iterations and 0 nodes (0.22 seconds)
Cbc0012I Integer solution of 2.4683101e+08 found by DiveCoefficient after 209 iterations and 0 nodes (0.41 seconds)
Cbc0031I 109 added rows had average density of 131.08257
Cbc0013I At root node, 109 cuts changed objective from 1.1501373e+08 to 2.1900976e+08 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 2 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 87 row cuts average 97.8 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 145 row cuts average 143.1 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 2.4683101e+08 best solution, best possible 2.1900976e+08 (0.43 seconds)
Cbc0012I Integer solution of 2.459601e+08 found by DiveCoefficient after 213 iterations and 1 nodes (0.48 seconds)
Cbc0012I Integer solution of 2.454484e+08 found by DiveCoefficient after 220 iterations and 2 nodes (0.57 seconds)
Cbc0012I Integer solution of 2.45299e+08 found by DiveCoefficient after 226 iterations and 3 nodes (0.66 seconds)
Cbc0012I Integer solution of 2.4486602e+08 found by DiveCoefficient after 227 iterations and 3 nodes (0.75 seconds)
Cbc0012I Integer solution of 2.4269159e+08 found by DiveCoefficient after 228 iterations and 4 nodes (0.80 seconds)
Cbc0012I Integer solution of 2.426307e+08 found by DiveCoefficient after 233 iterations and 5 nodes (0.92 seconds)
Cbc0012I Integer solution of 2.4255486e+08 found by DiveCoefficient after 246 iterations and 7 nodes (1.09 seconds)
Cbc0012I Integer solution of 2.4235918e+08 found by DiveCoefficient after 251 iterations and 8 nodes (1.16 seconds)
Cbc0012I Integer solution of 2.408807e+08 found by DiveCoefficient after 262 iterations and 10 nodes (1.22 seconds)
Cbc0038I Full problem 152 rows 5852 columns, reduced to 110 rows 2604 columns - 1 fixed gives 110, 2603 - still too large
Cbc0038I Full problem 152 rows 5852 columns, reduced to 110 rows 2603 columns - too large
Cbc0012I Integer solution of 2.3460323e+08 found by rounding after 492 iterations and 58 nodes (1.52 seconds)
Cbc0012I Integer solution of 2.3063026e+08 found by rounding after 510 iterations and 61 nodes (1.53 seconds)
Cbc0016I Integer solution of 2.3029944e+08 found by strong branching after 516 iterations and 62 nodes (1.53 seconds)
Cbc0038I Full problem 152 rows 5852 columns, reduced to 107 rows 2374 columns
Cbc0010I After 100 nodes, 48 on tree, 2.3029944e+08 best solution, best possible 2.1900976e+08 (1.69 seconds)
Cbc0004I Integer solution of 2.2989143e+08 found after 954 iterations and 132 nodes (1.74 seconds)
Cbc0004I Integer solution of 2.2968519e+08 found after 1104 iterations and 175 nodes (1.80 seconds)
Cbc0010I After 200 nodes, 50 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (1.83 seconds)
Cbc0038I Full problem 152 rows 5852 columns, reduced to 102 rows 1988 columns
Cbc0010I After 300 nodes, 67 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (2.02 seconds)
Cbc0038I Full problem 152 rows 5852 columns, reduced to 103 rows 2065 columns
Cbc0010I After 400 nodes, 55 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (2.20 seconds)
Cbc0038I Full problem 152 rows 5852 columns, reduced to 111 rows 2683 columns - 2 fixed gives 111, 2681 - still too large
Cbc0038I Full problem 152 rows 5852 columns, reduced to 111 rows 2681 columns - too large
Cbc0010I After 500 nodes, 69 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (2.38 seconds)
Cbc0038I Full problem 152 rows 5852 columns, reduced to 111 rows 2682 columns - 1 fixed gives 111, 2681 - still too large
Cbc0038I Full problem 152 rows 5852 columns, reduced to 111 rows 2681 columns - too large
Cbc0010I After 600 nodes, 87 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (2.64 seconds)
Cbc0038I Full problem 152 rows 5852 columns, reduced to 110 rows 2605 columns - 2 fixed gives 110, 2603 - still too large
Cbc0038I Full problem 152 rows 5852 columns, reduced to 110 rows 2603 columns - too large
Cbc0010I After 700 nodes, 123 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (2.93 seconds)
Cbc0038I Full problem 152 rows 5852 columns, reduced to 107 rows 2375 columns
Cbc0010I After 800 nodes, 163 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (3.39 seconds)
Cbc0010I After 900 nodes, 179 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (3.86 seconds)
Cbc0038I Full problem 152 rows 5852 columns, reduced to 99 rows 1757 columns
Cbc0010I After 1000 nodes, 192 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (4.35 seconds)
Cbc0010I After 1100 nodes, 207 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (4.72 seconds)
Cbc0010I After 1200 nodes, 203 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (5.02 seconds)
Cbc0010I After 1300 nodes, 203 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (5.42 seconds)
Cbc0010I After 1400 nodes, 197 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (5.86 seconds)
Cbc0010I After 1500 nodes, 196 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (6.39 seconds)
Cbc0010I After 1600 nodes, 196 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (7.16 seconds)
Cbc0010I After 1700 nodes, 164 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (7.62 seconds)
Cbc0010I After 1800 nodes, 121 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (8.00 seconds)
Cbc0010I After 1900 nodes, 84 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (8.57 seconds)
Cbc0010I After 2000 nodes, 66 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (9.23 seconds)
Cbc0010I After 2100 nodes, 51 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (10.00 seconds)
Cbc0010I After 2200 nodes, 33 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (11.01 seconds)
Cbc0038I Full problem 152 rows 5852 columns, reduced to 111 rows 2684 columns - 2 fixed gives 111, 2682 - still too large
Cbc0038I Full problem 152 rows 5852 columns, reduced to 111 rows 2682 columns - too large
Cbc0010I After 2300 nodes, 27 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (12.01 seconds)
Cbc0010I After 2400 nodes, 23 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (12.67 seconds)
Cbc0010I After 2500 nodes, 21 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (13.27 seconds)
Cbc0010I After 2600 nodes, 28 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (13.86 seconds)
Cbc0010I After 2700 nodes, 23 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (14.46 seconds)
Cbc0010I After 2800 nodes, 25 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (15.13 seconds)
Cbc0010I After 2900 nodes, 21 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (15.75 seconds)
Cbc0010I After 3000 nodes, 18 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (16.36 seconds)
Cbc0010I After 3100 nodes, 17 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (16.92 seconds)
Cbc0010I After 3200 nodes, 16 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (17.54 seconds)
Cbc0010I After 3300 nodes, 22 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (18.19 seconds)
Cbc0010I After 3400 nodes, 14 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (18.76 seconds)
Cbc0038I Full problem 152 rows 5852 columns, reduced to 121 rows 3453 columns - 1 fixed gives 121, 3452 - still too large
Cbc0038I Full problem 152 rows 5852 columns, reduced to 121 rows 3452 columns - too large
Cbc0010I After 3500 nodes, 18 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (19.29 seconds)
Cbc0010I After 3600 nodes, 13 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (19.78 seconds)
Cbc0010I After 3700 nodes, 19 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (20.34 seconds)
Cbc0010I After 3800 nodes, 16 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (20.88 seconds)
Cbc0010I After 3900 nodes, 17 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (21.43 seconds)
Cbc0010I After 4000 nodes, 15 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (22.02 seconds)
Cbc0010I After 4100 nodes, 12 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (22.47 seconds)
Cbc0038I Full problem 152 rows 5852 columns, reduced to 108 rows 2452 columns
Cbc0010I After 4200 nodes, 22 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (23.08 seconds)
Cbc0010I After 4300 nodes, 16 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (23.61 seconds)
Cbc0010I After 4400 nodes, 18 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (24.12 seconds)
Cbc0010I After 4500 nodes, 18 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (24.62 seconds)
Cbc0010I After 4600 nodes, 12 on tree, 2.2968519e+08 best solution, best possible 2.1900976e+08 (25.14 seconds)
Cbc0016I Integer solution of 2.2965977e+08 found by strong branching after 44729 iterations and 4689 nodes (25.62 seconds)
Cbc0010I After 4700 nodes, 31 on tree, 2.2965977e+08 best solution, best possible 2.1900976e+08 (25.71 seconds)
Cbc0016I Integer solution of 2.2922164e+08 found by strong branching after 44855 iterations and 4706 nodes (25.73 seconds)
Cbc0016I Integer solution of 2.2920186e+08 found by strong branching after 45451 iterations and 4779 nodes (26.11 seconds)
Cbc0010I After 4800 nodes, 21 on tree, 2.2920186e+08 best solution, best possible 2.1900976e+08 (26.21 seconds)
Cbc0010I After 4900 nodes, 26 on tree, 2.2920186e+08 best solution, best possible 2.1900976e+08 (26.83 seconds)
Cbc0010I After 5000 nodes, 28 on tree, 2.2920186e+08 best solution, best possible 2.1900976e+08 (27.47 seconds)
Cbc0010I After 5100 nodes, 13 on tree, 2.2920186e+08 best solution, best possible 2.1900976e+08 (27.99 seconds)
Cbc0010I After 5200 nodes, 11 on tree, 2.2920186e+08 best solution, best possible 2.1900976e+08 (28.66 seconds)
Cbc0010I After 5300 nodes, 18 on tree, 2.2920186e+08 best solution, best possible 2.1900976e+08 (29.35 seconds)
Cbc0038I Full problem 152 rows 5852 columns, reduced to 113 rows 2836 columns - 1 fixed gives 113, 2835 - still too large
Cbc0038I Full problem 152 rows 5852 columns, reduced to 113 rows 2835 columns - too large
Cbc0010I After 5400 nodes, 11 on tree, 2.2920186e+08 best solution, best possible 2.1900976e+08 (30.13 seconds)
Cbc0010I After 5500 nodes, 12 on tree, 2.2920186e+08 best solution, best possible 2.1900976e+08 (30.81 seconds)
Cbc0010I After 5600 nodes, 12 on tree, 2.2920186e+08 best solution, best possible 2.1900976e+08 (31.38 seconds)
Cbc0010I After 5700 nodes, 25 on tree, 2.2920186e+08 best solution, best possible 2.1900976e+08 (32.00 seconds)
Cbc0016I Integer solution of 2.2906331e+08 found by strong branching after 54970 iterations and 5719 nodes (32.12 seconds)
Cbc0016I Integer solution of 2.2898824e+08 found by strong branching after 55003 iterations and 5725 nodes (32.16 seconds)
Cbc0016I Integer solution of 2.2869161e+08 found by strong branching after 55338 iterations and 5774 nodes (32.51 seconds)
Cbc0016I Integer solution of 2.2850491e+08 found by strong branching after 55409 iterations and 5782 nodes (32.55 seconds)
Cbc0010I After 5800 nodes, 32 on tree, 2.2850491e+08 best solution, best possible 2.1900976e+08 (32.66 seconds)
Cbc0010I After 5900 nodes, 46 on tree, 2.2850491e+08 best solution, best possible 2.1900976e+08 (33.39 seconds)
Cbc0038I Full problem 152 rows 5852 columns, reduced to 98 rows 1678 columns
Cbc0010I After 6000 nodes, 57 on tree, 2.2850491e+08 best solution, best possible 2.1900976e+08 (34.01 seconds)
Cbc0010I After 6100 nodes, 71 on tree, 2.2850491e+08 best solution, best possible 2.1900976e+08 (34.57 seconds)
Cbc0010I After 6200 nodes, 77 on tree, 2.2850491e+08 best solution, best possible 2.1900976e+08 (35.16 seconds)
Cbc0010I After 6300 nodes, 61 on tree, 2.2850491e+08 best solution, best possible 2.1900976e+08 (35.70 seconds)
Cbc0010I After 6400 nodes, 43 on tree, 2.2850491e+08 best solution, best possible 2.1900976e+08 (36.17 seconds)
Cbc0010I After 6500 nodes, 29 on tree, 2.2850491e+08 best solution, best possible 2.1900976e+08 (36.72 seconds)
Cbc0010I After 6600 nodes, 16 on tree, 2.2850491e+08 best solution, best possible 2.1900976e+08 (37.25 seconds)
Cbc0010I After 6700 nodes, 19 on tree, 2.2850491e+08 best solution, best possible 2.1900976e+08 (38.02 seconds)
Cbc0010I After 6800 nodes, 12 on tree, 2.2850491e+08 best solution, best possible 2.1900976e+08 (38.60 seconds)
Cbc0010I After 6900 nodes, 9 on tree, 2.2850491e+08 best solution, best possible 2.1900976e+08 (39.31 seconds)
Cbc0010I After 7000 nodes, 26 on tree, 2.2850491e+08 best solution, best possible 2.1900976e+08 (40.04 seconds)
Cbc0010I After 7100 nodes, 41 on tree, 2.2850491e+08 best solution, best possible 2.1900976e+08 (40.81 seconds)
Cbc0010I After 7200 nodes, 31 on tree, 2.2850491e+08 best solution, best possible 2.1900976e+08 (41.48 seconds)
Cbc0038I Full problem 152 rows 5852 columns, reduced to 114 rows 2916 columns - 2 fixed gives 114, 2914 - still too large
Cbc0038I Full problem 152 rows 5852 columns, reduced to 114 rows 2914 columns - too large
Cbc0010I After 7300 nodes, 10 on tree, 2.2850491e+08 best solution, best possible 2.1900976e+08 (42.21 seconds)
Cbc0010I After 7400 nodes, 19 on tree, 2.2850491e+08 best solution, best possible 2.1900976e+08 (43.18 seconds)
Cbc0010I After 7500 nodes, 4 on tree, 2.2850491e+08 best solution, best possible 2.1900976e+08 (43.71 seconds)
Cbc0010I After 7600 nodes, 25 on tree, 2.2850491e+08 best solution, best possible 2.1900976e+08 (44.64 seconds)
Cbc0010I After 7700 nodes, 30 on tree, 2.2850491e+08 best solution, best possible 2.1900976e+08 (45.35 seconds)
Cbc0038I Full problem 152 rows 5852 columns, reduced to 115 rows 2992 columns - 1 fixed gives 115, 2991 - still too large
Cbc0038I Full problem 152 rows 5852 columns, reduced to 115 rows 2991 columns - too large
Cbc0010I After 7800 nodes, 8 on tree, 2.2850491e+08 best solution, best possible 2.1900976e+08 (45.97 seconds)
Cbc0010I After 7900 nodes, 9 on tree, 2.2850491e+08 best solution, best possible 2.1900976e+08 (47.01 seconds)
Cbc0010I After 8000 nodes, 22 on tree, 2.2850491e+08 best solution, best possible 2.211377e+08 (47.88 seconds)
Cbc0010I After 8100 nodes, 35 on tree, 2.2850491e+08 best solution, best possible 2.211377e+08 (48.42 seconds)
Cbc0010I After 8200 nodes, 24 on tree, 2.2850491e+08 best solution, best possible 2.211377e+08 (48.89 seconds)
Cbc0010I After 8300 nodes, 12 on tree, 2.2850491e+08 best solution, best possible 2.211377e+08 (49.50 seconds)
Cbc0010I After 8400 nodes, 15 on tree, 2.2850491e+08 best solution, best possible 2.211377e+08 (50.08 seconds)
Cbc0010I After 8500 nodes, 9 on tree, 2.2850491e+08 best solution, best possible 2.211377e+08 (50.57 seconds)
Cbc0010I After 8600 nodes, 9 on tree, 2.2850491e+08 best solution, best possible 2.211377e+08 (51.32 seconds)
Cbc0010I After 8700 nodes, 16 on tree, 2.2850491e+08 best solution, best possible 2.2300407e+08 (52.26 seconds)
Cbc0010I After 8800 nodes, 2 on tree, 2.2850491e+08 best solution, best possible 2.2300407e+08 (52.97 seconds)
Cbc0001I Search completed - best objective 228504914.6102499, took 84299 iterations and 8815 nodes (53.17 seconds)
Cbc0032I Strong branching done 32834 times (148104 iterations), fathomed 1296 nodes and fixed 5960 variables
Cbc0035I Maximum depth 46, 712 variables fixed on reduced cost
Cuts at root node changed objective from 1.15014e+08 to 2.1901e+08
Probing was tried 9 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
Gomory was tried 9 times and created 87 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Knapsack was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
FlowCover was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.027 seconds)
TwoMirCuts was tried 6050 times and created 145 cuts of which 0 were active after adding rounds of cuts (0.961 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                228504914.61024988
Enumerated nodes:               8815
Total iterations:               84299
Time (CPU seconds):             52.48
Time (Wallclock seconds):       53.18

Option for printingOptions changed from normal to all
Total time (CPU seconds):       52.48   (Wallclock seconds):       53.19

