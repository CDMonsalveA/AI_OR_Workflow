Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/tesis/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/17bd5a7656db4a71a555fcaf5a8208a7-pulp.mps -sec 3600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/17bd5a7656db4a71a555fcaf5a8208a7-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1300 COLUMNS
At line 7496 RHS
At line 8792 BOUNDS
At line 10053 ENDATA
Problem MODEL has 1295 rows, 1260 columns and 4900 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2.58516e+07 - 0.02 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 102 strengthened rows, 0 substitutions
Cgl0004I processed model has 1295 rows, 1260 columns (35 integer (35 of which binary)) and 4935 elements
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.393712
Cbc0038I Pass   1: suminf.    0.14867 (1) obj. 4.68845e+07 iterations 55
Cbc0038I Solution found of 6.73377e+07
Cbc0038I Relaxing continuous gives 6.59546e+07
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 1196 continuous
Cbc0038I Full problem 1295 rows 1260 columns, reduced to 25 rows 22 columns
Cbc0038I Mini branch and bound improved solution from 6.59546e+07 to 6.58986e+07 (0.09 seconds)
Cbc0038I Round again with cutoff of 6.39758e+07
Cbc0038I Pass   2: suminf.    0.14867 (1) obj. 4.68845e+07 iterations 0
Cbc0038I Pass   3: suminf.    0.08348 (1) obj. 6.39758e+07 iterations 150
Cbc0038I Pass   4: suminf.    0.21199 (1) obj. 6.39758e+07 iterations 300
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. 6.39758e+07 iterations 56
Cbc0038I Solution found of 6.39758e+07
Cbc0038I Relaxing continuous gives 5.90989e+07
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 1142 continuous
Cbc0038I Full problem 1295 rows 1260 columns, reduced to 93 rows 76 columns
Cbc0038I Mini branch and bound improved solution from 5.90989e+07 to 5.37256e+07 (0.13 seconds)
Cbc0038I Freeing continuous variables gives a solution of 5.36727e+07
Cbc0038I Round again with cutoff of 5.22723e+07
Cbc0038I Pass   6: suminf.    0.14867 (1) obj. 4.68845e+07 iterations 0
Cbc0038I Pass   7: suminf.    0.41140 (1) obj. 5.22723e+07 iterations 147
Cbc0038I Pass   8: suminf.    0.08216 (1) obj. 5.22723e+07 iterations 199
Cbc0038I Pass   9: suminf.    0.10138 (1) obj. 5.22723e+07 iterations 114
Cbc0038I Pass  10: suminf.    0.08216 (1) obj. 5.22723e+07 iterations 120
Cbc0038I Pass  11: suminf.    0.86861 (2) obj. 5.22723e+07 iterations 345
Cbc0038I Pass  12: suminf.    0.86861 (2) obj. 5.22723e+07 iterations 30
Cbc0038I Pass  13: suminf.    0.37113 (1) obj. 5.22723e+07 iterations 229
Cbc0038I Pass  14: suminf.    0.32502 (2) obj. 5.22723e+07 iterations 153
Cbc0038I Pass  15: suminf.    0.37113 (1) obj. 5.22723e+07 iterations 104
Cbc0038I Pass  16: suminf.    0.37495 (2) obj. 5.22723e+07 iterations 217
Cbc0038I Pass  17: suminf.    0.37495 (2) obj. 5.22723e+07 iterations 1
Cbc0038I Pass  18: suminf.    0.40413 (1) obj. 5.22723e+07 iterations 197
Cbc0038I Pass  19: suminf.    0.12683 (1) obj. 5.22723e+07 iterations 122
Cbc0038I Pass  20: suminf.    0.14957 (1) obj. 5.22723e+07 iterations 101
Cbc0038I Pass  21: suminf.    0.89672 (2) obj. 5.22723e+07 iterations 216
Cbc0038I Pass  22: suminf.    0.24826 (2) obj. 5.22723e+07 iterations 131
Cbc0038I Pass  23: suminf.    0.33497 (1) obj. 5.22723e+07 iterations 122
Cbc0038I Pass  24: suminf.    0.12435 (2) obj. 5.22723e+07 iterations 106
Cbc0038I Pass  25: suminf.    0.12435 (2) obj. 5.22723e+07 iterations 0
Cbc0038I Pass  26: suminf.    0.42684 (1) obj. 5.22723e+07 iterations 127
Cbc0038I Pass  27: suminf.    0.12683 (1) obj. 5.22723e+07 iterations 50
Cbc0038I Pass  28: suminf.    0.15810 (1) obj. 5.22723e+07 iterations 54
Cbc0038I Pass  29: suminf.    0.21566 (1) obj. 5.22723e+07 iterations 90
Cbc0038I Pass  30: suminf.    0.28075 (1) obj. 5.22723e+07 iterations 149
Cbc0038I Pass  31: suminf.    0.21566 (1) obj. 5.22723e+07 iterations 70
Cbc0038I Pass  32: suminf.    0.40868 (2) obj. 5.22723e+07 iterations 182
Cbc0038I Pass  33: suminf.    0.40375 (1) obj. 5.22723e+07 iterations 148
Cbc0038I Pass  34: suminf.    0.12683 (1) obj. 5.22723e+07 iterations 71
Cbc0038I Pass  35: suminf.    0.15439 (1) obj. 5.22723e+07 iterations 61
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 1061 continuous
Cbc0038I Full problem 1295 rows 1260 columns, reduced to 201 rows 187 columns
Cbc0038I Mini branch and bound improved solution from 5.36727e+07 to 4.76584e+07 (0.35 seconds)
Cbc0038I Freeing continuous variables gives a solution of 4.76569e+07
Cbc0038I Round again with cutoff of 4.7361e+07
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  35: suminf.    0.14867 (1) obj. 4.68845e+07 iterations 0
Cbc0038I Pass  36: suminf.    0.18987 (1) obj. 4.7361e+07 iterations 117
Cbc0038I Pass  37: suminf.    0.32647 (2) obj. 4.7361e+07 iterations 211
Cbc0038I Pass  38: suminf.    0.18053 (1) obj. 4.7361e+07 iterations 91
Cbc0038I Pass  39: suminf.    0.05983 (1) obj. 4.7361e+07 iterations 196
Cbc0038I Pass  40: suminf.    0.08785 (1) obj. 4.7361e+07 iterations 182
Cbc0038I Pass  41: suminf.    0.32509 (1) obj. 4.7361e+07 iterations 357
Cbc0038I Pass  42: suminf.    0.32509 (1) obj. 4.7361e+07 iterations 0
Cbc0038I Pass  43: suminf.    0.05983 (1) obj. 4.7361e+07 iterations 155
Cbc0038I Pass  44: suminf.    0.08268 (1) obj. 4.7361e+07 iterations 146
Cbc0038I Pass  45: suminf.    0.36708 (2) obj. 4.7361e+07 iterations 263
Cbc0038I Pass  46: suminf.    0.20622 (1) obj. 4.7361e+07 iterations 9
Cbc0038I Pass  47: suminf.    0.05983 (1) obj. 4.7361e+07 iterations 136
Cbc0038I Pass  48: suminf.    0.08575 (1) obj. 4.7361e+07 iterations 119
Cbc0038I Pass  49: suminf.    0.16792 (1) obj. 4.7361e+07 iterations 110
Cbc0038I Pass  50: suminf.    0.16792 (1) obj. 4.7361e+07 iterations 2
Cbc0038I Pass  51: suminf.    0.32248 (1) obj. 4.7361e+07 iterations 275
Cbc0038I Pass  52: suminf.    0.32248 (1) obj. 4.7361e+07 iterations 4
Cbc0038I Pass  53: suminf.    0.05983 (1) obj. 4.7361e+07 iterations 214
Cbc0038I Pass  54: suminf.    0.07593 (1) obj. 4.7361e+07 iterations 232
Cbc0038I Pass  55: suminf.    0.36430 (3) obj. 4.7361e+07 iterations 176
Cbc0038I Pass  56: suminf.    0.20401 (2) obj. 4.7361e+07 iterations 32
Cbc0038I Pass  57: suminf.    0.21769 (1) obj. 4.7361e+07 iterations 103
Cbc0038I Pass  58: suminf.    0.21769 (1) obj. 4.7361e+07 iterations 0
Cbc0038I Pass  59: suminf.    0.05983 (1) obj. 4.7361e+07 iterations 75
Cbc0038I Pass  60: suminf.    0.08864 (1) obj. 4.7361e+07 iterations 100
Cbc0038I Pass  61: suminf.    0.63014 (3) obj. 4.7361e+07 iterations 186
Cbc0038I Pass  62: suminf.    0.18116 (1) obj. 4.7361e+07 iterations 128
Cbc0038I Pass  63: suminf.    0.05983 (1) obj. 4.7361e+07 iterations 155
Cbc0038I Pass  64: suminf.    0.09135 (1) obj. 4.7361e+07 iterations 164
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 1096 continuous
Cbc0038I Full problem 1295 rows 1260 columns, reduced to 153 rows 136 columns
Cbc0038I Mini branch and bound improved solution from 4.76569e+07 to 4.7627e+07 (0.57 seconds)
Cbc0038I Freeing continuous variables gives a solution of 4.7627e+07
Cbc0038I Round again with cutoff of 4.71538e+07
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 5
Cbc0038I Pass  64: suminf.    0.14867 (1) obj. 4.68845e+07 iterations 0
Cbc0038I Pass  65: suminf.    0.17969 (1) obj. 4.71538e+07 iterations 119
Cbc0038I Pass  66: suminf.    0.22542 (1) obj. 4.71538e+07 iterations 249
Cbc0038I Pass  67: suminf.    0.22542 (1) obj. 4.71538e+07 iterations 10
Cbc0038I Pass  68: suminf.    0.05983 (1) obj. 4.71538e+07 iterations 153
Cbc0038I Pass  69: suminf.    0.07890 (1) obj. 4.71538e+07 iterations 132
Cbc0038I Pass  70: suminf.    0.29957 (1) obj. 4.71538e+07 iterations 294
Cbc0038I Pass  71: suminf.    0.29957 (1) obj. 4.71538e+07 iterations 4
Cbc0038I Pass  72: suminf.    0.05983 (1) obj. 4.71538e+07 iterations 177
Cbc0038I Pass  73: suminf.    0.08000 (1) obj. 4.71538e+07 iterations 144
Cbc0038I Pass  74: suminf.    0.20597 (1) obj. 4.71538e+07 iterations 251
Cbc0038I Pass  75: suminf.    0.20597 (1) obj. 4.71538e+07 iterations 16
Cbc0038I Pass  76: suminf.    0.05983 (1) obj. 4.71538e+07 iterations 152
Cbc0038I Pass  77: suminf.    0.08124 (1) obj. 4.71538e+07 iterations 143
Cbc0038I Pass  78: suminf.    0.22563 (2) obj. 4.71538e+07 iterations 199
Cbc0038I Pass  79: suminf.    0.22563 (2) obj. 4.71538e+07 iterations 18
Cbc0038I Pass  80: suminf.    0.17823 (1) obj. 4.71538e+07 iterations 327
Cbc0038I Pass  81: suminf.    0.14867 (1) obj. 4.71538e+07 iterations 67
Cbc0038I Pass  82: suminf.    0.28048 (1) obj. 4.71538e+07 iterations 350
Cbc0038I Pass  83: suminf.    0.28048 (1) obj. 4.71538e+07 iterations 4
Cbc0038I Pass  84: suminf.    0.05983 (1) obj. 4.71538e+07 iterations 299
Cbc0038I Pass  85: suminf.    0.07774 (1) obj. 4.71538e+07 iterations 278
Cbc0038I Pass  86: suminf.    1.11425 (3) obj. 4.71538e+07 iterations 218
Cbc0038I Pass  87: suminf.    0.22919 (1) obj. 4.71538e+07 iterations 200
Cbc0038I Pass  88: suminf.    0.05983 (1) obj. 4.71538e+07 iterations 245
Cbc0038I Pass  89: suminf.    0.07845 (1) obj. 4.71538e+07 iterations 266
Cbc0038I Pass  90: suminf.    0.89963 (4) obj. 4.71538e+07 iterations 283
Cbc0038I Pass  91: suminf.    0.22374 (1) obj. 4.71538e+07 iterations 33
Cbc0038I Pass  92: suminf.    0.05983 (1) obj. 4.71538e+07 iterations 210
Cbc0038I Pass  93: suminf.    0.07134 (1) obj. 4.71538e+07 iterations 218
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 1100 continuous
Cbc0038I Full problem 1295 rows 1260 columns, reduced to 146 rows 135 columns
Cbc0038I Mini branch and bound did not improve solution (0.83 seconds)
Cbc0038I After 0.83 seconds - Feasibility pump exiting with objective of 4.7627e+07 - took 0.75 seconds
Cbc0012I Integer solution of 47626963 found by feasibility pump after 0 iterations and 0 nodes (0.84 seconds)
Cbc0038I Full problem 1295 rows 1260 columns, reduced to 257 rows 426 columns
Cbc0013I At root node, 0 cuts changed objective from 46670506 to 46670506 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 47626963 best solution, best possible 46670506 (0.90 seconds)
Cbc0012I Integer solution of 47538208 found by DiveCoefficient after 17 iterations and 2 nodes (0.92 seconds)
Cbc0012I Integer solution of 47538208 found by heuristic after 99 iterations and 2 nodes (0.93 seconds)
Cbc0010I After 1000 nodes, 91 on tree, 47538208 best solution, best possible 46880747 (1.70 seconds)
Cbc0010I After 2000 nodes, 90 on tree, 47538208 best solution, best possible 46880747 (2.14 seconds)
Cbc0010I After 3000 nodes, 78 on tree, 47538208 best solution, best possible 46880747 (2.55 seconds)
Cbc0010I After 4000 nodes, 43 on tree, 47538208 best solution, best possible 46880747 (2.91 seconds)
Cbc0010I After 5000 nodes, 1 on tree, 47538208 best solution, best possible 46880747 (3.30 seconds)
Cbc0010I After 6000 nodes, 57 on tree, 47538208 best solution, best possible 46882548 (4.50 seconds)
Cbc0010I After 7000 nodes, 13 on tree, 47538208 best solution, best possible 46882548 (5.11 seconds)
Cbc0010I After 8000 nodes, 93 on tree, 47538208 best solution, best possible 46920673 (5.94 seconds)
Cbc0010I After 9000 nodes, 32 on tree, 47538208 best solution, best possible 46952113 (6.63 seconds)
Cbc0030I Thread 0 used 904 times,  waiting to start 0.43711829,  4270 locks, 0.025242567 locked, 0.020039797 waiting for locks
Cbc0030I Thread 1 used 900 times,  waiting to start 0.69986868,  4217 locks, 0.026377916 locked, 0.027448416 waiting for locks
Cbc0030I Thread 2 used 829 times,  waiting to start 0.71023297,  3916 locks, 0.023777008 locked, 0.0214746 waiting for locks
Cbc0030I Thread 3 used 949 times,  waiting to start 0.76398849,  4459 locks, 0.026368141 locked, 0.023907185 waiting for locks
Cbc0030I Thread 4 used 837 times,  waiting to start 0.80067062,  3963 locks, 0.022956133 locked, 0.015642166 waiting for locks
Cbc0030I Thread 5 used 851 times,  waiting to start 0.79011846,  3990 locks, 0.025187492 locked, 0.016900301 waiting for locks
Cbc0030I Thread 6 used 723 times,  waiting to start 0.84774566,  3391 locks, 0.020533562 locked, 0.022744894 waiting for locks
Cbc0030I Thread 7 used 712 times,  waiting to start 0.84244394,  3339 locks, 0.022271395 locked, 0.021357775 waiting for locks
Cbc0030I Thread 8 used 793 times,  waiting to start 0.76013374,  3734 locks, 0.022657633 locked, 0.013837576 waiting for locks
Cbc0030I Thread 9 used 831 times,  waiting to start 0.82631183,  3913 locks, 0.023817778 locked, 0.018143415 waiting for locks
Cbc0030I Thread 10 used 741 times,  waiting to start 0.82568526,  3486 locks, 0.019976854 locked, 0.019413471 waiting for locks
Cbc0030I Thread 11 used 848 times,  waiting to start 0.79864097,  3980 locks, 0.024579048 locked, 0.017956972 waiting for locks
Cbc0030I Main thread 5.3367963 waiting for threads,  19872 locks, 0.0093252659 locked, 0.048666477 waiting for locks
Cbc0001I Search completed - best objective 47538207.51866434, took 191161 iterations and 9918 nodes (7.36 seconds)
Cbc0032I Strong branching done 7952 times (134366 iterations), fathomed 2027 nodes and fixed 92 variables
Cbc0035I Maximum depth 29, 694 variables fixed on reduced cost
Cuts at root node changed objective from 4.66705e+07 to 4.66705e+07
Probing was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Gomory was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Knapsack was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Clique was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
FlowCover was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
TwoMirCuts was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                47538207.51866434
Enumerated nodes:               9918
Total iterations:               191161
Time (CPU seconds):             65.92
Time (Wallclock seconds):       7.37

Option for printingOptions changed from normal to all
Total time (CPU seconds):       65.93   (Wallclock seconds):       7.38

