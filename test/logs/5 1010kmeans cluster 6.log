Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/tesis/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/ba5ee8577bab4b748ec57924169f0ef5-pulp.mps -sec 3600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/ba5ee8577bab4b748ec57924169f0ef5-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 200 COLUMNS
At line 1072 RHS
At line 1268 BOUNDS
At line 1451 ENDATA
Problem MODEL has 195 rows, 182 columns and 676 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 9.56112e+06 - 0.00 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0004I processed model has 195 rows, 182 columns (13 integer (13 of which binary)) and 689 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.61961
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.50817e+07 iterations 41
Cbc0038I Solution found of 1.50817e+07
Cbc0038I Relaxing continuous gives 1.50742e+07
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 148 continuous
Cbc0038I Full problem 195 rows 182 columns, reduced to 25 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of 1.48617e+07
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.08338 (1) obj. 1.48617e+07 iterations 51
Cbc0038I Pass   3: suminf.    0.19020 (1) obj. 1.48617e+07 iterations 76
Cbc0038I Pass   4: suminf.    0.13219 (1) obj. 1.48617e+07 iterations 76
Cbc0038I Pass   5: suminf.    0.10428 (1) obj. 1.48617e+07 iterations 8
Cbc0038I Pass   6: suminf.    0.10428 (1) obj. 1.48617e+07 iterations 0
Cbc0038I Pass   7: suminf.    0.27883 (2) obj. 1.48617e+07 iterations 15
Cbc0038I Pass   8: suminf.    0.10428 (1) obj. 1.48617e+07 iterations 8
Cbc0038I Pass   9: suminf.    0.14931 (1) obj. 1.48617e+07 iterations 12
Cbc0038I Pass  10: suminf.    0.14931 (1) obj. 1.48617e+07 iterations 7
Cbc0038I Pass  11: suminf.    0.19020 (1) obj. 1.48617e+07 iterations 83
Cbc0038I Pass  12: suminf.    0.17541 (1) obj. 1.48617e+07 iterations 75
Cbc0038I Pass  13: suminf.    0.12886 (1) obj. 1.48617e+07 iterations 17
Cbc0038I Pass  14: suminf.    0.12886 (1) obj. 1.48617e+07 iterations 0
Cbc0038I Pass  15: suminf.    0.19020 (1) obj. 1.48617e+07 iterations 60
Cbc0038I Pass  16: suminf.    0.30336 (1) obj. 1.48617e+07 iterations 20
Cbc0038I Pass  17: suminf.    0.19020 (1) obj. 1.48617e+07 iterations 20
Cbc0038I Pass  18: suminf.    0.19020 (1) obj. 1.48617e+07 iterations 5
Cbc0038I Pass  19: suminf.    0.36757 (1) obj. 1.48617e+07 iterations 29
Cbc0038I Pass  20: suminf.    0.19020 (1) obj. 1.48617e+07 iterations 26
Cbc0038I Pass  21: suminf.    0.19020 (1) obj. 1.48617e+07 iterations 53
Cbc0038I Pass  22: suminf.    0.09567 (1) obj. 1.48617e+07 iterations 58
Cbc0038I Pass  23: suminf.    0.19020 (1) obj. 1.48617e+07 iterations 16
Cbc0038I Pass  24: suminf.    0.13539 (1) obj. 1.48617e+07 iterations 104
Cbc0038I Pass  25: suminf.    0.13539 (1) obj. 1.48617e+07 iterations 1
Cbc0038I Pass  26: suminf.    0.19020 (1) obj. 1.48617e+07 iterations 83
Cbc0038I Pass  27: suminf.    0.17934 (1) obj. 1.48617e+07 iterations 74
Cbc0038I Pass  28: suminf.    0.31004 (1) obj. 1.48617e+07 iterations 39
Cbc0038I Pass  29: suminf.    0.19020 (1) obj. 1.48617e+07 iterations 103
Cbc0038I Pass  30: suminf.    0.31004 (1) obj. 1.48617e+07 iterations 67
Cbc0038I Pass  31: suminf.    0.29177 (1) obj. 1.48617e+07 iterations 37
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 91 continuous
Cbc0038I Full problem 195 rows 182 columns, reduced to 101 rows 88 columns
Cbc0038I Mini branch and bound improved solution from 1.50742e+07 to 1.50503e+07 (0.21 seconds)
Cbc0038I Round again with cutoff of 1.44794e+07
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.23346 (1) obj. 1.44794e+07 iterations 0
Cbc0038I Pass  32: suminf.    0.19020 (1) obj. 1.44794e+07 iterations 76
Cbc0038I Pass  33: suminf.    0.27478 (1) obj. 1.44794e+07 iterations 72
Cbc0038I Pass  34: suminf.    0.31800 (1) obj. 1.44794e+07 iterations 43
Cbc0038I Pass  35: suminf.    0.19020 (1) obj. 1.44794e+07 iterations 26
Cbc0038I Pass  36: suminf.    0.31800 (1) obj. 1.44794e+07 iterations 43
Cbc0038I Pass  37: suminf.    0.45803 (1) obj. 1.44794e+07 iterations 3
Cbc0038I Pass  38: suminf.    0.19020 (1) obj. 1.44794e+07 iterations 55
Cbc0038I Pass  39: suminf.    0.45803 (1) obj. 1.44794e+07 iterations 68
Cbc0038I Pass  40: suminf.    0.43255 (1) obj. 1.44794e+07 iterations 12
Cbc0038I Pass  41: suminf.    0.43255 (1) obj. 1.44794e+07 iterations 2
Cbc0038I Pass  42: suminf.    0.19020 (1) obj. 1.44794e+07 iterations 106
Cbc0038I Pass  43: suminf.    0.43881 (1) obj. 1.44794e+07 iterations 94
Cbc0038I Pass  44: suminf.    0.19020 (1) obj. 1.44794e+07 iterations 61
Cbc0038I Pass  45: suminf.    0.49505 (1) obj. 1.44794e+07 iterations 62
Cbc0038I Pass  46: suminf.    0.19020 (1) obj. 1.44794e+07 iterations 37
Cbc0038I Pass  47: suminf.    0.19020 (1) obj. 1.44794e+07 iterations 0
Cbc0038I Pass  48: suminf.    0.49881 (1) obj. 1.44794e+07 iterations 102
Cbc0038I Pass  49: suminf.    0.19020 (1) obj. 1.44794e+07 iterations 89
Cbc0038I Pass  50: suminf.    0.45469 (1) obj. 1.44794e+07 iterations 57
Cbc0038I Pass  51: suminf.    0.81536 (4) obj. 1.44794e+07 iterations 28
Cbc0038I Pass  52: suminf.    0.42282 (1) obj. 1.44794e+07 iterations 2
Cbc0038I Pass  53: suminf.    0.24368 (1) obj. 1.44794e+07 iterations 69
Cbc0038I Pass  54: suminf.    0.24368 (1) obj. 1.44794e+07 iterations 0
Cbc0038I Pass  55: suminf.    0.19020 (1) obj. 1.44794e+07 iterations 60
Cbc0038I Pass  56: suminf.    0.30498 (1) obj. 1.44794e+07 iterations 55
Cbc0038I Pass  57: suminf.    0.59683 (2) obj. 1.44794e+07 iterations 11
Cbc0038I Pass  58: suminf.    0.29791 (1) obj. 1.44794e+07 iterations 1
Cbc0038I Pass  59: suminf.    0.19020 (1) obj. 1.44794e+07 iterations 55
Cbc0038I Pass  60: suminf.    0.31799 (1) obj. 1.44794e+07 iterations 48
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 98 continuous
Cbc0038I Full problem 195 rows 182 columns, reduced to 94 rows 81 columns
Cbc0038I Mini branch and bound did not improve solution (0.33 seconds)
Cbc0038I After 0.33 seconds - Feasibility pump exiting with objective of 1.50503e+07 - took 0.30 seconds
Cbc0012I Integer solution of 15050305 found by feasibility pump after 0 iterations and 0 nodes (0.33 seconds)
Cbc0038I Full problem 195 rows 182 columns, reduced to 84 rows 83 columns
Cbc0031I 8 added rows had average density of 146.125
Cbc0013I At root node, 8 cuts changed objective from 12949849 to 12991496 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 421 row cuts average 181.9 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 36 row cuts average 44.4 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 2 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 27 row cuts average 140.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 15050305 best solution, best possible 12991496 (1.12 seconds)
Cbc0030I Thread 0 used 47 times,  waiting to start 0.31837535,  267 locks, 0.0042953491 locked, 0.021134853 waiting for locks
Cbc0030I Thread 1 used 30 times,  waiting to start 0.29288816,  162 locks, 0.0014755726 locked, 0.039713144 waiting for locks
Cbc0030I Thread 2 used 40 times,  waiting to start 0.3802588,  209 locks, 0.016305208 locked, 0.020033836 waiting for locks
Cbc0030I Thread 3 used 32 times,  waiting to start 0.39596629,  165 locks, 0.0011470318 locked, 0.035025597 waiting for locks
Cbc0030I Thread 4 used 51 times,  waiting to start 0.40642381,  272 locks, 0.011765718 locked, 0.034239054 waiting for locks
Cbc0030I Thread 5 used 33 times,  waiting to start 0.3607235,  179 locks, 0.038288832 locked, 0.04106617 waiting for locks
Cbc0030I Thread 6 used 26 times,  waiting to start 0.38153553,  127 locks, 0.0010063648 locked, 0.031271935 waiting for locks
Cbc0030I Thread 7 used 30 times,  waiting to start 0.38012362,  157 locks, 0.019252062 locked, 0.036237478 waiting for locks
Cbc0030I Thread 8 used 21 times,  waiting to start 0.37687278,  109 locks, 0.016978264 locked, 0.0014972687 waiting for locks
Cbc0030I Thread 9 used 28 times,  waiting to start 0.37620163,  147 locks, 0.0098712444 locked, 0.011178255 waiting for locks
Cbc0030I Thread 10 used 18 times,  waiting to start 0.31037593,  98 locks, 0.00069284439 locked, 0.010286808 waiting for locks
Cbc0030I Thread 11 used 16 times,  waiting to start 0.35191178,  81 locks, 0.00051617622 locked, 0.017961264 waiting for locks
Cbc0030I Main thread 0.55756807 waiting for threads,  754 locks, 0.00067567825 locked, 0.047838449 waiting for locks
Cbc0001I Search completed - best objective 15050304.87698765, took 5280 iterations and 372 nodes (2.07 seconds)
Cbc0032I Strong branching done 904 times (7558 iterations), fathomed 157 nodes and fixed 0 variables
Cbc0035I Maximum depth 10, 68 variables fixed on reduced cost
Cuts at root node changed objective from 1.29498e+07 to 1.29915e+07
Probing was tried 1300 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.408 seconds)
Gomory was tried 1300 times and created 5473 cuts of which 0 were active after adding rounds of cuts (0.609 seconds)
Knapsack was tried 1300 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.396 seconds)
Clique was tried 1300 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.036 seconds)
MixedIntegerRounding2 was tried 1420 times and created 498 cuts of which 0 were active after adding rounds of cuts (0.457 seconds)
FlowCover was tried 1300 times and created 26 cuts of which 0 were active after adding rounds of cuts (0.657 seconds)
TwoMirCuts was tried 1300 times and created 351 cuts of which 0 were active after adding rounds of cuts (0.178 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                15050304.87698765
Enumerated nodes:               372
Total iterations:               5280
Time (CPU seconds):             2.86
Time (Wallclock seconds):       2.11

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.86   (Wallclock seconds):       2.11

