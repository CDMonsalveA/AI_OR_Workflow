Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/54b7de4bc1334c3cab8e4e5073d1726f-pulp.mps -sec 600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/54b7de4bc1334c3cab8e4e5073d1726f-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 391 COLUMNS
At line 187216 RHS
At line 187603 BOUNDS
At line 225046 ENDATA
Problem MODEL has 386 rows, 37442 columns and 74691 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.17273 - 0.02 seconds
Cgl0004I processed model has 386 rows, 37442 columns (37442 integer (37442 of which binary)) and 74691 elements
Cbc0038I Initial state - 193 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (193) obj. 1.17273 iterations 0
Cbc0038I Pass   2: suminf.    0.88083 (170) obj. 28.0057 iterations 23
Cbc0038I Pass   3: suminf.    0.82383 (159) obj. 40.8389 iterations 11
Cbc0038I Pass   4: suminf.    0.72021 (139) obj. 64.1719 iterations 20
Cbc0038I Pass   5: suminf.    0.66839 (129) obj. 75.8384 iterations 10
Cbc0038I Pass   6: suminf.    0.55959 (108) obj. 100.338 iterations 21
Cbc0038I Pass   7: suminf.    0.47150 (91) obj. 120.171 iterations 17
Cbc0038I Pass   8: suminf.    0.33679 (65) obj. 150.504 iterations 26
Cbc0038I Pass   9: suminf.    0.26943 (52) obj. 165.671 iterations 13
Cbc0038I Pass  10: suminf.    0.19171 (37) obj. 183.17 iterations 15
Cbc0038I Pass  11: suminf.    0.08808 (17) obj. 206.503 iterations 20
Cbc0038I Solution found of 226.336
Cbc0038I Before mini branch and bound, 37249 integers at bound fixed and 0 continuous
Cbc0038I Full problem 386 rows 37442 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.71 seconds)
Cbc0038I Round again with cutoff of 203.82
Cbc0038I Pass  12: suminf.    1.00000 (193) obj. 1.17273 iterations 0
Cbc0038I Pass  13: suminf.    0.86528 (167) obj. 31.5057 iterations 26
Cbc0038I Pass  14: suminf.    0.73057 (141) obj. 61.8386 iterations 26
Cbc0038I Pass  15: suminf.    0.65803 (127) obj. 78.1717 iterations 14
Cbc0038I Pass  16: suminf.    0.51813 (100) obj. 109.671 iterations 27
Cbc0038I Pass  17: suminf.    0.41451 (80) obj. 133.004 iterations 20
Cbc0038I Pass  18: suminf.    0.31088 (60) obj. 156.337 iterations 20
Cbc0038I Pass  19: suminf.    0.20725 (40) obj. 179.67 iterations 20
Cbc0038I Pass  20: suminf.    0.39690 (20) obj. 203.82 iterations 38
Cbc0038I Pass  21: suminf.    0.39690 (20) obj. 203.82 iterations 0
Cbc0038I Pass  22: suminf.    0.39690 (20) obj. 203.82 iterations 10
Cbc0038I Pass  23: suminf.    0.39690 (20) obj. 203.82 iterations 0
Cbc0038I Pass  24: suminf.    0.39690 (20) obj. 203.82 iterations 1
Cbc0038I Pass  25: suminf.    0.39690 (20) obj. 203.82 iterations 0
Cbc0038I Pass  26: suminf.    0.39690 (20) obj. 203.82 iterations 10
Cbc0038I Pass  27: suminf.    0.39690 (20) obj. 203.82 iterations 0
Cbc0038I Pass  28: suminf.    0.39690 (20) obj. 203.82 iterations 1
Cbc0038I Pass  29: suminf.    0.39690 (20) obj. 203.82 iterations 0
Cbc0038I Pass  30: suminf.    0.39690 (20) obj. 203.82 iterations 1
Cbc0038I Pass  31: suminf.    0.30109 (20) obj. 203.82 iterations 69
Cbc0038I Pass  32: suminf.    0.11322 (18) obj. 203.82 iterations 30
Cbc0038I Pass  33: suminf.    0.10286 (17) obj. 203.82 iterations 23
Cbc0038I Pass  34: suminf.    0.10286 (17) obj. 203.82 iterations 2
Cbc0038I Pass  35: suminf.    0.10286 (17) obj. 203.82 iterations 12
Cbc0038I Pass  36: suminf.    0.10286 (17) obj. 203.82 iterations 1
Cbc0038I Pass  37: suminf.    0.10286 (17) obj. 203.82 iterations 9
Cbc0038I Pass  38: suminf.    0.50521 (18) obj. 203.82 iterations 137
Cbc0038I Pass  39: suminf.    0.12526 (17) obj. 203.82 iterations 117
Cbc0038I Pass  40: suminf.    0.11490 (17) obj. 203.82 iterations 71
Cbc0038I Pass  41: suminf.    0.11490 (17) obj. 203.82 iterations 2
Cbc0038I Rounding solution of 169.715 is better than previous of 226.336

Cbc0038I Before mini branch and bound, 37070 integers at bound fixed and 0 continuous
Cbc0038I Full problem 386 rows 37442 columns, reduced to 79 rows 158 columns
Cbc0038I Mini branch and bound improved solution from 169.715 to 158.389 (1.11 seconds)
Cbc0038I Round again with cutoff of 126.946
Cbc0038I Pass  41: suminf.    1.00000 (193) obj. 1.17273 iterations 0
Cbc0038I Pass  42: suminf.    0.94819 (183) obj. 12.8392 iterations 10
Cbc0038I Pass  43: suminf.    0.84974 (164) obj. 35.0056 iterations 19
Cbc0038I Pass  44: suminf.    0.72021 (139) obj. 64.1719 iterations 25
Cbc0038I Pass  45: suminf.    0.60104 (116) obj. 91.0049 iterations 23
Cbc0038I Pass  46: suminf.    0.53886 (104) obj. 105.005 iterations 12
Cbc0038I Pass  47: suminf.    0.63251 (86) obj. 126.946 iterations 28
Cbc0038I Pass  48: suminf.    0.63251 (86) obj. 126.946 iterations 0
Cbc0038I Pass  49: suminf.    0.63251 (86) obj. 126.946 iterations 12
Cbc0038I Pass  50: suminf.    0.63251 (86) obj. 126.946 iterations 0
Cbc0038I Pass  51: suminf.    0.63251 (86) obj. 126.946 iterations 4
Cbc0038I Pass  52: suminf.    0.63251 (86) obj. 126.946 iterations 0
Cbc0038I Pass  53: suminf.    0.63251 (86) obj. 126.946 iterations 1
Cbc0038I Pass  54: suminf.    0.63251 (86) obj. 126.946 iterations 0
Cbc0038I Pass  55: suminf.    0.63251 (86) obj. 126.946 iterations 12
Cbc0038I Pass  56: suminf.    0.63251 (86) obj. 126.946 iterations 0
Cbc0038I Pass  57: suminf.    0.63251 (86) obj. 126.946 iterations 2
Cbc0038I Pass  58: suminf.    0.63251 (86) obj. 126.946 iterations 0
Cbc0038I Pass  59: suminf.    0.63251 (86) obj. 126.946 iterations 1
Cbc0038I Pass  60: suminf.    0.63251 (86) obj. 126.946 iterations 0
Cbc0038I Pass  61: suminf.    0.63251 (86) obj. 126.946 iterations 1
Cbc0038I Pass  62: suminf.    0.80578 (69) obj. 126.946 iterations 123
Cbc0038I Pass  63: suminf.    0.39896 (69) obj. 126.469 iterations 63
Cbc0038I Pass  64: suminf.    0.80578 (69) obj. 126.946 iterations 61
Cbc0038I Pass  65: suminf.    0.37824 (69) obj. 126.444 iterations 49
Cbc0038I Pass  66: suminf.    0.80578 (69) obj. 126.946 iterations 51
Cbc0038I Pass  67: suminf.    0.37824 (69) obj. 126.444 iterations 47
Cbc0038I Pass  68: suminf.    0.80578 (69) obj. 126.946 iterations 49
Cbc0038I Pass  69: suminf.    1.19466 (66) obj. 126.946 iterations 122
Cbc0038I Pass  70: suminf.    0.39378 (64) obj. 126.9 iterations 93
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37153 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (1.49 seconds)
Cbc0038I After 1.49 seconds - Feasibility pump exiting with objective of 158.389 - took 0.96 seconds
Cbc0012I Integer solution of 158.38902 found by feasibility pump after 0 iterations and 0 nodes (1.49 seconds)
Cbc0012I Integer solution of 16.902452 found by DiveCoefficient after 128208 iterations and 0 nodes (138.05 seconds)
Cbc0031I 2609 added rows had average density of 14.969337
Cbc0013I At root node, 2609 cuts changed objective from 1.1727273 to 16.902452 in 45 passes
Cbc0014I Cut generator 0 (Probing) - 3298 row cuts average 3.9 elements, 0 column cuts (1473 active)  in 6.257 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 482 row cuts average 302.9 elements, 0 column cuts (0 active)  in 2.952 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 11065 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.822 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.201 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 3471 row cuts average 15.2 elements, 0 column cuts (0 active)  in 0.722 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 289 row cuts average 167.5 elements, 0 column cuts (0 active)  in 0.662 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 662 row cuts average 71.8 elements, 0 column cuts (0 active)  in 14.993 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 0.76228213, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.70011401, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.63836694, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.57249308, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.50415587, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.435426, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.36764598, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.29889202, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.23066497, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.16261411, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.094500065, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.026185989, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 7.8678131e-06 locked, 1.1920929e-06 waiting for locks
Cbc0001I Search completed - best objective 16.90245212671654, took 128208 iterations and 0 nodes (139.07 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.17273 to 16.9025
Probing was tried 585 times and created 42874 cuts of which 19149 were active after adding rounds of cuts (81.344 seconds)
Gomory was tried 585 times and created 6266 cuts of which 0 were active after adding rounds of cuts (38.370 seconds)
Knapsack was tried 585 times and created 143845 cuts of which 0 were active after adding rounds of cuts (10.681 seconds)
Clique was tried 585 times and created 0 cuts of which 0 were active after adding rounds of cuts (2.608 seconds)
MixedIntegerRounding2 was tried 585 times and created 45123 cuts of which 0 were active after adding rounds of cuts (9.390 seconds)
FlowCover was tried 585 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.540 seconds)
TwoMirCuts was tried 585 times and created 3757 cuts of which 0 were active after adding rounds of cuts (8.607 seconds)
ZeroHalf was tried 585 times and created 8606 cuts of which 0 were active after adding rounds of cuts (194.910 seconds)

Result - Optimal solution found

Objective value:                16.90245213
Enumerated nodes:               0
Total iterations:               128208
Time (CPU seconds):             138.59
Time (Wallclock seconds):       139.13

Option for printingOptions changed from normal to all
Total time (CPU seconds):       138.70   (Wallclock seconds):       139.24

