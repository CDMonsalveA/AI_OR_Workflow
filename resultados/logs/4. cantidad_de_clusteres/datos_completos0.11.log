Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/44641030a9b64a76a3ac16f518a1062a-pulp.mps -sec 60 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/44641030a9b64a76a3ac16f518a1062a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 101 COLUMNS
At line 11766 RHS
At line 11863 BOUNDS
At line 14216 ENDATA
Problem MODEL has 96 rows, 2352 columns and 4656 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 60
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.11034 - 0.00 seconds
Cgl0004I processed model has 96 rows, 2352 columns (2352 integer (2352 of which binary)) and 4656 elements
Cbc0038I Initial state - 48 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (48) obj. 1.11034 iterations 0
Cbc0038I Pass   2: suminf.    0.62500 (30) obj. 20.6802 iterations 18
Cbc0038I Pass   3: suminf.    0.39583 (19) obj. 32.6395 iterations 11
Cbc0038I Pass   4: suminf.    0.16667 (8) obj. 44.5989 iterations 11
Cbc0038I Solution found of 53.2966
Cbc0038I Before mini branch and bound, 2304 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 2352 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of 48.0779
Cbc0038I Pass   5: suminf.    1.00000 (48) obj. 1.11034 iterations 0
Cbc0038I Pass   6: suminf.    0.52083 (25) obj. 26.1162 iterations 23
Cbc0038I Pass   7: suminf.    0.29167 (14) obj. 38.0756 iterations 11
Cbc0038I Pass   8: suminf.    0.29999 (5) obj. 48.0779 iterations 13
Cbc0038I Pass   9: suminf.    0.10417 (5) obj. 47.8605 iterations 1
Cbc0038I Pass  10: suminf.    0.29999 (5) obj. 48.0779 iterations 2
Cbc0038I Pass  11: suminf.    0.10417 (5) obj. 47.8605 iterations 1
Cbc0038I Pass  12: suminf.    0.87235 (7) obj. 48.0779 iterations 56
Cbc0038I Pass  13: suminf.    0.10417 (5) obj. 48.0384 iterations 38
Cbc0038I Pass  14: suminf.    0.13979 (5) obj. 48.0779 iterations 31
Cbc0038I Pass  15: suminf.    0.10417 (5) obj. 48.0384 iterations 25
Cbc0038I Pass  16: suminf.    0.38594 (5) obj. 48.0779 iterations 115
Cbc0038I Pass  17: suminf.    0.08333 (3) obj. 48.0307 iterations 62
Cbc0038I Pass  18: suminf.    0.12582 (3) obj. 48.0779 iterations 50
Cbc0038I Pass  19: suminf.    0.10417 (3) obj. 48.0539 iterations 52
Cbc0038I Pass  20: suminf.    0.37886 (5) obj. 48.0779 iterations 116
Cbc0038I Pass  21: suminf.    0.06250 (3) obj. 48.0319 iterations 82
Cbc0038I Pass  22: suminf.    0.10397 (3) obj. 48.0779 iterations 76
Cbc0038I Pass  23: suminf.    0.08333 (3) obj. 48.055 iterations 77
Cbc0038I Pass  24: suminf.    0.50533 (7) obj. 48.0779 iterations 144
Cbc0038I Pass  25: suminf.    0.10417 (5) obj. 48.0354 iterations 92
Cbc0038I Pass  26: suminf.    0.14243 (5) obj. 48.0779 iterations 86
Cbc0038I Pass  27: suminf.    0.10417 (5) obj. 48.0354 iterations 87
Cbc0038I Pass  28: suminf.    0.18750 (6) obj. 46.4321 iterations 140
Cbc0038I Pass  29: suminf.    0.18750 (6) obj. 46.4321 iterations 99
Cbc0038I Pass  30: suminf.    0.53860 (5) obj. 48.0779 iterations 82
Cbc0038I Pass  31: suminf.    0.53860 (5) obj. 48.0779 iterations 2
Cbc0038I Pass  32: suminf.    0.49693 (4) obj. 48.0779 iterations 17
Cbc0038I Pass  33: suminf.    0.49693 (4) obj. 48.0779 iterations 4
Cbc0038I Pass  34: suminf.    0.49693 (4) obj. 48.0779 iterations 16
Cbc0038I Rounding solution of 42.3865 is better than previous of 53.2966

Cbc0038I Before mini branch and bound, 2142 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 2352 columns, reduced to 89 rows 203 columns
Cbc0038I Mini branch and bound improved solution from 42.3865 to 27.0441 (0.10 seconds)
Cbc0038I Round again with cutoff of 21.8573
Cbc0038I Pass  34: suminf.    1.00000 (48) obj. 1.11034 iterations 0
Cbc0038I Pass  35: suminf.    0.68750 (33) obj. 17.4185 iterations 15
Cbc0038I Pass  36: suminf.    0.68516 (29) obj. 21.8573 iterations 24
Cbc0038I Pass  37: suminf.    0.60417 (29) obj. 21.7674 iterations 1
Cbc0038I Pass  38: suminf.    0.68516 (29) obj. 21.8573 iterations 1
Cbc0038I Pass  39: suminf.    0.67531 (23) obj. 21.8573 iterations 51
Cbc0038I Pass  40: suminf.    0.50000 (23) obj. 21.6627 iterations 16
Cbc0038I Pass  41: suminf.    0.67531 (23) obj. 21.8573 iterations 29
Cbc0038I Pass  42: suminf.    0.58333 (23) obj. 21.7552 iterations 16
Cbc0038I Pass  43: suminf.    0.67531 (23) obj. 21.8573 iterations 20
Cbc0038I Pass  44: suminf.    0.79781 (25) obj. 21.8573 iterations 61
Cbc0038I Pass  45: suminf.    0.79781 (25) obj. 21.8573 iterations 27
Cbc0038I Pass  46: suminf.    0.67281 (23) obj. 21.8573 iterations 23
Cbc0038I Pass  47: suminf.    0.67281 (23) obj. 21.8573 iterations 2
Cbc0038I Pass  48: suminf.    0.67281 (23) obj. 21.8573 iterations 11
Cbc0038I Pass  49: suminf.    0.67281 (23) obj. 21.8573 iterations 2
Cbc0038I Pass  50: suminf.    0.67281 (23) obj. 21.8573 iterations 10
Cbc0038I Pass  51: suminf.    0.67281 (23) obj. 21.8573 iterations 1
Cbc0038I Pass  52: suminf.    0.67281 (23) obj. 21.8573 iterations 11
Cbc0038I Pass  53: suminf.    0.67281 (23) obj. 21.8573 iterations 2
Cbc0038I Pass  54: suminf.    0.67281 (23) obj. 21.8573 iterations 11
Cbc0038I Pass  55: suminf.    0.67281 (23) obj. 21.8573 iterations 2
Cbc0038I Pass  56: suminf.    0.67281 (23) obj. 21.8573 iterations 11
Cbc0038I Pass  57: suminf.    0.95041 (22) obj. 21.8573 iterations 64
Cbc0038I Pass  58: suminf.    0.66667 (22) obj. 21.5423 iterations 47
Cbc0038I Pass  59: suminf.    0.95041 (22) obj. 21.8573 iterations 46
Cbc0038I Pass  60: suminf.    0.64583 (21) obj. 21.5191 iterations 44
Cbc0038I Pass  61: suminf.    0.95041 (21) obj. 21.8573 iterations 49
Cbc0038I Pass  62: suminf.    0.72752 (21) obj. 21.8573 iterations 67
Cbc0038I Pass  63: suminf.    0.64583 (21) obj. 21.7666 iterations 48
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2217 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of 27.0441 - took 0.10 seconds
Cbc0012I Integer solution of 27.04407 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0012I Integer solution of 11.829972 found by DiveCoefficient after 1431 iterations and 0 nodes (0.51 seconds)
Cbc0031I 302 added rows had average density of 17.592715
Cbc0013I At root node, 302 cuts changed objective from 1.1103448 to 11.829972 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 442 row cuts average 2.0 elements, 0 column cuts (218 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 161 row cuts average 149.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 423 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 347 row cuts average 52.7 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 198 row cuts average 142.3 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 0.089262009, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.081656933, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.073844194, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.066267014, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.058167934, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.050293922, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.042585135, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.034841061, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.026607037, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.018623114, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.010978937, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.0032169819, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 5.0067902e-06 locked, 0 waiting for locks
Cbc0001I Search completed - best objective 11.82997241977866, took 1431 iterations and 0 nodes (0.64 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.11034 to 11.83
Probing was tried 156 times and created 5746 cuts of which 2834 were active after adding rounds of cuts (1.127 seconds)
Gomory was tried 156 times and created 2093 cuts of which 0 were active after adding rounds of cuts (0.666 seconds)
Knapsack was tried 156 times and created 5499 cuts of which 0 were active after adding rounds of cuts (0.316 seconds)
Clique was tried 156 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
MixedIntegerRounding2 was tried 156 times and created 4511 cuts of which 0 were active after adding rounds of cuts (0.262 seconds)
FlowCover was tried 156 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
TwoMirCuts was tried 156 times and created 2574 cuts of which 0 were active after adding rounds of cuts (0.452 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                11.82997242
Enumerated nodes:               0
Total iterations:               1431
Time (CPU seconds):             0.61
Time (Wallclock seconds):       0.65

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.61   (Wallclock seconds):       0.66

