Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/tesis/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/f466cf43e4054154927aa82dd9686103-pulp.mps -sec 3600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/f466cf43e4054154927aa82dd9686103-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 85 COLUMNS
At line 422 RHS
At line 503 BOUNDS
At line 576 ENDATA
Problem MODEL has 80 rows, 72 columns and 256 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 8.01877e+06 - 0.00 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 79 rows, 72 columns (8 integer (8 of which binary)) and 255 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.27999
Cbc0038I Pass   1: suminf.    0.41861 (1) obj. 1.07397e+07 iterations 14
Cbc0038I Solution found of 1.35333e+07
Cbc0038I Relaxing continuous gives 1.33392e+07
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 31 continuous
Cbc0038I Full problem 79 rows 72 columns, reduced to 45 rows 38 columns
Cbc0038I Mini branch and bound improved solution from 1.33392e+07 to 9.7927e+06 (0.02 seconds)
Cbc0038I Round again with cutoff of 9.75459e+06
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.62018 (2) obj. 9.75459e+06 iterations 10
Cbc0038I Pass   3: suminf.    0.02508 (1) obj. 9.75459e+06 iterations 42
Cbc0038I Pass   4: suminf.    0.72001 (2) obj. 9.75459e+06 iterations 33
Cbc0038I Pass   5: suminf.    0.02508 (1) obj. 9.75459e+06 iterations 20
Cbc0038I Pass   6: suminf.    0.62018 (2) obj. 9.75459e+06 iterations 17
Cbc0038I Pass   7: suminf.    0.02508 (1) obj. 9.75459e+06 iterations 35
Cbc0038I Pass   8: suminf.    0.02508 (1) obj. 9.75459e+06 iterations 0
Cbc0038I Pass   9: suminf.    0.06543 (3) obj. 9.75459e+06 iterations 12
Cbc0038I Pass  10: suminf.    0.63348 (2) obj. 9.75459e+06 iterations 45
Cbc0038I Pass  11: suminf.    0.59275 (2) obj. 9.75459e+06 iterations 4
Cbc0038I Pass  12: suminf.    0.08957 (1) obj. 9.75459e+06 iterations 33
Cbc0038I Pass  13: suminf.    0.63348 (2) obj. 9.75459e+06 iterations 35
Cbc0038I Pass  14: suminf.    0.23469 (1) obj. 9.75459e+06 iterations 23
Cbc0038I Pass  15: suminf.    0.23469 (1) obj. 9.75459e+06 iterations 0
Cbc0038I Pass  16: suminf.    1.02627 (3) obj. 9.75459e+06 iterations 22
Cbc0038I Pass  17: suminf.    0.72001 (2) obj. 9.75459e+06 iterations 12
Cbc0038I Pass  18: suminf.    0.02508 (1) obj. 9.75459e+06 iterations 16
Cbc0038I Pass  19: suminf.    0.02508 (1) obj. 9.75459e+06 iterations 0
Cbc0038I Pass  20: suminf.    0.02508 (1) obj. 9.75459e+06 iterations 0
Cbc0038I Pass  21: suminf.    0.62018 (2) obj. 9.75459e+06 iterations 25
Cbc0038I Pass  22: suminf.    0.02508 (1) obj. 9.75459e+06 iterations 45
Cbc0038I Pass  23: suminf.    0.02508 (1) obj. 9.75459e+06 iterations 0
Cbc0038I Pass  24: suminf.    0.02508 (1) obj. 9.75459e+06 iterations 0
Cbc0038I Pass  25: suminf.    0.97359 (4) obj. 9.75459e+06 iterations 15
Cbc0038I Pass  26: suminf.    0.62018 (2) obj. 9.75459e+06 iterations 4
Cbc0038I Pass  27: suminf.    0.02508 (1) obj. 9.75459e+06 iterations 43
Cbc0038I Pass  28: suminf.    0.72001 (2) obj. 9.75459e+06 iterations 31
Cbc0038I Pass  29: suminf.    0.02508 (1) obj. 9.75459e+06 iterations 20
Cbc0038I Pass  30: suminf.    0.23469 (1) obj. 9.75459e+06 iterations 13
Cbc0038I Pass  31: suminf.    0.63348 (2) obj. 9.75459e+06 iterations 52
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 26 continuous
Cbc0038I Full problem 79 rows 72 columns, reduced to 52 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of 9.7927e+06 - took 0.04 seconds
Cbc0012I Integer solution of 9792696.4 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 79 rows 72 columns, reduced to 44 rows 36 columns
Cbc0031I 9 added rows had average density of 45.111111
Cbc0013I At root node, 9 cuts changed objective from 9411605.5 to 9629977.3 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 325 row cuts average 54.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 50 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 32 row cuts average 43.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 9792696.4 best solution, best possible 9630034 (0.51 seconds)
Cbc0030I Thread 0 used 2 times,  waiting to start 0.10255098, 0.012549 cpu time, 17 locks, 0.00034713745 locked, 6.1988831e-06 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.11249804, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.095699072, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.087249994, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.08947897, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.079789162, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.079850912, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.06316781, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.053423882, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.051457882, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.042597055, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.043674946, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0.024157047 waiting for threads,  8 locks, 2.9802322e-05 locked, 3.5762787e-06 waiting for locks
Cbc0001I Search completed - best objective 9792696.408399999, took 1356 iterations and 2 nodes (0.59 seconds)
Cbc0032I Strong branching done 132 times (2189 iterations), fathomed 1 nodes and fixed 26 variables
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Cuts at root node changed objective from 9.41161e+06 to 9.63003e+06
Probing was tried 1300 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.209 seconds)
Gomory was tried 1300 times and created 4225 cuts of which 0 were active after adding rounds of cuts (0.392 seconds)
Knapsack was tried 1300 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.335 seconds)
Clique was tried 1300 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
MixedIntegerRounding2 was tried 1308 times and created 651 cuts of which 0 were active after adding rounds of cuts (0.199 seconds)
FlowCover was tried 1300 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.271 seconds)
TwoMirCuts was tried 1308 times and created 434 cuts of which 0 were active after adding rounds of cuts (0.120 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                9792696.40840000
Enumerated nodes:               2
Total iterations:               1356
Time (CPU seconds):             0.42
Time (Wallclock seconds):       0.60

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.42   (Wallclock seconds):       0.60

