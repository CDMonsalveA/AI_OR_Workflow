Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/356d61c2458449f9b77fad195572cffb-pulp.mps -sec 60 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/356d61c2458449f9b77fad195572cffb-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 167 COLUMNS
At line 33216 RHS
At line 33379 BOUNDS
At line 40022 ENDATA
Problem MODEL has 162 rows, 6642 columns and 13203 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 60
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.18793 - 0.00 seconds
Cgl0004I processed model has 162 rows, 6642 columns (6642 integer (6642 of which binary)) and 13203 elements
Cbc0038I Initial state - 81 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (81) obj. 1.18793 iterations 0
Cbc0038I Pass   2: suminf.    0.69136 (56) obj. 30.5196 iterations 25
Cbc0038I Pass   3: suminf.    0.41975 (34) obj. 56.3314 iterations 22
Cbc0038I Pass   4: suminf.    0.24691 (20) obj. 72.7571 iterations 14
Cbc0038I Pass   5: suminf.    0.01235 (1) obj. 95.0491 iterations 19
Cbc0038I Solution found of 96.2224
Cbc0038I Before mini branch and bound, 6561 integers at bound fixed and 0 continuous
Cbc0038I Full problem 162 rows 6642 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I Round again with cutoff of 86.719
Cbc0038I Pass   6: suminf.    1.00000 (81) obj. 1.18793 iterations 0
Cbc0038I Pass   7: suminf.    0.69136 (56) obj. 30.5196 iterations 25
Cbc0038I Pass   8: suminf.    0.35802 (29) obj. 62.1977 iterations 27
Cbc0038I Pass   9: suminf.    0.18519 (15) obj. 78.6234 iterations 14
Cbc0038I Pass  10: suminf.    0.19754 (9) obj. 86.719 iterations 22
Cbc0038I Pass  11: suminf.    0.19754 (9) obj. 86.719 iterations 0
Cbc0038I Pass  12: suminf.    0.19754 (9) obj. 86.719 iterations 1
Cbc0038I Pass  13: suminf.    0.19754 (9) obj. 86.719 iterations 0
Cbc0038I Pass  14: suminf.    0.19754 (9) obj. 86.719 iterations 1
Cbc0038I Pass  15: suminf.    0.79271 (11) obj. 86.719 iterations 36
Cbc0038I Pass  16: suminf.    0.24182 (10) obj. 86.719 iterations 10
Cbc0038I Pass  17: suminf.    0.24182 (10) obj. 86.719 iterations 14
Cbc0038I Pass  18: suminf.    0.24182 (10) obj. 86.719 iterations 0
Cbc0038I Pass  19: suminf.    0.26651 (10) obj. 86.719 iterations 11
Cbc0038I Pass  20: suminf.    0.26651 (10) obj. 86.719 iterations 0
Cbc0038I Pass  21: suminf.    0.24182 (10) obj. 86.719 iterations 11
Cbc0038I Pass  22: suminf.    0.63165 (10) obj. 86.719 iterations 65
Cbc0038I Pass  23: suminf.    0.28189 (9) obj. 86.719 iterations 29
Cbc0038I Pass  24: suminf.    0.25719 (9) obj. 86.719 iterations 8
Cbc0038I Pass  25: suminf.    0.25719 (9) obj. 86.719 iterations 0
Cbc0038I Pass  26: suminf.    0.23250 (8) obj. 86.719 iterations 14
Cbc0038I Pass  27: suminf.    0.23250 (8) obj. 86.719 iterations 0
Cbc0038I Pass  28: suminf.    0.20781 (8) obj. 86.719 iterations 7
Cbc0038I Pass  29: suminf.    0.20781 (8) obj. 86.719 iterations 0
Cbc0038I Pass  30: suminf.    0.23250 (8) obj. 86.719 iterations 13
Cbc0038I Pass  31: suminf.    0.67268 (10) obj. 86.719 iterations 109
Cbc0038I Pass  32: suminf.    0.28455 (9) obj. 86.719 iterations 55
Cbc0038I Pass  33: suminf.    0.23517 (8) obj. 86.719 iterations 14
Cbc0038I Pass  34: suminf.    0.23517 (8) obj. 86.719 iterations 0
Cbc0038I Pass  35: suminf.    0.21048 (7) obj. 86.719 iterations 8
Cbc0038I Rounding solution of 74.855 is better than previous of 96.2224

Cbc0038I Before mini branch and bound, 6436 integers at bound fixed and 0 continuous
Cbc0038I Full problem 162 rows 6642 columns, reduced to 64 rows 130 columns
Cbc0038I Mini branch and bound improved solution from 74.855 to 62.2461 (0.25 seconds)
Cbc0038I Round again with cutoff of 50.0345
Cbc0038I Pass  35: suminf.    1.00000 (81) obj. 1.18793 iterations 0
Cbc0038I Pass  36: suminf.    0.76543 (62) obj. 23.48 iterations 19
Cbc0038I Pass  37: suminf.    0.84395 (40) obj. 50.0345 iterations 32
Cbc0038I Pass  38: suminf.    0.84395 (40) obj. 50.0345 iterations 0
Cbc0038I Pass  39: suminf.    0.84395 (40) obj. 50.0345 iterations 14
Cbc0038I Pass  40: suminf.    0.84395 (40) obj. 50.0345 iterations 0
Cbc0038I Pass  41: suminf.    0.84395 (40) obj. 50.0345 iterations 2
Cbc0038I Pass  42: suminf.    0.84395 (40) obj. 50.0345 iterations 0
Cbc0038I Pass  43: suminf.    0.84395 (40) obj. 50.0345 iterations 1
Cbc0038I Pass  44: suminf.    0.84395 (40) obj. 50.0345 iterations 0
Cbc0038I Pass  45: suminf.    0.84395 (40) obj. 50.0345 iterations 8
Cbc0038I Pass  46: suminf.    0.84395 (40) obj. 50.0345 iterations 0
Cbc0038I Pass  47: suminf.    0.84395 (40) obj. 50.0345 iterations 1
Cbc0038I Pass  48: suminf.    0.84395 (40) obj. 50.0345 iterations 0
Cbc0038I Pass  49: suminf.    0.84395 (40) obj. 50.0345 iterations 1
Cbc0038I Pass  50: suminf.    0.66671 (40) obj. 50.0345 iterations 21
Cbc0038I Pass  51: suminf.    0.66671 (40) obj. 50.0345 iterations 7
Cbc0038I Pass  52: suminf.    0.66671 (40) obj. 50.0345 iterations 4
Cbc0038I Pass  53: suminf.    0.66671 (40) obj. 50.0345 iterations 0
Cbc0038I Pass  54: suminf.    0.66671 (40) obj. 50.0345 iterations 3
Cbc0038I Pass  55: suminf.    0.66671 (40) obj. 50.0345 iterations 0
Cbc0038I Pass  56: suminf.    0.66671 (40) obj. 50.0345 iterations 3
Cbc0038I Pass  57: suminf.    0.61775 (36) obj. 50.0345 iterations 12
Cbc0038I Pass  58: suminf.    0.61775 (36) obj. 50.0345 iterations 9
Cbc0038I Pass  59: suminf.    0.59306 (36) obj. 50.0345 iterations 5
Cbc0038I Pass  60: suminf.    0.59306 (36) obj. 50.0345 iterations 0
Cbc0038I Pass  61: suminf.    0.59306 (36) obj. 50.0345 iterations 5
Cbc0038I Pass  62: suminf.    0.59306 (36) obj. 50.0345 iterations 0
Cbc0038I Pass  63: suminf.    0.59306 (36) obj. 50.0345 iterations 1
Cbc0038I Pass  64: suminf.    0.59306 (36) obj. 50.0345 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6544 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.31 seconds)
Cbc0038I After 0.31 seconds - Feasibility pump exiting with objective of 62.2461 - took 0.17 seconds
Cbc0012I Integer solution of 62.24613 found by feasibility pump after 0 iterations and 0 nodes (0.31 seconds)
Cbc0012I Integer solution of 16.42282 found by DiveCoefficient after 5262 iterations and 0 nodes (2.30 seconds)
Cbc0031I 603 added rows had average density of 18.981758
Cbc0013I At root node, 603 cuts changed objective from 1.187931 to 16.422819 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 689 row cuts average 2.8 elements, 0 column cuts (531 active)  in 0.321 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 194 row cuts average 191.3 elements, 0 column cuts (0 active)  in 0.248 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 690 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 704 row cuts average 27.9 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 285 row cuts average 144.7 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 189 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.275 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 0.17908001, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.16347384, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.14802122, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.13251781, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.1163249, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.10086608, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.085539103, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.070128918, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.054357052, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.03908205, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.023123026, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.0064909458, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 8.1062317e-06 locked, 9.5367432e-07 waiting for locks
Cbc0001I Search completed - best objective 16.42282032801147, took 5262 iterations and 0 nodes (2.55 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.18793 to 16.4228
Probing was tried 208 times and created 8957 cuts of which 6903 were active after adding rounds of cuts (4.174 seconds)
Gomory was tried 208 times and created 2522 cuts of which 0 were active after adding rounds of cuts (3.219 seconds)
Knapsack was tried 208 times and created 8970 cuts of which 0 were active after adding rounds of cuts (0.296 seconds)
Clique was tried 208 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.076 seconds)
MixedIntegerRounding2 was tried 208 times and created 9152 cuts of which 0 were active after adding rounds of cuts (0.615 seconds)
FlowCover was tried 208 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)
TwoMirCuts was tried 208 times and created 3705 cuts of which 0 were active after adding rounds of cuts (0.998 seconds)
ZeroHalf was tried 208 times and created 2457 cuts of which 0 were active after adding rounds of cuts (3.573 seconds)

Result - Optimal solution found

Objective value:                16.42282033
Enumerated nodes:               0
Total iterations:               5262
Time (CPU seconds):             2.48
Time (Wallclock seconds):       2.56

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.50   (Wallclock seconds):       2.58

