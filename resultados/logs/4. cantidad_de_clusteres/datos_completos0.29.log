Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/686154584c7745238a0deb7d21ae6620-pulp.mps -sec 60 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/686154584c7745238a0deb7d21ae6620-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 257 COLUMNS
At line 80016 RHS
At line 80269 BOUNDS
At line 96272 ENDATA
Problem MODEL has 252 rows, 16002 columns and 31878 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 60
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.29138 - 0.01 seconds
Cgl0004I processed model has 252 rows, 16002 columns (16002 integer (16002 of which binary)) and 31878 elements
Cbc0038I Initial state - 126 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (126) obj. 1.29138 iterations 0
Cbc0038I Pass   2: suminf.    0.78571 (99) obj. 35.8819 iterations 27
Cbc0038I Pass   3: suminf.    0.65079 (82) obj. 57.6611 iterations 17
Cbc0038I Pass   4: suminf.    0.45238 (57) obj. 89.6894 iterations 25
Cbc0038I Pass   5: suminf.    0.27778 (35) obj. 117.874 iterations 22
Cbc0038I Pass   6: suminf.    0.07143 (9) obj. 151.184 iterations 26
Cbc0038I Solution found of 162.714
Cbc0038I Before mini branch and bound, 15876 integers at bound fixed and 0 continuous
Cbc0038I Full problem 252 rows 16002 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.24 seconds)
Cbc0038I Round again with cutoff of 146.572
Cbc0038I Pass   7: suminf.    1.00000 (126) obj. 1.29138 iterations 0
Cbc0038I Pass   8: suminf.    0.80159 (101) obj. 33.3196 iterations 25
Cbc0038I Pass   9: suminf.    0.66667 (84) obj. 55.0989 iterations 17
Cbc0038I Pass  10: suminf.    0.54762 (69) obj. 74.3158 iterations 15
Cbc0038I Pass  11: suminf.    0.37302 (47) obj. 102.501 iterations 22
Cbc0038I Pass  12: suminf.    0.28571 (36) obj. 116.593 iterations 11
Cbc0038I Pass  13: suminf.    0.15079 (19) obj. 138.372 iterations 17
Cbc0038I Pass  14: suminf.    0.49999 (13) obj. 146.572 iterations 20
Cbc0038I Pass  15: suminf.    0.10317 (13) obj. 146.059 iterations 1
Cbc0038I Pass  16: suminf.    0.49999 (13) obj. 146.572 iterations 12
Cbc0038I Pass  17: suminf.    0.10317 (13) obj. 146.059 iterations 1
Cbc0038I Pass  18: suminf.    0.64944 (15) obj. 146.572 iterations 17
Cbc0038I Pass  19: suminf.    0.15435 (14) obj. 146.572 iterations 8
Cbc0038I Pass  20: suminf.    0.15435 (14) obj. 146.572 iterations 2
Cbc0038I Pass  21: suminf.    0.15435 (14) obj. 146.572 iterations 0
Cbc0038I Pass  22: suminf.    0.15435 (14) obj. 146.572 iterations 1
Cbc0038I Pass  23: suminf.    0.15435 (14) obj. 146.572 iterations 0
Cbc0038I Pass  24: suminf.    0.15435 (14) obj. 146.572 iterations 1
Cbc0038I Pass  25: suminf.    0.39344 (13) obj. 146.572 iterations 26
Cbc0038I Pass  26: suminf.    0.10317 (13) obj. 146.197 iterations 39
Cbc0038I Pass  27: suminf.    0.39344 (13) obj. 146.572 iterations 33
Cbc0038I Pass  28: suminf.    0.10317 (13) obj. 146.197 iterations 33
Cbc0038I Pass  29: suminf.    0.39344 (13) obj. 146.572 iterations 32
Cbc0038I Pass  30: suminf.    0.23826 (15) obj. 146.572 iterations 43
Cbc0038I Pass  31: suminf.    0.12417 (14) obj. 146.572 iterations 26
Cbc0038I Pass  32: suminf.    0.14004 (14) obj. 146.572 iterations 8
Cbc0038I Pass  33: suminf.    0.14004 (14) obj. 146.572 iterations 0
Cbc0038I Pass  34: suminf.    0.09806 (12) obj. 146.572 iterations 11
Cbc0038I Pass  35: suminf.    0.09524 (12) obj. 146.568 iterations 52
Cbc0038I Pass  36: suminf.    0.09806 (12) obj. 146.572 iterations 57
Cbc0038I Rounding solution of 138.697 is better than previous of 162.714

Cbc0038I Before mini branch and bound, 15822 integers at bound fixed and 0 continuous
Cbc0038I Full problem 252 rows 16002 columns, reduced to 16 rows 32 columns
Cbc0038I Mini branch and bound improved solution from 138.697 to 136.126 (0.44 seconds)
Cbc0038I Round again with cutoff of 109.159
Cbc0038I Pass  36: suminf.    1.00000 (126) obj. 1.29138 iterations 0
Cbc0038I Pass  37: suminf.    0.88889 (112) obj. 19.2272 iterations 14
Cbc0038I Pass  38: suminf.    0.66667 (84) obj. 55.0989 iterations 28
Cbc0038I Pass  39: suminf.    0.48413 (61) obj. 84.5648 iterations 23
Cbc0038I Pass  40: suminf.    0.37302 (47) obj. 102.501 iterations 14
Cbc0038I Pass  41: suminf.    0.52900 (42) obj. 109.159 iterations 35
Cbc0038I Pass  42: suminf.    0.33333 (42) obj. 108.906 iterations 1
Cbc0038I Pass  43: suminf.    0.52900 (42) obj. 109.159 iterations 1
Cbc0038I Pass  44: suminf.    0.32701 (41) obj. 109.159 iterations 21
Cbc0038I Pass  45: suminf.    0.32701 (41) obj. 109.159 iterations 5
Cbc0038I Pass  46: suminf.    0.32701 (41) obj. 109.159 iterations 5
Cbc0038I Pass  47: suminf.    0.32701 (41) obj. 109.159 iterations 0
Cbc0038I Pass  48: suminf.    0.32701 (41) obj. 109.159 iterations 3
Cbc0038I Pass  49: suminf.    0.32701 (41) obj. 109.159 iterations 0
Cbc0038I Pass  50: suminf.    0.32701 (41) obj. 109.159 iterations 3
Cbc0038I Pass  51: suminf.    0.66832 (41) obj. 109.159 iterations 27
Cbc0038I Pass  52: suminf.    0.34127 (41) obj. 108.737 iterations 17
Cbc0038I Pass  53: suminf.    0.66832 (41) obj. 109.159 iterations 21
Cbc0038I Pass  54: suminf.    0.34127 (41) obj. 108.737 iterations 16
Cbc0038I Pass  55: suminf.    0.66832 (41) obj. 109.159 iterations 17
Cbc0038I Pass  56: suminf.    0.79280 (40) obj. 109.159 iterations 18
Cbc0038I Pass  57: suminf.    0.33333 (40) obj. 108.566 iterations 19
Cbc0038I Pass  58: suminf.    0.79280 (40) obj. 109.159 iterations 18
Cbc0038I Pass  59: suminf.    0.71873 (40) obj. 109.159 iterations 37
Cbc0038I Pass  60: suminf.    0.35714 (40) obj. 108.692 iterations 27
Cbc0038I Pass  61: suminf.    0.71873 (40) obj. 109.159 iterations 28
Cbc0038I Pass  62: suminf.    0.34127 (39) obj. 108.672 iterations 29
Cbc0038I Pass  63: suminf.    0.71873 (39) obj. 109.159 iterations 29
Cbc0038I Pass  64: suminf.    0.34127 (39) obj. 108.672 iterations 32
Cbc0038I Pass  65: suminf.    0.71873 (39) obj. 109.159 iterations 28
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15837 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.62 seconds)
Cbc0038I After 0.62 seconds - Feasibility pump exiting with objective of 136.126 - took 0.44 seconds
Cbc0012I Integer solution of 136.12592 found by feasibility pump after 0 iterations and 0 nodes (0.62 seconds)
Cbc0012I Integer solution of 23.143123 found by DiveCoefficient after 15106 iterations and 0 nodes (8.19 seconds)
Cbc0031I 1148 added rows had average density of 16.755226
Cbc0013I At root node, 1148 cuts changed objective from 1.2913793 to 23.143123 in 26 passes
Cbc0014I Cut generator 0 (Probing) - 1026 row cuts average 3.0 elements, 0 column cuts (428 active)  in 1.282 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 280 row cuts average 200.4 elements, 0 column cuts (0 active)  in 0.682 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2213 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1371 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 185 row cuts average 129.7 elements, 0 column cuts (0 active)  in 0.222 seconds - new frequency is -100
Cbc0030I Thread 0 used 0 times,  waiting to start 0.25136089, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.2301228, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.20854092, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.18707919, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.16465306, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.14338207, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.12216902, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.10068703, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.079367161, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.057905912, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.035889864, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.010909081, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 1.001358e-05 locked, 9.5367432e-07 waiting for locks
Cbc0001I Search completed - best objective 23.14312320064389, took 15106 iterations and 0 nodes (8.52 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.29138 to 23.1431
Probing was tried 338 times and created 13338 cuts of which 5564 were active after adding rounds of cuts (16.660 seconds)
Gomory was tried 338 times and created 3640 cuts of which 0 were active after adding rounds of cuts (8.869 seconds)
Knapsack was tried 338 times and created 28769 cuts of which 0 were active after adding rounds of cuts (1.390 seconds)
Clique was tried 338 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.311 seconds)
MixedIntegerRounding2 was tried 338 times and created 17823 cuts of which 0 were active after adding rounds of cuts (1.529 seconds)
FlowCover was tried 338 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.113 seconds)
TwoMirCuts was tried 338 times and created 2405 cuts of which 0 were active after adding rounds of cuts (2.884 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)

Result - Optimal solution found

Objective value:                23.14312320
Enumerated nodes:               0
Total iterations:               15106
Time (CPU seconds):             8.41
Time (Wallclock seconds):       8.54

Option for printingOptions changed from normal to all
Total time (CPU seconds):       8.45   (Wallclock seconds):       8.59

