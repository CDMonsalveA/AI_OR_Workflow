Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/6d1a44bba72c4f5db614e3f05baf95cc-pulp.mps -sec 60 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/6d1a44bba72c4f5db614e3f05baf95cc-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 219 COLUMNS
At line 57786 RHS
At line 58001 BOUNDS
At line 69558 ENDATA
Problem MODEL has 214 rows, 11556 columns and 23005 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 60
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.24828 - 0.00 seconds
Cgl0004I processed model has 214 rows, 11556 columns (11556 integer (11556 of which binary)) and 23005 elements
Cbc0038I Initial state - 107 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (107) obj. 1.24828 iterations 0
Cbc0038I Pass   2: suminf.    0.90654 (97) obj. 13.6144 iterations 10
Cbc0038I Pass   3: suminf.    0.69159 (74) obj. 42.0564 iterations 23
Cbc0038I Pass   4: suminf.    0.42056 (45) obj. 77.9181 iterations 29
Cbc0038I Pass   5: suminf.    0.14953 (16) obj. 113.78 iterations 29
Cbc0038I Solution found of 133.566
Cbc0038I Before mini branch and bound, 11449 integers at bound fixed and 0 continuous
Cbc0038I Full problem 214 rows 11556 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of 120.334
Cbc0038I Pass   6: suminf.    1.00000 (107) obj. 1.24828 iterations 0
Cbc0038I Pass   7: suminf.    0.85047 (91) obj. 21.034 iterations 16
Cbc0038I Pass   8: suminf.    0.60748 (65) obj. 53.1859 iterations 26
Cbc0038I Pass   9: suminf.    0.33645 (36) obj. 89.0476 iterations 29
Cbc0038I Pass  10: suminf.    0.39999 (11) obj. 120.334 iterations 29
Cbc0038I Pass  11: suminf.    0.10280 (11) obj. 119.963 iterations 1
Cbc0038I Pass  12: suminf.    0.39999 (11) obj. 120.334 iterations 14
Cbc0038I Pass  13: suminf.    0.10280 (11) obj. 119.963 iterations 1
Cbc0038I Pass  14: suminf.    0.90382 (14) obj. 120.334 iterations 21
Cbc0038I Pass  15: suminf.    0.23583 (13) obj. 120.334 iterations 12
Cbc0038I Pass  16: suminf.    0.19844 (12) obj. 120.334 iterations 8
Cbc0038I Pass  17: suminf.    0.19844 (12) obj. 120.334 iterations 1
Cbc0038I Pass  18: suminf.    0.19844 (12) obj. 120.334 iterations 4
Cbc0038I Pass  19: suminf.    0.19844 (12) obj. 120.334 iterations 1
Cbc0038I Pass  20: suminf.    0.19844 (12) obj. 120.334 iterations 4
Cbc0038I Pass  21: suminf.    0.13839 (11) obj. 120.334 iterations 22
Cbc0038I Pass  22: suminf.    0.10280 (11) obj. 120.289 iterations 24
Cbc0038I Pass  23: suminf.    0.13839 (11) obj. 120.334 iterations 34
Cbc0038I Pass  24: suminf.    0.10280 (11) obj. 120.289 iterations 27
Cbc0038I Pass  25: suminf.    0.60081 (13) obj. 120.334 iterations 25
Cbc0038I Pass  26: suminf.    0.10280 (11) obj. 120.261 iterations 32
Cbc0038I Pass  27: suminf.    0.16126 (11) obj. 120.334 iterations 35
Cbc0038I Pass  28: suminf.    0.14743 (11) obj. 120.334 iterations 26
Cbc0038I Pass  29: suminf.    0.14743 (11) obj. 120.334 iterations 46
Cbc0038I Pass  30: suminf.    0.14743 (11) obj. 120.334 iterations 9
Cbc0038I Pass  31: suminf.    0.14743 (11) obj. 120.334 iterations 0
Cbc0038I Pass  32: suminf.    0.14743 (11) obj. 120.334 iterations 7
Cbc0038I Pass  33: suminf.    0.09409 (12) obj. 120.334 iterations 26
Cbc0038I Pass  34: suminf.    0.08484 (10) obj. 120.334 iterations 29
Cbc0038I Pass  35: suminf.    0.08484 (10) obj. 120.334 iterations 0
Cbc0038I Rounding solution of 117.733 is better than previous of 133.566

Cbc0038I Before mini branch and bound, 11395 integers at bound fixed and 0 continuous
Cbc0038I Full problem 214 rows 11556 columns, reduced to 20 rows 40 columns
Cbc0038I Mini branch and bound improved solution from 117.733 to 112.614 (0.29 seconds)
Cbc0038I Round again with cutoff of 90.3405
Cbc0038I Pass  35: suminf.    1.00000 (107) obj. 1.24828 iterations 0
Cbc0038I Pass  36: suminf.    0.86916 (93) obj. 18.5608 iterations 14
Cbc0038I Pass  37: suminf.    0.65421 (70) obj. 47.0028 iterations 23
Cbc0038I Pass  38: suminf.    0.44860 (48) obj. 74.2083 iterations 22
Cbc0038I Pass  39: suminf.    0.37220 (35) obj. 90.3405 iterations 17
Cbc0038I Pass  40: suminf.    0.32710 (35) obj. 90.2842 iterations 1
Cbc0038I Pass  41: suminf.    0.37220 (35) obj. 90.3405 iterations 38
Cbc0038I Pass  42: suminf.    0.32710 (35) obj. 90.2842 iterations 1
Cbc0038I Pass  43: suminf.    0.37220 (35) obj. 90.3405 iterations 1
Cbc0038I Pass  44: suminf.    0.65234 (35) obj. 90.3405 iterations 13
Cbc0038I Pass  45: suminf.    0.33645 (35) obj. 89.9462 iterations 5
Cbc0038I Pass  46: suminf.    0.65234 (35) obj. 90.3405 iterations 5
Cbc0038I Pass  47: suminf.    0.52426 (35) obj. 90.3405 iterations 21
Cbc0038I Pass  48: suminf.    0.34579 (35) obj. 90.1177 iterations 10
Cbc0038I Pass  49: suminf.    0.52426 (35) obj. 90.3405 iterations 10
Cbc0038I Pass  50: suminf.    0.72083 (35) obj. 90.3405 iterations 21
Cbc0038I Pass  51: suminf.    0.35514 (35) obj. 89.884 iterations 17
Cbc0038I Pass  52: suminf.    0.72083 (35) obj. 90.3405 iterations 21
Cbc0038I Pass  53: suminf.    0.35514 (35) obj. 89.884 iterations 17
Cbc0038I Pass  54: suminf.    0.72083 (35) obj. 90.3405 iterations 16
Cbc0038I Pass  55: suminf.    0.89349 (32) obj. 90.3405 iterations 35
Cbc0038I Pass  56: suminf.    0.39154 (31) obj. 90.3405 iterations 18
Cbc0038I Pass  57: suminf.    0.35416 (30) obj. 90.3405 iterations 15
Cbc0038I Pass  58: suminf.    0.35416 (30) obj. 90.3405 iterations 2
Cbc0038I Pass  59: suminf.    0.37285 (30) obj. 90.3405 iterations 13
Cbc0038I Pass  60: suminf.    0.37285 (30) obj. 90.3405 iterations 4
Cbc0038I Pass  61: suminf.    0.39154 (30) obj. 90.3405 iterations 11
Cbc0038I Pass  62: suminf.    0.39154 (30) obj. 90.3405 iterations 3
Cbc0038I Pass  63: suminf.    0.37285 (30) obj. 90.3405 iterations 14
Cbc0038I Pass  64: suminf.    0.78536 (31) obj. 90.3405 iterations 47
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11400 integers at bound fixed and 0 continuous
Cbc0038I Full problem 214 rows 11556 columns, reduced to 1 rows 3 columns
Cbc0038I Mini branch and bound improved solution from 112.614 to 112.591 (0.43 seconds)
Cbc0038I Round again with cutoff of 63.6128
Cbc0038I Pass  64: suminf.    1.00000 (107) obj. 1.24828 iterations 0
Cbc0038I Pass  65: suminf.    0.73832 (79) obj. 35.8733 iterations 28
Cbc0038I Pass  66: suminf.    0.96054 (57) obj. 63.6128 iterations 29
Cbc0038I Pass  67: suminf.    0.53271 (57) obj. 63.0788 iterations 1
Cbc0038I Pass  68: suminf.    0.96054 (57) obj. 63.6128 iterations 21
Cbc0038I Pass  69: suminf.    0.53271 (57) obj. 63.0788 iterations 1
Cbc0038I Pass  70: suminf.    0.96054 (57) obj. 63.6128 iterations 1
Cbc0038I Pass  71: suminf.    0.89674 (55) obj. 63.6128 iterations 20
Cbc0038I Pass  72: suminf.    0.89674 (55) obj. 63.6128 iterations 0
Cbc0038I Pass  73: suminf.    0.89674 (55) obj. 63.6128 iterations 6
Cbc0038I Pass  74: suminf.    0.89674 (55) obj. 63.6128 iterations 0
Cbc0038I Pass  75: suminf.    0.89674 (55) obj. 63.6128 iterations 3
Cbc0038I Pass  76: suminf.    0.89674 (55) obj. 63.6128 iterations 0
Cbc0038I Pass  77: suminf.    0.89674 (55) obj. 63.6128 iterations 3
Cbc0038I Pass  78: suminf.    0.89674 (55) obj. 63.6128 iterations 0
Cbc0038I Pass  79: suminf.    0.89674 (55) obj. 63.6128 iterations 3
Cbc0038I Pass  80: suminf.    0.89674 (55) obj. 63.6128 iterations 0
Cbc0038I Pass  81: suminf.    0.89674 (55) obj. 63.6128 iterations 3
Cbc0038I Pass  82: suminf.    0.89674 (55) obj. 63.6128 iterations 0
Cbc0038I Pass  83: suminf.    0.89674 (55) obj. 63.6128 iterations 3
Cbc0038I Pass  84: suminf.    0.88929 (53) obj. 63.6128 iterations 18
Cbc0038I Pass  85: suminf.    0.52336 (53) obj. 63.156 iterations 13
Cbc0038I Pass  86: suminf.    0.88929 (53) obj. 63.6128 iterations 15
Cbc0038I Pass  87: suminf.    0.52336 (53) obj. 63.156 iterations 15
Cbc0038I Pass  88: suminf.    0.88929 (53) obj. 63.6128 iterations 14
Cbc0038I Pass  89: suminf.    0.74825 (51) obj. 63.6128 iterations 29
Cbc0038I Pass  90: suminf.    0.74825 (51) obj. 63.6128 iterations 21
Cbc0038I Pass  91: suminf.    0.74825 (51) obj. 63.6128 iterations 8
Cbc0038I Pass  92: suminf.    0.74825 (51) obj. 63.6128 iterations 3
Cbc0038I Pass  93: suminf.    0.74825 (51) obj. 63.6128 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11429 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.54 seconds)
Cbc0038I After 0.54 seconds - Feasibility pump exiting with objective of 112.591 - took 0.45 seconds
Cbc0012I Integer solution of 112.59068 found by feasibility pump after 0 iterations and 0 nodes (0.55 seconds)
Cbc0012I Integer solution of 20.315052 found by DiveCoefficient after 9683 iterations and 0 nodes (5.25 seconds)
Cbc0031I 885 added rows had average density of 16.383051
Cbc0013I At root node, 885 cuts changed objective from 1.2482759 to 20.315052 in 21 passes
Cbc0014I Cut generator 0 (Probing) - 886 row cuts average 2.1 elements, 0 column cuts (409 active)  in 0.728 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 252 row cuts average 185.2 elements, 0 column cuts (0 active)  in 0.459 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1393 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1070 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 227 row cuts average 132.9 elements, 0 column cuts (0 active)  in 0.146 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 250 row cuts average 31.5 elements, 0 column cuts (0 active)  in 0.699 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 0.232723, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.21311808, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.19352102, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.17396998, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.15411997, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.13455701, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.11456013, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.094692945, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.07525301, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.053050041, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.03043294, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.0086381435, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 9.059906e-06 locked, 9.5367432e-07 waiting for locks
Cbc0001I Search completed - best objective 20.31505153100683, took 9683 iterations and 0 nodes (5.56 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.24828 to 20.3151
Probing was tried 273 times and created 11518 cuts of which 5317 were active after adding rounds of cuts (9.466 seconds)
Gomory was tried 273 times and created 3276 cuts of which 0 were active after adding rounds of cuts (5.967 seconds)
Knapsack was tried 273 times and created 18109 cuts of which 0 were active after adding rounds of cuts (0.734 seconds)
Clique was tried 273 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.175 seconds)
MixedIntegerRounding2 was tried 273 times and created 13910 cuts of which 0 were active after adding rounds of cuts (0.992 seconds)
FlowCover was tried 273 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.066 seconds)
TwoMirCuts was tried 273 times and created 2951 cuts of which 0 were active after adding rounds of cuts (1.896 seconds)
ZeroHalf was tried 273 times and created 3250 cuts of which 0 were active after adding rounds of cuts (9.092 seconds)

Result - Optimal solution found

Objective value:                20.31505153
Enumerated nodes:               0
Total iterations:               9683
Time (CPU seconds):             5.42
Time (Wallclock seconds):       5.58

Option for printingOptions changed from normal to all
Total time (CPU seconds):       5.45   (Wallclock seconds):       5.61

