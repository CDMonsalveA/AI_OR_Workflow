Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/281588cada9a4feb90326a267b26a856-pulp.mps -sec 60 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/281588cada9a4feb90326a267b26a856-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 387 COLUMNS
At line 183366 RHS
At line 183749 BOUNDS
At line 220422 ENDATA
Problem MODEL has 382 rows, 36672 columns and 73153 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 60
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.17069 - 0.02 seconds
Cgl0004I processed model has 382 rows, 36672 columns (36672 integer (36672 of which binary)) and 73153 elements
Cbc0038I Initial state - 191 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (191) obj. 1.17069 iterations 0
Cbc0038I Pass   2: suminf.    0.94764 (181) obj. 12.8163 iterations 10
Cbc0038I Pass   3: suminf.    0.80105 (153) obj. 45.424 iterations 28
Cbc0038I Pass   4: suminf.    0.73822 (141) obj. 59.3987 iterations 12
Cbc0038I Pass   5: suminf.    0.67539 (129) obj. 73.3734 iterations 12
Cbc0038I Pass   6: suminf.    0.59162 (113) obj. 92.0064 iterations 16
Cbc0038I Pass   7: suminf.    0.49215 (94) obj. 114.133 iterations 19
Cbc0038I Pass   8: suminf.    0.37173 (71) obj. 140.918 iterations 23
Cbc0038I Pass   9: suminf.    0.24607 (47) obj. 168.867 iterations 24
Cbc0038I Pass  10: suminf.    0.13089 (25) obj. 194.488 iterations 22
Cbc0038I Solution found of 223.602
Cbc0038I Before mini branch and bound, 36481 integers at bound fixed and 0 continuous
Cbc0038I Full problem 382 rows 36672 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.67 seconds)
Cbc0038I Round again with cutoff of 201.359
Cbc0038I Pass  11: suminf.    1.00000 (191) obj. 1.17069 iterations 0
Cbc0038I Pass  12: suminf.    0.94241 (180) obj. 13.9809 iterations 11
Cbc0038I Pass  13: suminf.    0.84817 (162) obj. 34.9429 iterations 18
Cbc0038I Pass  14: suminf.    0.78534 (150) obj. 48.9177 iterations 12
Cbc0038I Pass  15: suminf.    0.73298 (140) obj. 60.5633 iterations 10
Cbc0038I Pass  16: suminf.    0.60209 (115) obj. 89.6773 iterations 25
Cbc0038I Pass  17: suminf.    0.50262 (96) obj. 111.804 iterations 19
Cbc0038I Pass  18: suminf.    0.42408 (81) obj. 129.272 iterations 15
Cbc0038I Pass  19: suminf.    0.34555 (66) obj. 146.741 iterations 15
Cbc0038I Pass  20: suminf.    0.19372 (37) obj. 180.513 iterations 29
Cbc0038I Pass  21: suminf.    0.13613 (26) obj. 193.323 iterations 11
Cbc0038I Pass  22: suminf.    0.19896 (20) obj. 201.359 iterations 14
Cbc0038I Pass  23: suminf.    0.19896 (20) obj. 201.359 iterations 0
Cbc0038I Pass  24: suminf.    0.19896 (20) obj. 201.359 iterations 18
Cbc0038I Pass  25: suminf.    0.19896 (20) obj. 201.359 iterations 0
Cbc0038I Pass  26: suminf.    0.19896 (20) obj. 201.359 iterations 10
Cbc0038I Pass  27: suminf.    0.19896 (20) obj. 201.359 iterations 0
Cbc0038I Pass  28: suminf.    0.19896 (20) obj. 201.359 iterations 1
Cbc0038I Pass  29: suminf.    0.19896 (20) obj. 201.359 iterations 0
Cbc0038I Pass  30: suminf.    0.19896 (20) obj. 201.359 iterations 1
Cbc0038I Pass  31: suminf.    0.19896 (20) obj. 201.359 iterations 0
Cbc0038I Pass  32: suminf.    0.19896 (20) obj. 201.359 iterations 1
Cbc0038I Pass  33: suminf.    0.70380 (18) obj. 201.359 iterations 69
Cbc0038I Pass  34: suminf.    0.09948 (16) obj. 201.322 iterations 106
Cbc0038I Pass  35: suminf.    0.13105 (16) obj. 201.359 iterations 104
Cbc0038I Pass  36: suminf.    0.10471 (15) obj. 201.328 iterations 91
Cbc0038I Pass  37: suminf.    0.13105 (15) obj. 201.359 iterations 95
Cbc0038I Pass  38: suminf.    0.71958 (21) obj. 201.359 iterations 183
Cbc0038I Pass  39: suminf.    0.13089 (19) obj. 201.258 iterations 210
Cbc0038I Pass  40: suminf.    0.21666 (19) obj. 201.359 iterations 217
Cbc0038I Rounding solution of 165.984 is better than previous of 223.602

Cbc0038I Before mini branch and bound, 36260 integers at bound fixed and 0 continuous
Cbc0038I Full problem 382 rows 36672 columns, reduced to 96 rows 192 columns
Cbc0038I Mini branch and bound improved solution from 165.984 to 144.461 (1.09 seconds)
Cbc0038I Round again with cutoff of 115.803
Cbc0038I Pass  40: suminf.    1.00000 (191) obj. 1.17069 iterations 0
Cbc0038I Pass  41: suminf.    0.87958 (168) obj. 27.9556 iterations 23
Cbc0038I Pass  42: suminf.    0.76440 (146) obj. 53.5759 iterations 22
Cbc0038I Pass  43: suminf.    0.67539 (129) obj. 73.3734 iterations 17
Cbc0038I Pass  44: suminf.    0.57592 (110) obj. 95.5001 iterations 19
Cbc0038I Pass  45: suminf.    0.48691 (93) obj. 115.298 iterations 17
Cbc0038I Pass  46: suminf.    0.91843 (93) obj. 115.803 iterations 45
Cbc0038I Pass  47: suminf.    0.48691 (93) obj. 115.298 iterations 1
Cbc0038I Pass  48: suminf.    0.91843 (93) obj. 115.803 iterations 1
Cbc0038I Pass  49: suminf.    0.86518 (88) obj. 115.803 iterations 54
Cbc0038I Pass  50: suminf.    0.86518 (88) obj. 115.803 iterations 12
Cbc0038I Pass  51: suminf.    0.83376 (88) obj. 115.803 iterations 13
Cbc0038I Pass  52: suminf.    0.83376 (88) obj. 115.803 iterations 0
Cbc0038I Pass  53: suminf.    0.82329 (87) obj. 115.803 iterations 16
Cbc0038I Pass  54: suminf.    0.82329 (87) obj. 115.803 iterations 0
Cbc0038I Pass  55: suminf.    0.82329 (87) obj. 115.803 iterations 10
Cbc0038I Pass  56: suminf.    0.82329 (87) obj. 115.803 iterations 0
Cbc0038I Pass  57: suminf.    0.82329 (87) obj. 115.803 iterations 14
Cbc0038I Pass  58: suminf.    0.82329 (87) obj. 115.803 iterations 0
Cbc0038I Pass  59: suminf.    0.82329 (87) obj. 115.803 iterations 12
Cbc0038I Pass  60: suminf.    0.82329 (87) obj. 115.803 iterations 0
Cbc0038I Pass  61: suminf.    0.82329 (87) obj. 115.803 iterations 10
Cbc0038I Pass  62: suminf.    0.82329 (87) obj. 115.803 iterations 0
Cbc0038I Pass  63: suminf.    0.82329 (87) obj. 115.803 iterations 10
Cbc0038I Pass  64: suminf.    0.82329 (87) obj. 115.803 iterations 0
Cbc0038I Pass  65: suminf.    0.82329 (87) obj. 115.803 iterations 7
Cbc0038I Pass  66: suminf.    0.82329 (87) obj. 115.803 iterations 0
Cbc0038I Pass  67: suminf.    0.82329 (87) obj. 115.803 iterations 12
Cbc0038I Pass  68: suminf.    0.82329 (87) obj. 115.803 iterations 0
Cbc0038I Pass  69: suminf.    0.82329 (87) obj. 115.803 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36441 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (1.45 seconds)
Cbc0038I After 1.45 seconds - Feasibility pump exiting with objective of 144.461 - took 0.98 seconds
Cbc0012I Integer solution of 144.46081 found by feasibility pump after 0 iterations and 0 nodes (1.45 seconds)
Cbc0031I 2930 added rows had average density of 19.401365
Cbc0013I At root node, 2930 cuts changed objective from 1.1706897 to 16.088394 in 24 passes
Cbc0014I Cut generator 0 (Probing) - 2003 row cuts average 4.8 elements, 0 column cuts (391 active)  in 3.191 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 494 row cuts average 304.9 elements, 0 column cuts (0 active)  in 1.935 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5740 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.338 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2643 row cuts average 13.3 elements, 0 column cuts (0 active)  in 0.419 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 262 row cuts average 161.8 elements, 0 column cuts (0 active)  in 0.628 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 438 row cuts average 46.5 elements, 0 column cuts (0 active)  in 5.369 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 0.72855997, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.66961312, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.61062598, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.55032206, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.48260283, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.41529894, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.35039902, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.28532982, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.21952987, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.15350795, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.086494923, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.020969868, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 9.059906e-06 locked, 9.5367432e-07 waiting for locks
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 144.46081 (best possible 16.088394), took 63102 iterations and 0 nodes (63.21 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.17069 to 16.0884
Probing was tried 312 times and created 26039 cuts of which 5083 were active after adding rounds of cuts (41.479 seconds)
Gomory was tried 312 times and created 6422 cuts of which 0 were active after adding rounds of cuts (25.158 seconds)
Knapsack was tried 312 times and created 74620 cuts of which 0 were active after adding rounds of cuts (4.388 seconds)
Clique was tried 312 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.959 seconds)
MixedIntegerRounding2 was tried 312 times and created 34359 cuts of which 0 were active after adding rounds of cuts (5.442 seconds)
FlowCover was tried 312 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.273 seconds)
TwoMirCuts was tried 312 times and created 3406 cuts of which 0 were active after adding rounds of cuts (8.161 seconds)
ZeroHalf was tried 312 times and created 5694 cuts of which 0 were active after adding rounds of cuts (69.791 seconds)

Result - Stopped on time limit

Objective value:                144.46081344
Lower bound:                    16.088
Gap:                            7.98
Enumerated nodes:               0
Total iterations:               63102
Time (CPU seconds):             62.80
Time (Wallclock seconds):       63.27

Option for printingOptions changed from normal to all
Total time (CPU seconds):       62.88   (Wallclock seconds):       63.37

