Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/tesis/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/b508a970fdfc4423a0372534ee59475e-pulp.mps -sec 3600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/b508a970fdfc4423a0372534ee59475e-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 7400 COLUMNS
At line 43696 RHS
At line 51092 BOUNDS
At line 58403 ENDATA
Problem MODEL has 7395 rows, 7310 columns and 28900 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 3.47539e+07 - 0.10 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 330 strengthened rows, 0 substitutions
Cgl0004I processed model has 7395 rows, 7310 columns (85 integer (85 of which binary)) and 28985 elements
Cbc0038I Initial state - 8 integers unsatisfied sum - 1.9842
Cbc0038I Pass   1: (1.55 seconds) suminf.    0.00000 (0) obj. 5.74771e+07 iterations 445
Cbc0038I Solution found of 5.74771e+07
Cbc0038I Relaxing continuous gives 5.71659e+07
Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 7127 continuous
Cbc0038I Full problem 7395 rows 7310 columns, reduced to 96 rows 75 columns
Cbc0038I Mini branch and bound did not improve solution (1.62 seconds)
Cbc0038I Round again with cutoff of 5.68583e+07
Cbc0038I Pass   2: (1.84 seconds) suminf.    0.03488 (1) obj. 5.68583e+07 iterations 675
Cbc0038I Pass   3: (1.87 seconds) suminf.    0.35024 (1) obj. 5.68583e+07 iterations 477
Cbc0038I Pass   4: (2.13 seconds) suminf.    1.22594 (6) obj. 5.68583e+07 iterations 2231
Cbc0038I Pass   5: (2.16 seconds) suminf.    0.61448 (4) obj. 5.68583e+07 iterations 199
Cbc0038I Pass   6: (2.34 seconds) suminf.    0.46066 (1) obj. 5.68583e+07 iterations 1488
Cbc0038I Pass   7: (2.38 seconds) suminf.    0.37002 (1) obj. 5.68583e+07 iterations 774
Cbc0038I Pass   8: (2.44 seconds) suminf.    0.79740 (2) obj. 5.68583e+07 iterations 648
Cbc0038I Pass   9: (2.89 seconds) suminf.    0.26142 (1) obj. 5.68583e+07 iterations 3450
Cbc0038I Pass  10: (2.92 seconds) suminf.    0.59758 (2) obj. 5.68583e+07 iterations 487
Cbc0038I Pass  11: (3.00 seconds) suminf.    0.78294 (5) obj. 5.68583e+07 iterations 736
Cbc0038I Pass  12: (3.12 seconds) suminf.    0.03934 (1) obj. 5.68583e+07 iterations 858
Cbc0038I Pass  13: (3.18 seconds) suminf.    0.37374 (2) obj. 5.68583e+07 iterations 1150
Cbc0038I Pass  14: (3.31 seconds) suminf.    0.81629 (3) obj. 5.68583e+07 iterations 1107
Cbc0038I Pass  15: (3.38 seconds) suminf.    0.19259 (1) obj. 5.68583e+07 iterations 873
Cbc0038I Pass  16: (3.40 seconds) suminf.    0.23858 (1) obj. 5.68583e+07 iterations 386
Cbc0038I Pass  17: (3.70 seconds) suminf.    0.69573 (3) obj. 5.68583e+07 iterations 2013
Cbc0038I Pass  18: (3.71 seconds) suminf.    0.69573 (3) obj. 5.68583e+07 iterations 12
Cbc0038I Pass  19: (3.74 seconds) suminf.    0.46066 (1) obj. 5.68583e+07 iterations 181
Cbc0038I Pass  20: (3.77 seconds) suminf.    0.35996 (1) obj. 5.68583e+07 iterations 592
Cbc0038I Pass  21: (3.83 seconds) suminf.    0.37508 (2) obj. 5.68583e+07 iterations 776
Cbc0038I Pass  22: (3.83 seconds) suminf.    0.37508 (2) obj. 5.68583e+07 iterations 30
Cbc0038I Pass  23: (3.87 seconds) suminf.    0.38359 (1) obj. 5.68583e+07 iterations 487
Cbc0038I Pass  24: (3.88 seconds) suminf.    0.46066 (1) obj. 5.68583e+07 iterations 133
Cbc0038I Pass  25: (3.97 seconds) suminf.    0.33878 (2) obj. 5.68583e+07 iterations 1012
Cbc0038I No solution found this major pass
Cbc0038I After 3.98 seconds - Feasibility pump exiting with objective of 5.71659e+07 - took 2.49 seconds
Cbc0012I Integer solution of 57165914 found by feasibility pump after 0 iterations and 0 nodes (3.98 seconds)
Cbc0012I Integer solution of 55427962 found by DiveCoefficient after 0 iterations and 0 nodes (4.10 seconds)
Cbc0038I Full problem 7395 rows 7310 columns, reduced to 778 rows 1113 columns
Cbc0013I At root node, 0 cuts changed objective from 54089435 to 54089435 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 55427962 best solution, best possible 54089435 (4.52 seconds)
Cbc0012I Integer solution of 55331364 found by DiveCoefficient after 251 iterations and 2 nodes (5.05 seconds)
Cbc0012I Integer solution of 55019048 found by DiveCoefficient after 424 iterations and 2 nodes (5.06 seconds)
Cbc0012I Integer solution of 55019048 found by heuristic after 34 iterations and 1 nodes (5.06 seconds)
Cbc0012I Integer solution of 54864360 found by DiveCoefficient after 901 iterations and 4 nodes (5.47 seconds)
Cbc0012I Integer solution of 54864360 found by heuristic after 801 iterations and 5 nodes (5.73 seconds)
Cbc0012I Integer solution of 54842786 found by DiveCoefficient after 1210 iterations and 11 nodes (6.49 seconds)
Cbc0012I Integer solution of 54842786 found by heuristic after 1387 iterations and 13 nodes (6.71 seconds)
Cbc0010I After 100 nodes, 6 on tree, 54842786 best solution, best possible 54359348 (9.60 seconds)
Cbc0010I After 200 nodes, 9 on tree, 54842786 best solution, best possible 54388257 (10.93 seconds)
Cbc0010I After 300 nodes, 21 on tree, 54842786 best solution, best possible 54443265 (11.98 seconds)
Cbc0010I After 400 nodes, 21 on tree, 54842786 best solution, best possible 54464916 (12.77 seconds)
Cbc0010I After 500 nodes, 23 on tree, 54842786 best solution, best possible 54508285 (13.74 seconds)
Cbc0010I After 600 nodes, 25 on tree, 54842786 best solution, best possible 54571651 (14.60 seconds)
Cbc0010I After 700 nodes, 13 on tree, 54842786 best solution, best possible 54605243 (15.40 seconds)
Cbc0010I After 800 nodes, 15 on tree, 54842786 best solution, best possible 54635446 (16.41 seconds)
Cbc0010I After 900 nodes, 9 on tree, 54842786 best solution, best possible 54651758 (17.07 seconds)
Cbc0010I After 1000 nodes, 4 on tree, 54842786 best solution, best possible 54671630 (17.92 seconds)
Cbc0010I After 1100 nodes, 3 on tree, 54842786 best solution, best possible 54671630 (18.57 seconds)
Cbc0030I Thread 0 used 105 times,  waiting to start 0.92860794,  478 locks, 0.014719009 locked, 0.00141716 waiting for locks
Cbc0030I Thread 1 used 81 times,  waiting to start 2.271183,  372 locks, 0.0065770149 locked, 0.00093078613 waiting for locks
Cbc0030I Thread 2 used 138 times,  waiting to start 3.0896051,  636 locks, 0.011430502 locked, 0.0011901855 waiting for locks
Cbc0030I Thread 3 used 102 times,  waiting to start 3.3669727,  469 locks, 0.0082089901 locked, 0.0019254684 waiting for locks
Cbc0030I Thread 4 used 103 times,  waiting to start 4.0055623,  470 locks, 0.0096142292 locked, 0.00095295906 waiting for locks
Cbc0030I Thread 5 used 102 times,  waiting to start 4.7139051,  465 locks, 0.0082674026 locked, 0.0011765957 waiting for locks
Cbc0030I Thread 6 used 84 times,  waiting to start 5.0275204,  386 locks, 0.0076851845 locked, 0.0043590069 waiting for locks
Cbc0030I Thread 7 used 101 times,  waiting to start 5.3980074,  464 locks, 0.0086615086 locked, 0.0009393692 waiting for locks
Cbc0030I Thread 8 used 92 times,  waiting to start 5.2109735,  419 locks, 0.0078105927 locked, 0.02132225 waiting for locks
Cbc0030I Thread 9 used 89 times,  waiting to start 5.3491602,  410 locks, 0.0076913834 locked, 0.00045132637 waiting for locks
Cbc0030I Thread 10 used 84 times,  waiting to start 5.8446689,  382 locks, 0.0071723461 locked, 0.00013709068 waiting for locks
Cbc0030I Thread 11 used 94 times,  waiting to start 6.1407456,  431 locks, 0.0076293945 locked, 0.023765087 waiting for locks
Cbc0030I Main thread 12.190435 waiting for threads,  2381 locks, 0.0035495758 locked, 0.0057997704 waiting for locks
Cbc0001I Search completed - best objective 54842785.67154874, took 123484 iterations and 1175 nodes (20.56 seconds)
Cbc0032I Strong branching done 1860 times (103256 iterations), fathomed 87 nodes and fixed 45 variables
Cbc0035I Maximum depth 62, 122 variables fixed on reduced cost
Cuts at root node changed objective from 5.40894e+07 to 5.40894e+07
Probing was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.036 seconds)
Gomory was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
Knapsack was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)
Clique was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
FlowCover was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
TwoMirCuts was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.039 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                54842785.67154874
Enumerated nodes:               1175
Total iterations:               123484
Time (CPU seconds):             142.33
Time (Wallclock seconds):       20.72

Option for printingOptions changed from normal to all
Total time (CPU seconds):       142.35   (Wallclock seconds):       20.75

