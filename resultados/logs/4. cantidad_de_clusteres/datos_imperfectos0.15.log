Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/7cba1cef5e2346f69b3c7548009c72c0-pulp.mps -sec 600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/7cba1cef5e2346f69b3c7548009c72c0-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 351 COLUMNS
At line 150516 RHS
At line 150863 BOUNDS
At line 180966 ENDATA
Problem MODEL has 346 rows, 30102 columns and 60031 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.15455 - 0.02 seconds
Cgl0004I processed model has 346 rows, 30102 columns (30102 integer (30102 of which binary)) and 60031 elements
Cbc0038I Initial state - 173 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (173) obj. 1.15455 iterations 0
Cbc0038I Pass   2: suminf.    0.90751 (157) obj. 19.5205 iterations 16
Cbc0038I Pass   3: suminf.    0.84393 (146) obj. 32.1471 iterations 11
Cbc0038I Pass   4: suminf.    0.75723 (131) obj. 49.3652 iterations 15
Cbc0038I Pass   5: suminf.    0.60116 (104) obj. 80.3577 iterations 27
Cbc0038I Pass   6: suminf.    0.47399 (82) obj. 105.611 iterations 22
Cbc0038I Pass   7: suminf.    0.33526 (58) obj. 133.16 iterations 24
Cbc0038I Pass   8: suminf.    0.22543 (39) obj. 154.969 iterations 19
Cbc0038I Pass   9: suminf.    0.06936 (12) obj. 185.962 iterations 27
Cbc0038I Solution found of 199.736
Cbc0038I Before mini branch and bound, 29929 integers at bound fixed and 0 continuous
Cbc0038I Full problem 346 rows 30102 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.48 seconds)
Cbc0038I Round again with cutoff of 179.878
Cbc0038I Pass  10: suminf.    1.00000 (173) obj. 1.15455 iterations 0
Cbc0038I Pass  11: suminf.    0.84971 (147) obj. 30.9992 iterations 26
Cbc0038I Pass  12: suminf.    0.69942 (121) obj. 60.8439 iterations 26
Cbc0038I Pass  13: suminf.    0.64162 (111) obj. 72.3226 iterations 10
Cbc0038I Pass  14: suminf.    0.56647 (98) obj. 87.2449 iterations 13
Cbc0038I Pass  15: suminf.    0.41618 (72) obj. 117.09 iterations 26
Cbc0038I Pass  16: suminf.    0.34682 (60) obj. 130.864 iterations 12
Cbc0038I Pass  17: suminf.    0.28324 (49) obj. 143.491 iterations 11
Cbc0038I Pass  18: suminf.    0.13295 (23) obj. 173.335 iterations 26
Cbc0038I Pass  19: suminf.    0.39654 (18) obj. 179.878 iterations 25
Cbc0038I Pass  20: suminf.    0.39654 (18) obj. 179.878 iterations 0
Cbc0038I Pass  21: suminf.    0.39654 (18) obj. 179.878 iterations 1
Cbc0038I Pass  22: suminf.    0.39654 (18) obj. 179.878 iterations 0
Cbc0038I Pass  23: suminf.    0.39654 (18) obj. 179.878 iterations 1
Cbc0038I Pass  24: suminf.    1.01426 (19) obj. 179.878 iterations 109
Cbc0038I Pass  25: suminf.    0.16832 (18) obj. 179.878 iterations 62
Cbc0038I Pass  26: suminf.    0.15676 (17) obj. 179.878 iterations 45
Cbc0038I Pass  27: suminf.    0.15676 (17) obj. 179.878 iterations 0
Cbc0038I Pass  28: suminf.    0.15676 (16) obj. 179.878 iterations 36
Cbc0038I Pass  29: suminf.    0.15676 (16) obj. 179.878 iterations 2
Cbc0038I Pass  30: suminf.    0.13364 (15) obj. 179.878 iterations 36
Cbc0038I Pass  31: suminf.    0.13364 (15) obj. 179.878 iterations 2
Cbc0038I Pass  32: suminf.    0.14520 (15) obj. 179.878 iterations 26
Cbc0038I Pass  33: suminf.    0.14520 (15) obj. 179.878 iterations 1
Cbc0038I Pass  34: suminf.    0.13364 (15) obj. 179.878 iterations 55
Cbc0038I Pass  35: suminf.    0.99392 (15) obj. 179.878 iterations 138
Cbc0038I Pass  36: suminf.    0.11191 (14) obj. 179.878 iterations 118
Cbc0038I Pass  37: suminf.    0.11191 (14) obj. 179.878 iterations 68
Cbc0038I Pass  38: suminf.    0.11191 (14) obj. 179.878 iterations 1
Cbc0038I Pass  39: suminf.    0.11191 (14) obj. 179.878 iterations 73
Cbc0038I Rounding solution of 154.434 is better than previous of 199.736

Cbc0038I Before mini branch and bound, 29742 integers at bound fixed and 0 continuous
Cbc0038I Full problem 346 rows 30102 columns, reduced to 92 rows 184 columns
Cbc0038I Mini branch and bound improved solution from 154.434 to 132.543 (0.84 seconds)
Cbc0038I Round again with cutoff of 106.265
Cbc0038I Pass  39: suminf.    1.00000 (173) obj. 1.15455 iterations 0
Cbc0038I Pass  40: suminf.    0.93064 (161) obj. 14.929 iterations 12
Cbc0038I Pass  41: suminf.    0.80347 (139) obj. 40.1822 iterations 22
Cbc0038I Pass  42: suminf.    0.71676 (124) obj. 57.4003 iterations 15
Cbc0038I Pass  43: suminf.    0.64740 (112) obj. 71.1747 iterations 12
Cbc0038I Pass  44: suminf.    0.53179 (92) obj. 94.1322 iterations 20
Cbc0038I Pass  45: suminf.    0.89594 (82) obj. 106.265 iterations 24
Cbc0038I Pass  46: suminf.    0.89594 (82) obj. 106.265 iterations 0
Cbc0038I Pass  47: suminf.    0.89594 (82) obj. 106.265 iterations 22
Cbc0038I Pass  48: suminf.    0.89594 (82) obj. 106.265 iterations 0
Cbc0038I Pass  49: suminf.    0.89594 (82) obj. 106.265 iterations 1
Cbc0038I Pass  50: suminf.    0.89594 (82) obj. 106.265 iterations 0
Cbc0038I Pass  51: suminf.    0.89594 (82) obj. 106.265 iterations 1
Cbc0038I Pass  52: suminf.    0.75083 (73) obj. 106.265 iterations 65
Cbc0038I Pass  53: suminf.    0.75083 (73) obj. 106.265 iterations 20
Cbc0038I Pass  54: suminf.    0.72770 (72) obj. 106.265 iterations 20
Cbc0038I Pass  55: suminf.    0.72770 (72) obj. 106.265 iterations 0
Cbc0038I Pass  56: suminf.    0.72770 (72) obj. 106.265 iterations 7
Cbc0038I Pass  57: suminf.    0.72770 (72) obj. 106.265 iterations 0
Cbc0038I Pass  58: suminf.    0.72770 (72) obj. 106.265 iterations 11
Cbc0038I Pass  59: suminf.    0.72770 (72) obj. 106.265 iterations 0
Cbc0038I Pass  60: suminf.    0.72770 (72) obj. 106.265 iterations 7
Cbc0038I Pass  61: suminf.    0.72770 (72) obj. 106.265 iterations 0
Cbc0038I Pass  62: suminf.    0.72770 (72) obj. 106.265 iterations 18
Cbc0038I Pass  63: suminf.    0.72770 (72) obj. 106.265 iterations 0
Cbc0038I Pass  64: suminf.    0.72770 (72) obj. 106.265 iterations 9
Cbc0038I Pass  65: suminf.    0.72770 (72) obj. 106.265 iterations 0
Cbc0038I Pass  66: suminf.    1.25161 (66) obj. 106.265 iterations 92
Cbc0038I Pass  67: suminf.    0.43342 (65) obj. 106.265 iterations 49
Cbc0038I Pass  68: suminf.    0.43342 (65) obj. 106.265 iterations 22
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29851 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (1.15 seconds)
Cbc0038I After 1.15 seconds - Feasibility pump exiting with objective of 132.543 - took 0.81 seconds
Cbc0012I Integer solution of 132.54252 found by feasibility pump after 0 iterations and 0 nodes (1.15 seconds)
Cbc0012I Integer solution of 15.748649 found by DiveCoefficient after 104080 iterations and 0 nodes (95.58 seconds)
Cbc0031I 2454 added rows had average density of 14.550937
Cbc0013I At root node, 2454 cuts changed objective from 1.1545455 to 15.748649 in 37 passes
Cbc0014I Cut generator 0 (Probing) - 3098 row cuts average 3.1 elements, 0 column cuts (2363 active)  in 3.925 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 448 row cuts average 253.3 elements, 0 column cuts (0 active)  in 2.368 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 8708 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.520 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.123 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 3079 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.502 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 261 row cuts average 140.2 elements, 0 column cuts (0 active)  in 0.512 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 956 row cuts average 212.0 elements, 0 column cuts (0 active)  in 10.999 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 0.76979399, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.70905399, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.64147687, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.57432699, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.50719404, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.43829107, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.36855102, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.30054998, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.23254299, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.16487694, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.091690063, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.023919106, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 6.9141388e-06 locked, 9.5367432e-07 waiting for locks
Cbc0001I Search completed - best objective 15.74864890187448, took 104080 iterations and 0 nodes (96.63 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.15455 to 15.7486
Probing was tried 481 times and created 40274 cuts of which 30719 were active after adding rounds of cuts (51.020 seconds)
Gomory was tried 481 times and created 5824 cuts of which 0 were active after adding rounds of cuts (30.782 seconds)
Knapsack was tried 481 times and created 113204 cuts of which 0 were active after adding rounds of cuts (6.760 seconds)
Clique was tried 481 times and created 0 cuts of which 0 were active after adding rounds of cuts (1.593 seconds)
MixedIntegerRounding2 was tried 481 times and created 40027 cuts of which 0 were active after adding rounds of cuts (6.532 seconds)
FlowCover was tried 481 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.358 seconds)
TwoMirCuts was tried 481 times and created 3393 cuts of which 0 were active after adding rounds of cuts (6.657 seconds)
ZeroHalf was tried 481 times and created 12428 cuts of which 0 were active after adding rounds of cuts (142.989 seconds)

Result - Optimal solution found

Objective value:                15.74864890
Enumerated nodes:               0
Total iterations:               104080
Time (CPU seconds):             96.31
Time (Wallclock seconds):       96.68

Option for printingOptions changed from normal to all
Total time (CPU seconds):       96.39   (Wallclock seconds):       96.77

