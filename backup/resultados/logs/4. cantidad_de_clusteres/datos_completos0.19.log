Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/9e6b9ac17e0b487db9758c18c676f09a-pulp.mps -sec 600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/9e6b9ac17e0b487db9758c18c676f09a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 169 COLUMNS
At line 34036 RHS
At line 34201 BOUNDS
At line 41008 ENDATA
Problem MODEL has 164 rows, 6806 columns and 13530 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.19091 - 0.00 seconds
Cgl0004I processed model has 164 rows, 6806 columns (6806 integer (6806 of which binary)) and 13530 elements
Cbc0038I Initial state - 82 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (82) obj. 1.19091 iterations 0
Cbc0038I Pass   2: suminf.    0.85366 (70) obj. 15.3075 iterations 12
Cbc0038I Pass   3: suminf.    0.63415 (52) obj. 36.4825 iterations 18
Cbc0038I Pass   4: suminf.    0.32927 (27) obj. 65.8921 iterations 25
Cbc0038I Pass   5: suminf.    0.14634 (12) obj. 83.5379 iterations 15
Cbc0038I Solution found of 97.6545
Cbc0038I Before mini branch and bound, 6724 integers at bound fixed and 0 continuous
Cbc0038I Full problem 164 rows 6806 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I Round again with cutoff of 88.0082
Cbc0038I Pass   6: suminf.    1.00000 (82) obj. 1.19091 iterations 0
Cbc0038I Pass   7: suminf.    0.73171 (60) obj. 27.0714 iterations 22
Cbc0038I Pass   8: suminf.    0.53659 (44) obj. 45.8936 iterations 16
Cbc0038I Pass   9: suminf.    0.37805 (31) obj. 61.1866 iterations 13
Cbc0038I Pass  10: suminf.    0.21951 (18) obj. 76.4796 iterations 13
Cbc0038I Pass  11: suminf.    0.29513 (9) obj. 88.0082 iterations 24
Cbc0038I Pass  12: suminf.    0.29513 (9) obj. 88.0082 iterations 0
Cbc0038I Pass  13: suminf.    0.29513 (9) obj. 88.0082 iterations 1
Cbc0038I Pass  14: suminf.    0.29513 (9) obj. 88.0082 iterations 0
Cbc0038I Pass  15: suminf.    0.29513 (9) obj. 88.0082 iterations 1
Cbc0038I Pass  16: suminf.    0.56880 (9) obj. 88.0082 iterations 12
Cbc0038I Pass  17: suminf.    0.56880 (9) obj. 88.0082 iterations 4
Cbc0038I Pass  18: suminf.    0.56880 (9) obj. 88.0082 iterations 6
Cbc0038I Pass  19: suminf.    0.56880 (9) obj. 88.0082 iterations 0
Cbc0038I Pass  20: suminf.    0.56880 (9) obj. 88.0082 iterations 5
Cbc0038I Pass  21: suminf.    0.56880 (9) obj. 88.0082 iterations 0
Cbc0038I Pass  22: suminf.    0.56880 (9) obj. 88.0082 iterations 5
Cbc0038I Pass  23: suminf.    0.68446 (9) obj. 88.0082 iterations 33
Cbc0038I Pass  24: suminf.    0.09756 (7) obj. 87.9215 iterations 25
Cbc0038I Pass  25: suminf.    0.17036 (7) obj. 88.0082 iterations 25
Cbc0038I Pass  26: suminf.    0.09756 (7) obj. 87.9215 iterations 30
Cbc0038I Pass  27: suminf.    0.46264 (9) obj. 88.0082 iterations 40
Cbc0038I Pass  28: suminf.    0.08537 (7) obj. 87.9862 iterations 39
Cbc0038I Pass  29: suminf.    0.10381 (7) obj. 88.0082 iterations 43
Cbc0038I Pass  30: suminf.    0.08537 (7) obj. 87.9862 iterations 44
Cbc0038I Pass  31: suminf.    0.53709 (10) obj. 88.0082 iterations 73
Cbc0038I Pass  32: suminf.    0.21059 (9) obj. 88.0082 iterations 41
Cbc0038I Pass  33: suminf.    0.23498 (8) obj. 88.0082 iterations 20
Cbc0038I Pass  34: suminf.    0.23498 (8) obj. 88.0082 iterations 0
Cbc0038I Pass  35: suminf.    0.21059 (8) obj. 88.0082 iterations 26
Cbc0038I Rounding solution of 77.2794 is better than previous of 97.6545

Cbc0038I Before mini branch and bound, 6635 integers at bound fixed and 0 continuous
Cbc0038I Full problem 164 rows 6806 columns, reduced to 37 rows 75 columns
Cbc0038I Mini branch and bound improved solution from 77.2794 to 67.7159 (0.25 seconds)
Cbc0038I Round again with cutoff of 54.4109
Cbc0038I Pass  35: suminf.    1.00000 (82) obj. 1.19091 iterations 0
Cbc0038I Pass  36: suminf.    0.85366 (70) obj. 15.3075 iterations 12
Cbc0038I Pass  37: suminf.    0.62195 (51) obj. 37.6589 iterations 19
Cbc0038I Pass  38: suminf.    0.48780 (40) obj. 50.5991 iterations 11
Cbc0038I Pass  39: suminf.    0.68852 (37) obj. 54.4109 iterations 30
Cbc0038I Pass  40: suminf.    0.45122 (37) obj. 54.1283 iterations 1
Cbc0038I Pass  41: suminf.    0.68852 (37) obj. 54.4109 iterations 1
Cbc0038I Pass  42: suminf.    0.65653 (36) obj. 54.4109 iterations 14
Cbc0038I Pass  43: suminf.    0.45122 (36) obj. 54.1664 iterations 4
Cbc0038I Pass  44: suminf.    0.65653 (36) obj. 54.4109 iterations 7
Cbc0038I Pass  45: suminf.    0.45122 (36) obj. 54.1664 iterations 5
Cbc0038I Pass  46: suminf.    0.65653 (36) obj. 54.4109 iterations 8
Cbc0038I Pass  47: suminf.    0.45122 (36) obj. 54.1664 iterations 4
Cbc0038I Pass  48: suminf.    0.65653 (36) obj. 54.4109 iterations 5
Cbc0038I Pass  49: suminf.    0.47512 (37) obj. 54.4109 iterations 12
Cbc0038I Pass  50: suminf.    0.47512 (37) obj. 54.4109 iterations 8
Cbc0038I Pass  51: suminf.    0.47512 (37) obj. 54.4109 iterations 4
Cbc0038I Pass  52: suminf.    0.47512 (37) obj. 54.4109 iterations 0
Cbc0038I Pass  53: suminf.    0.47512 (37) obj. 54.4109 iterations 5
Cbc0038I Pass  54: suminf.    0.47512 (37) obj. 54.4109 iterations 0
Cbc0038I Pass  55: suminf.    0.47512 (37) obj. 54.4109 iterations 3
Cbc0038I Pass  56: suminf.    0.84894 (36) obj. 54.4109 iterations 17
Cbc0038I Pass  57: suminf.    0.50946 (35) obj. 54.4109 iterations 11
Cbc0038I Pass  58: suminf.    0.53385 (35) obj. 54.4109 iterations 11
Cbc0038I Pass  59: suminf.    0.53385 (35) obj. 54.4109 iterations 1
Cbc0038I Pass  60: suminf.    0.50946 (35) obj. 54.4109 iterations 8
Cbc0038I Pass  61: suminf.    0.50946 (35) obj. 54.4109 iterations 1
Cbc0038I Pass  62: suminf.    0.53385 (35) obj. 54.4109 iterations 11
Cbc0038I Pass  63: suminf.    0.53385 (35) obj. 54.4109 iterations 1
Cbc0038I Pass  64: suminf.    0.50946 (35) obj. 54.4109 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6699 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.33 seconds)
Cbc0038I After 0.33 seconds - Feasibility pump exiting with objective of 67.7159 - took 0.17 seconds
Cbc0012I Integer solution of 67.715873 found by feasibility pump after 0 iterations and 0 nodes (0.33 seconds)
Cbc0012I Integer solution of 16.544139 found by DiveCoefficient after 5483 iterations and 0 nodes (2.02 seconds)
Cbc0031I 586 added rows had average density of 19.87884
Cbc0013I At root node, 586 cuts changed objective from 1.1909091 to 16.544139 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 692 row cuts average 2.3 elements, 0 column cuts (100 active)  in 0.343 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 192 row cuts average 180.0 elements, 0 column cuts (0 active)  in 0.251 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 737 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 727 row cuts average 27.8 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 291 row cuts average 148.2 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 0.16188097, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.14818311, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.13417912, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.12032008, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.10623384, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.092467785, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.078863144, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.065450907, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.050446987, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.035578966, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.020673037, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.0057690144, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 5.9604645e-06 locked, 0 waiting for locks
Cbc0001I Search completed - best objective 16.54413939337136, took 5483 iterations and 0 nodes (2.25 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.19091 to 16.5441
Probing was tried 221 times and created 8996 cuts of which 1300 were active after adding rounds of cuts (4.455 seconds)
Gomory was tried 221 times and created 2496 cuts of which 0 were active after adding rounds of cuts (3.267 seconds)
Knapsack was tried 221 times and created 9581 cuts of which 0 were active after adding rounds of cuts (0.328 seconds)
Clique was tried 221 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.079 seconds)
MixedIntegerRounding2 was tried 221 times and created 9451 cuts of which 0 were active after adding rounds of cuts (0.646 seconds)
FlowCover was tried 221 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)
TwoMirCuts was tried 221 times and created 3783 cuts of which 0 were active after adding rounds of cuts (1.037 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Optimal solution found

Objective value:                16.54413939
Enumerated nodes:               0
Total iterations:               5483
Time (CPU seconds):             2.21
Time (Wallclock seconds):       2.26

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.23   (Wallclock seconds):       2.28

