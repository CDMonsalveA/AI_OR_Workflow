Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/tesis/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/fe28379f47db4593aca2d8f3376765bc-pulp.mps -sec 3600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/fe28379f47db4593aca2d8f3376765bc-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 36485 COLUMNS
At line 217366 RHS
At line 253847 BOUNDS
At line 290138 ENDATA
Problem MODEL has 36480 rows, 36290 columns and 144400 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 6.81735e+07 - 1.56 seconds
Cgl0004I processed model has 36480 rows, 36290 columns (190 integer (190 of which binary)) and 144400 elements
Cbc0038I Initial state - 63 integers unsatisfied sum - 8.44667
Cbc0038I Pass   1: (53.37 seconds) suminf.    1.28242 (19) obj. 2.07983e+08 iterations 48795
Cbc0038I Solution found of 3.22224e+08
Cbc0038I Relaxing continuous gives 1.80577e+08
Cbc0038I Before mini branch and bound, 109 integers at bound fixed and 30833 continuous
Cbc0038I Full problem 36480 rows 36290 columns, reduced to 5538 rows 5348 columns
Cbc0038I Mini branch and bound did not improve solution (74.19 seconds)
Cbc0038I Round again with cutoff of 1.69534e+08
Cbc0038I Pass   2: (91.01 seconds) suminf.    1.32508 (20) obj. 1.69534e+08 iterations 3990
Cbc0038I Pass   3: (111.91 seconds) suminf.    0.73645 (3) obj. 1.69534e+08 iterations 37420
Cbc0038I Pass   4: (112.94 seconds) suminf.    0.44337 (10) obj. 1.69534e+08 iterations 4674
Cbc0038I Pass   5: (115.46 seconds) suminf.    0.41956 (2) obj. 1.69534e+08 iterations 8868
Cbc0038I Pass   6: (115.80 seconds) suminf.    0.38614 (3) obj. 1.69534e+08 iterations 2660
Cbc0038I Pass   7: (116.99 seconds) suminf.    0.22850 (2) obj. 1.69534e+08 iterations 6151
Cbc0038I Pass   8: (117.79 seconds) suminf.    0.41405 (1) obj. 1.69534e+08 iterations 5190
Cbc0038I Pass   9: (119.79 seconds) suminf.    5.73100 (18) obj. 1.69534e+08 iterations 5478
Cbc0038I Pass  10: (121.78 seconds) suminf.    0.33664 (3) obj. 1.69534e+08 iterations 8148
Cbc0038I Pass  11: (123.22 seconds) suminf.    0.96806 (3) obj. 1.69534e+08 iterations 6774
Cbc0038I Pass  12: (124.53 seconds) suminf.    7.07661 (23) obj. 1.69534e+08 iterations 4453
Cbc0038I Pass  13: (125.13 seconds) suminf.    1.30088 (7) obj. 1.69534e+08 iterations 2207
Cbc0038I Pass  14: (125.76 seconds) suminf.    2.28448 (12) obj. 1.69534e+08 iterations 2804
Cbc0038I Pass  15: (125.96 seconds) suminf.    0.97452 (7) obj. 1.69534e+08 iterations 618
Cbc0038I Pass  16: (126.10 seconds) suminf.    0.52249 (7) obj. 1.69534e+08 iterations 616
Cbc0038I Pass  17: (126.40 seconds) suminf.    2.33631 (9) obj. 1.69534e+08 iterations 1559
Cbc0038I Pass  18: (127.76 seconds) suminf.    6.61351 (20) obj. 1.69534e+08 iterations 3469
Cbc0038I Pass  19: (128.41 seconds) suminf.    0.79431 (11) obj. 1.69534e+08 iterations 2065
Cbc0038I Pass  20: (129.14 seconds) suminf.    3.47046 (12) obj. 1.69534e+08 iterations 2298
Cbc0038I Pass  21: (129.41 seconds) suminf.    1.33526 (10) obj. 1.69534e+08 iterations 1118
Cbc0038I Pass  22: (130.23 seconds) suminf.    0.86892 (6) obj. 1.69534e+08 iterations 1656
Cbc0038I Pass  23: (130.37 seconds) suminf.    0.76256 (7) obj. 1.69534e+08 iterations 510
Cbc0038I Pass  24: (130.88 seconds) suminf.    2.22101 (8) obj. 1.69534e+08 iterations 2342
Cbc0038I Pass  25: (131.17 seconds) suminf.    0.89149 (7) obj. 1.69534e+08 iterations 1090
Cbc0038I Pass  26: (131.53 seconds) suminf.    2.56498 (11) obj. 1.69534e+08 iterations 1131
Cbc0038I Pass  27: (132.24 seconds) suminf.    0.41292 (4) obj. 1.69534e+08 iterations 2957
Cbc0038I Pass  28: (132.63 seconds) suminf.    0.96693 (5) obj. 1.69534e+08 iterations 2477
Cbc0038I Pass  29: (132.82 seconds) suminf.    0.73587 (6) obj. 1.69534e+08 iterations 825
Cbc0038I Pass  30: (133.31 seconds) suminf.    2.14042 (9) obj. 1.69534e+08 iterations 2937
Cbc0038I Pass  31: (133.58 seconds) suminf.    0.69847 (7) obj. 1.69534e+08 iterations 953
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 30130 continuous
Cbc0038I Full problem 36480 rows 36290 columns, reduced to 6293 rows 6103 columns
Cbc0038I Mini branch and bound did not improve solution (139.13 seconds)
Cbc0038I After 139.13 seconds - Feasibility pump exiting with objective of 1.80577e+08 - took 130.95 seconds
Cbc0012I Integer solution of 1.8057681e+08 found by feasibility pump after 0 iterations and 0 nodes (139.14 seconds)
Cbc0038I Full problem 36480 rows 36290 columns, reduced to 15661 rows 15471 columns - 20 fixed gives 11861, 15451 - ok now
Cbc0038I Full problem 36480 rows 36290 columns, reduced to 11861 rows 15451 columns
Cbc0031I 1096 added rows had average density of 22.277372
Cbc0013I At root node, 1096 cuts changed objective from 70149345 to 1.2218099e+08 in 50 passes
Cbc0014I Cut generator 0 (Probing) - 1246 row cuts average 2.0 elements, 0 column cuts (587 active)  in 0.480 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 177 row cuts average 130.8 elements, 0 column cuts (0 active)  in 0.781 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.590 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1897 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.450 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 21 row cuts average 32.2 elements, 0 column cuts (0 active)  in 0.567 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 47 row cuts average 26.4 elements, 0 column cuts (0 active)  in 0.561 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1.8057681e+08 best solution, best possible 1.2218099e+08 (309.96 seconds)
Cbc0010I After 100 nodes, 54 on tree, 1.8057681e+08 best solution, best possible 1.2329665e+08 (651.01 seconds)
Cbc0010I After 200 nodes, 107 on tree, 1.8057681e+08 best solution, best possible 1.2329665e+08 (1003.31 seconds)
Cbc0010I After 300 nodes, 158 on tree, 1.8057681e+08 best solution, best possible 1.2329665e+08 (1270.59 seconds)
Cbc0010I After 400 nodes, 213 on tree, 1.8057681e+08 best solution, best possible 1.2329665e+08 (1470.35 seconds)
Cbc0010I After 500 nodes, 262 on tree, 1.8057681e+08 best solution, best possible 1.2329665e+08 (1616.91 seconds)
Cbc0010I After 600 nodes, 314 on tree, 1.8057681e+08 best solution, best possible 1.2329665e+08 (1770.24 seconds)
Cbc0010I After 700 nodes, 363 on tree, 1.8057681e+08 best solution, best possible 1.2329665e+08 (1886.05 seconds)
Cbc0010I After 800 nodes, 413 on tree, 1.8057681e+08 best solution, best possible 1.2329665e+08 (2017.16 seconds)
Cbc0010I After 900 nodes, 462 on tree, 1.8057681e+08 best solution, best possible 1.2329665e+08 (2176.50 seconds)
Cbc0010I After 1000 nodes, 511 on tree, 1.8057681e+08 best solution, best possible 1.2329665e+08 (2364.23 seconds)
Cbc0010I After 1100 nodes, 561 on tree, 1.8057681e+08 best solution, best possible 1.2329665e+08 (2548.43 seconds)
Cbc0010I After 1200 nodes, 610 on tree, 1.8057681e+08 best solution, best possible 1.2329665e+08 (2752.63 seconds)
Cbc0010I After 1300 nodes, 659 on tree, 1.8057681e+08 best solution, best possible 1.2329665e+08 (2934.79 seconds)
Cbc0010I After 1400 nodes, 710 on tree, 1.8057681e+08 best solution, best possible 1.2329665e+08 (3121.76 seconds)
Cbc0010I After 1500 nodes, 760 on tree, 1.8057681e+08 best solution, best possible 1.2329665e+08 (3274.07 seconds)
Cbc0010I After 1600 nodes, 811 on tree, 1.8057681e+08 best solution, best possible 1.2329665e+08 (3461.59 seconds)
Cbc0030I Thread 0 used 140 times,  waiting to start 1.7133608,  1308 locks, 1.2465694 locked, 0.039017439 waiting for locks
Cbc0030I Thread 1 used 137 times,  waiting to start 10.741258,  1282 locks, 1.220125 locked, 0.058803558 waiting for locks
Cbc0030I Thread 2 used 147 times,  waiting to start 15.666869,  1385 locks, 1.2660215 locked, 0.040166616 waiting for locks
Cbc0030I Thread 3 used 139 times,  waiting to start 26.928733,  1300 locks, 1.2214479 locked, 0.0042142868 waiting for locks
Cbc0030I Thread 4 used 136 times,  waiting to start 29.06091,  1279 locks, 1.294625 locked, 0.031173229 waiting for locks
Cbc0030I Thread 5 used 136 times,  waiting to start 38.894632,  1272 locks, 1.1506293 locked, 0.0086772442 waiting for locks
Cbc0030I Thread 6 used 149 times,  waiting to start 41.359213,  1375 locks, 1.3619545 locked, 0.022559404 waiting for locks
Cbc0030I Thread 7 used 140 times,  waiting to start 42.897168,  1299 locks, 1.2725499 locked, 0.04795289 waiting for locks
Cbc0030I Thread 8 used 142 times,  waiting to start 55.382234,  1328 locks, 1.2978387 locked, 0.036980629 waiting for locks
Cbc0030I Thread 9 used 144 times,  waiting to start 60.336826,  1330 locks, 1.2970564 locked, 0.040596247 waiting for locks
Cbc0030I Thread 10 used 143 times,  waiting to start 65.036361,  1306 locks, 1.293005 locked, 0.022081852 waiting for locks
Cbc0030I Thread 11 used 140 times,  waiting to start 65.21685,  1288 locks, 1.2890012 locked, 0.013770103 waiting for locks
Cbc0030I Main thread 3274.8161 waiting for threads,  3407 locks, 0.017874718 locked, 0.07067132 waiting for locks
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1.8057681e+08 (best possible 1.2329665e+08), took 4819100 iterations and 1682 nodes (3597.16 seconds)
Cbc0032I Strong branching done 4770 times (413213 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 55, 0 variables fixed on reduced cost
Cuts at root node changed objective from 7.01493e+07 to 1.22181e+08
Probing was tried 6283 times and created 17900 cuts of which 7631 were active after adding rounds of cuts (1582.893 seconds)
Gomory was tried 6283 times and created 2301 cuts of which 0 were active after adding rounds of cuts (2303.920 seconds)
Knapsack was tried 650 times and created 0 cuts of which 0 were active after adding rounds of cuts (7.671 seconds)
Clique was tried 650 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.217 seconds)
MixedIntegerRounding2 was tried 6283 times and created 120729 cuts of which 0 were active after adding rounds of cuts (2547.841 seconds)
FlowCover was tried 650 times and created 273 cuts of which 0 were active after adding rounds of cuts (7.369 seconds)
TwoMirCuts was tried 650 times and created 611 cuts of which 0 were active after adding rounds of cuts (7.288 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Stopped on time limit

Objective value:                180576813.42911577
Lower bound:                    123296652.468
Gap:                            0.46
Enumerated nodes:               1682
Total iterations:               4819100
Time (CPU seconds):             38414.79
Time (Wallclock seconds):       3598.64

Option for printingOptions changed from normal to all
Total time (CPU seconds):       38414.91   (Wallclock seconds):       3598.81

