Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/d73305b90b384cbcb292c774b0ad9994-pulp.mps -sec 60 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/d73305b90b384cbcb292c774b0ad9994-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 145 COLUMNS
At line 24856 RHS
At line 24997 BOUNDS
At line 29968 ENDATA
Problem MODEL has 140 rows, 4970 columns and 9870 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 60
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.16207 - 0.00 seconds
Cgl0004I processed model has 140 rows, 4970 columns (4970 integer (4970 of which binary)) and 9870 elements
Cbc0038I Initial state - 70 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (70) obj. 1.16207 iterations 0
Cbc0038I Pass   2: suminf.    0.62857 (44) obj. 30.9442 iterations 26
Cbc0038I Pass   3: suminf.    0.28571 (20) obj. 58.4355 iterations 24
Cbc0038I Solution found of 81.3448
Cbc0038I Before mini branch and bound, 4900 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 4970 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I Round again with cutoff of 73.3265
Cbc0038I Pass   4: suminf.    1.00000 (70) obj. 1.16207 iterations 0
Cbc0038I Pass   5: suminf.    0.61429 (43) obj. 32.0897 iterations 27
Cbc0038I Pass   6: suminf.    0.20000 (14) obj. 65.3083 iterations 29
Cbc0038I Pass   7: suminf.    0.10001 (8) obj. 73.3265 iterations 20
Cbc0038I Pass   8: suminf.    0.10001 (8) obj. 73.3265 iterations 0
Cbc0038I Pass   9: suminf.    0.20049 (7) obj. 73.3265 iterations 31
Cbc0038I Pass  10: suminf.    0.07763 (5) obj. 73.3265 iterations 14
Cbc0038I Pass  11: suminf.    0.10620 (5) obj. 73.3265 iterations 7
Cbc0038I Pass  12: suminf.    0.10620 (5) obj. 73.3265 iterations 1
Cbc0038I Pass  13: suminf.    0.10620 (5) obj. 73.3265 iterations 6
Cbc0038I Pass  14: suminf.    0.10620 (5) obj. 73.3265 iterations 1
Cbc0038I Pass  15: suminf.    0.86301 (12) obj. 73.3265 iterations 97
Cbc0038I Pass  16: suminf.    0.14286 (10) obj. 73.0042 iterations 81
Cbc0038I Pass  17: suminf.    0.42028 (8) obj. 73.3265 iterations 97
Cbc0038I Pass  18: suminf.    0.17143 (8) obj. 73.0374 iterations 87
Cbc0038I Pass  19: suminf.    0.42028 (8) obj. 73.3265 iterations 91
Cbc0038I Pass  20: suminf.    0.14795 (10) obj. 73.3265 iterations 139
Cbc0038I Pass  21: suminf.    0.11966 (9) obj. 73.3265 iterations 66
Cbc0038I Pass  22: suminf.    0.10891 (6) obj. 73.3265 iterations 30
Cbc0038I Pass  23: suminf.    0.10000 (6) obj. 73.3162 iterations 113
Cbc0038I Pass  24: suminf.    0.10891 (6) obj. 73.3265 iterations 108
Cbc0038I Pass  25: suminf.    0.71897 (12) obj. 73.3265 iterations 139
Cbc0038I Pass  26: suminf.    0.18571 (10) obj. 73.2126 iterations 124
Cbc0038I Pass  27: suminf.    0.28381 (10) obj. 73.3265 iterations 121
Cbc0038I Pass  28: suminf.    0.18571 (10) obj. 73.2126 iterations 129
Cbc0038I Pass  29: suminf.    0.46200 (11) obj. 73.3265 iterations 146
Cbc0038I Pass  30: suminf.    0.20328 (9) obj. 73.3265 iterations 84
Cbc0038I Pass  31: suminf.    0.20328 (8) obj. 73.3265 iterations 44
Cbc0038I Pass  32: suminf.    0.20328 (8) obj. 73.3265 iterations 2
Cbc0038I Pass  33: suminf.    0.20328 (8) obj. 73.3265 iterations 38
Cbc0038I Rounding solution of 65.1495 is better than previous of 81.3448

Cbc0038I Before mini branch and bound, 4709 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 4970 columns, reduced to 104 rows 230 columns
Cbc0038I Mini branch and bound improved solution from 65.1495 to 44.0565 (0.20 seconds)
Cbc0038I Round again with cutoff of 35.4776
Cbc0038I Pass  33: suminf.    1.00000 (70) obj. 1.16207 iterations 0
Cbc0038I Pass  34: suminf.    0.70000 (49) obj. 25.2169 iterations 21
Cbc0038I Pass  35: suminf.    0.61315 (41) obj. 35.4776 iterations 17
Cbc0038I Pass  36: suminf.    0.61315 (41) obj. 35.4776 iterations 0
Cbc0038I Pass  37: suminf.    0.61315 (41) obj. 35.4776 iterations 16
Cbc0038I Pass  38: suminf.    0.61315 (41) obj. 35.4776 iterations 0
Cbc0038I Pass  39: suminf.    0.61315 (41) obj. 35.4776 iterations 1
Cbc0038I Pass  40: suminf.    0.61315 (41) obj. 35.4776 iterations 0
Cbc0038I Pass  41: suminf.    0.61315 (41) obj. 35.4776 iterations 3
Cbc0038I Pass  42: suminf.    0.61315 (41) obj. 35.4776 iterations 0
Cbc0038I Pass  43: suminf.    0.61315 (41) obj. 35.4776 iterations 1
Cbc0038I Pass  44: suminf.    0.61315 (41) obj. 35.4776 iterations 0
Cbc0038I Pass  45: suminf.    0.61315 (41) obj. 35.4776 iterations 1
Cbc0038I Pass  46: suminf.    0.61315 (41) obj. 35.4776 iterations 0
Cbc0038I Pass  47: suminf.    0.61315 (41) obj. 35.4776 iterations 1
Cbc0038I Pass  48: suminf.    0.96389 (36) obj. 35.4776 iterations 39
Cbc0038I Pass  49: suminf.    0.55714 (36) obj. 35.005 iterations 21
Cbc0038I Pass  50: suminf.    0.96389 (36) obj. 35.4776 iterations 29
Cbc0038I Pass  51: suminf.    0.55714 (36) obj. 35.005 iterations 25
Cbc0038I Pass  52: suminf.    0.96389 (36) obj. 35.4776 iterations 28
Cbc0038I Pass  53: suminf.    1.36965 (35) obj. 35.4776 iterations 57
Cbc0038I Pass  54: suminf.    0.54286 (33) obj. 35.3179 iterations 42
Cbc0038I Pass  55: suminf.    0.68027 (32) obj. 35.4776 iterations 59
Cbc0038I Pass  56: suminf.    0.54286 (32) obj. 35.3179 iterations 47
Cbc0038I Pass  57: suminf.    0.68027 (32) obj. 35.4776 iterations 49
Cbc0038I Pass  58: suminf.    0.86272 (28) obj. 35.4776 iterations 74
Cbc0038I Pass  59: suminf.    0.50000 (28) obj. 35.0561 iterations 59
Cbc0038I Pass  60: suminf.    0.86272 (28) obj. 35.4776 iterations 57
Cbc0038I Pass  61: suminf.    0.52857 (28) obj. 35.0893 iterations 49
Cbc0038I Pass  62: suminf.    0.86272 (28) obj. 35.4776 iterations 53
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4830 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.25 seconds)
Cbc0038I After 0.25 seconds - Feasibility pump exiting with objective of 44.0565 - took 0.15 seconds
Cbc0012I Integer solution of 44.056526 found by feasibility pump after 0 iterations and 0 nodes (0.26 seconds)
Cbc0012I Integer solution of 14.909107 found by DiveCoefficient after 4204 iterations and 0 nodes (1.42 seconds)
Cbc0031I 497 added rows had average density of 21.547284
Cbc0013I At root node, 497 cuts changed objective from 1.162069 to 14.909107 in 20 passes
Cbc0014I Cut generator 0 (Probing) - 657 row cuts average 2.9 elements, 0 column cuts (106 active)  in 0.286 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 217 row cuts average 171.5 elements, 0 column cuts (0 active)  in 0.130 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 548 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 587 row cuts average 44.7 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 306 row cuts average 134.7 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 0.14520717, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.13273001, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.12003088, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.1074748, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.094587088, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.081962109, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.069087982, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.056642056, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.044057846, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.031502962, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.018764973, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.0055148602, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 7.1525574e-06 locked, 9.5367432e-07 waiting for locks
Cbc0001I Search completed - best objective 14.90910688719703, took 4204 iterations and 0 nodes (1.64 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.16207 to 14.9091
Probing was tried 260 times and created 8541 cuts of which 1378 were active after adding rounds of cuts (3.720 seconds)
Gomory was tried 260 times and created 2821 cuts of which 0 were active after adding rounds of cuts (1.691 seconds)
Knapsack was tried 260 times and created 7124 cuts of which 0 were active after adding rounds of cuts (0.261 seconds)
Clique was tried 260 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.058 seconds)
MixedIntegerRounding2 was tried 260 times and created 7631 cuts of which 0 were active after adding rounds of cuts (0.576 seconds)
FlowCover was tried 260 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)
TwoMirCuts was tried 260 times and created 3978 cuts of which 0 were active after adding rounds of cuts (0.718 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Optimal solution found

Objective value:                14.90910689
Enumerated nodes:               0
Total iterations:               4204
Time (CPU seconds):             1.61
Time (Wallclock seconds):       1.65

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.62   (Wallclock seconds):       1.67

