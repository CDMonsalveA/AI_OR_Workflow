Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/32d4a1bb69ed4f9987a0316dd4fac0f9-pulp.mps -sec 3600 -timeMode elapsed -branch -printingOptions all -solution /tmp/32d4a1bb69ed4f9987a0316dd4fac0f9-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 121 COLUMNS
At line 10388 RHS
At line 10505 BOUNDS
At line 10564 ENDATA
Problem MODEL has 116 rows, 3422 columns and 6786 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
Option for timeMode changed from cpu to elapsed
Continuous objective value is 9.01471e+07 - 0.00 seconds
Cgl0004I processed model has 116 rows, 3422 columns (58 integer (58 of which binary)) and 6786 elements
Cbc0038I Initial state - 58 integers unsatisfied sum - 15.6159
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.46042e+09 iterations 58
Cbc0038I Solution found of 1.46042e+09
Cbc0038I Relaxing continuous gives 5.89319e+08
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 3249 continuous
Cbc0038I Full problem 116 rows 3422 columns, reduced to 107 rows 155 columns
Cbc0038I Mini branch and bound improved solution from 5.89319e+08 to 2.38848e+08 (0.03 seconds)
Cbc0038I Freeing continuous variables gives a solution of 2.3473e+08
Cbc0038I Round again with cutoff of 2.20271e+08
Cbc0038I Pass   2: suminf.    5.37943 (22) obj. 2.20271e+08 iterations 95
Cbc0038I Pass   3: suminf.    1.95035 (12) obj. 2.20271e+08 iterations 39
Cbc0038I Pass   4: suminf.    1.11895 (5) obj. 2.20271e+08 iterations 31
Cbc0038I Pass   5: suminf.    1.10657 (4) obj. 2.20271e+08 iterations 1
Cbc0038I Pass   6: suminf.    0.82930 (2) obj. 2.20271e+08 iterations 11
Cbc0038I Pass   7: suminf.    0.81460 (3) obj. 2.20271e+08 iterations 4
Cbc0038I Pass   8: suminf.    0.88367 (3) obj. 2.20271e+08 iterations 7
Cbc0038I Pass   9: suminf.    0.87311 (3) obj. 2.20271e+08 iterations 2
Cbc0038I Pass  10: suminf.    0.85241 (3) obj. 2.20271e+08 iterations 5
Cbc0038I Pass  11: suminf.    0.84208 (3) obj. 2.20271e+08 iterations 2
Cbc0038I Pass  12: suminf.    0.87413 (2) obj. 2.20271e+08 iterations 8
Cbc0038I Pass  13: suminf.    0.71554 (2) obj. 2.20271e+08 iterations 11
Cbc0038I Pass  14: suminf.    1.72113 (7) obj. 2.20271e+08 iterations 38
Cbc0038I Pass  15: suminf.    0.99187 (4) obj. 2.20271e+08 iterations 15
Cbc0038I Pass  16: suminf.    0.99187 (4) obj. 2.20271e+08 iterations 0
Cbc0038I Pass  17: suminf.    0.89724 (3) obj. 2.20271e+08 iterations 12
Cbc0038I Pass  18: suminf.    0.87576 (3) obj. 2.20271e+08 iterations 3
Cbc0038I Pass  19: suminf.    0.86476 (2) obj. 2.20271e+08 iterations 7
Cbc0038I Pass  20: suminf.    0.76230 (2) obj. 2.20271e+08 iterations 7
Cbc0038I Pass  21: suminf.    2.25333 (8) obj. 2.20271e+08 iterations 35
Cbc0038I Pass  22: suminf.    1.47200 (6) obj. 2.20271e+08 iterations 4
Cbc0038I Pass  23: suminf.    0.61956 (2) obj. 2.20271e+08 iterations 12
Cbc0038I Pass  24: suminf.    0.61956 (2) obj. 2.20271e+08 iterations 0
Cbc0038I Pass  25: suminf.    0.89105 (2) obj. 2.20271e+08 iterations 8
Cbc0038I Pass  26: suminf.    0.63764 (2) obj. 2.20271e+08 iterations 5
Cbc0038I Pass  27: suminf.    1.73844 (6) obj. 2.20271e+08 iterations 27
Cbc0038I Pass  28: suminf.    1.68257 (6) obj. 2.20271e+08 iterations 3
Cbc0038I Pass  29: suminf.    0.76506 (2) obj. 2.20271e+08 iterations 8
Cbc0038I Pass  30: suminf.    0.76506 (2) obj. 2.20271e+08 iterations 0
Cbc0038I Pass  31: suminf.    0.87463 (2) obj. 2.20271e+08 iterations 4
Cbc0038I Rounding solution of 2.33717e+08 is better than previous of 2.3473e+08

Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 3236 continuous
Cbc0038I Full problem 116 rows 3422 columns, reduced to 84 rows 148 columns
Cbc0038I Mini branch and bound improved solution from 2.33717e+08 to 2.18473e+08 (0.09 seconds)
Cbc0038I Round again with cutoff of 1.92808e+08
Cbc0038I Pass  31: suminf.    6.38026 (27) obj. 1.92808e+08 iterations 7
Cbc0038I Pass  32: suminf.    2.98645 (10) obj. 1.92808e+08 iterations 59
Cbc0038I Pass  33: suminf.    2.56423 (10) obj. 1.92808e+08 iterations 21
Cbc0038I Pass  34: suminf.    2.55812 (10) obj. 1.92808e+08 iterations 2
Cbc0038I Pass  35: suminf.    3.35403 (10) obj. 1.92808e+08 iterations 25
Cbc0038I Pass  36: suminf.    3.35403 (10) obj. 1.92808e+08 iterations 0
Cbc0038I Pass  37: suminf.    3.97632 (10) obj. 1.92808e+08 iterations 10
Cbc0038I Pass  38: suminf.    3.94879 (10) obj. 1.92808e+08 iterations 2
Cbc0038I Pass  39: suminf.    3.99361 (10) obj. 1.92808e+08 iterations 7
Cbc0038I Pass  40: suminf.    3.68455 (10) obj. 1.92808e+08 iterations 4
Cbc0038I Pass  41: suminf.    3.68455 (10) obj. 1.92808e+08 iterations 0
Cbc0038I Pass  42: suminf.    3.99361 (10) obj. 1.92808e+08 iterations 8
Cbc0038I Pass  43: suminf.    3.94879 (10) obj. 1.92808e+08 iterations 3
Cbc0038I Pass  44: suminf.    3.99361 (10) obj. 1.92808e+08 iterations 7
Cbc0038I Pass  45: suminf.    3.68455 (10) obj. 1.92808e+08 iterations 4
Cbc0038I Pass  46: suminf.    3.68455 (10) obj. 1.92808e+08 iterations 0
Cbc0038I Pass  47: suminf.    3.99361 (10) obj. 1.92808e+08 iterations 8
Cbc0038I Pass  48: suminf.    3.94879 (10) obj. 1.92808e+08 iterations 3
Cbc0038I Pass  49: suminf.    3.99361 (10) obj. 1.92808e+08 iterations 8
Cbc0038I Pass  50: suminf.    3.68455 (10) obj. 1.92808e+08 iterations 4
Cbc0038I Pass  51: suminf.    3.68455 (10) obj. 1.92808e+08 iterations 0
Cbc0038I Pass  52: suminf.    3.99361 (10) obj. 1.92808e+08 iterations 8
Cbc0038I Pass  53: suminf.    3.94879 (10) obj. 1.92808e+08 iterations 3
Cbc0038I Pass  54: suminf.    3.99361 (10) obj. 1.92808e+08 iterations 7
Cbc0038I Pass  55: suminf.    3.68455 (10) obj. 1.92808e+08 iterations 4
Cbc0038I Pass  56: suminf.    3.68455 (10) obj. 1.92808e+08 iterations 0
Cbc0038I Pass  57: suminf.    3.99361 (10) obj. 1.92808e+08 iterations 8
Cbc0038I Pass  58: suminf.    3.94879 (10) obj. 1.92808e+08 iterations 3
Cbc0038I Pass  59: suminf.    3.99361 (10) obj. 1.92808e+08 iterations 8
Cbc0038I Pass  60: suminf.    3.68455 (10) obj. 1.92808e+08 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 3276 continuous
Cbc0038I Full problem 116 rows 3422 columns, reduced to 55 rows 78 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of 2.18473e+08 - took 0.12 seconds
Cbc0012I Integer solution of 2.1847283e+08 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0012I Integer solution of 2.1642703e+08 found by DiveCoefficient after 297 iterations and 0 nodes (0.37 seconds)
Cbc0031I 70 added rows had average density of 80.542857
Cbc0013I At root node, 70 cuts changed objective from 90147127 to 2.1597186e+08 in 38 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 151 row cuts average 135.5 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 3 row cuts average 231.7 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 80 row cuts average 85.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 2.1642703e+08 best solution, best possible 2.1597309e+08 (0.37 seconds)
Cbc0016I Integer solution of 2.1635198e+08 found by strong branching after 314 iterations and 1 nodes (0.38 seconds)
Cbc0001I Search completed - best objective 216351978.535749, took 358 iterations and 2 nodes (0.39 seconds)
Cbc0032I Strong branching done 16 times (102 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 9.01471e+07 to 2.15973e+08
Probing was tried 38 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.062 seconds)
Gomory was tried 38 times and created 151 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Knapsack was tried 38 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Clique was tried 38 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 38 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
FlowCover was tried 38 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.045 seconds)
TwoMirCuts was tried 41 times and created 81 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                216351978.53574896
Enumerated nodes:               2
Total iterations:               358
Time (CPU seconds):             0.40
Time (Wallclock seconds):       0.40

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.41   (Wallclock seconds):       0.41

