Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/6f670cae7f9247829b00139bd41ad62f-pulp.mps -sec 60 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/6f670cae7f9247829b00139bd41ad62f-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 249 COLUMNS
At line 75036 RHS
At line 75281 BOUNDS
At line 90288 ENDATA
Problem MODEL has 244 rows, 15006 columns and 29890 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 60
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.28276 - 0.01 seconds
Cgl0004I processed model has 244 rows, 15006 columns (15006 integer (15006 of which binary)) and 29890 elements
Cbc0038I Initial state - 122 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (122) obj. 1.28276 iterations 0
Cbc0038I Pass   2: suminf.    0.86885 (106) obj. 21.6387 iterations 16
Cbc0038I Pass   3: suminf.    0.67213 (82) obj. 52.1725 iterations 24
Cbc0038I Pass   4: suminf.    0.54098 (66) obj. 72.5284 iterations 16
Cbc0038I Pass   5: suminf.    0.40164 (49) obj. 94.1566 iterations 17
Cbc0038I Pass   6: suminf.    0.18852 (23) obj. 127.235 iterations 26
Cbc0038I Pass   7: suminf.    0.09016 (11) obj. 142.502 iterations 12
Cbc0038I Solution found of 156.497
Cbc0038I Before mini branch and bound, 14884 integers at bound fixed and 0 continuous
Cbc0038I Full problem 244 rows 15006 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I Round again with cutoff of 140.975
Cbc0038I Pass   8: suminf.    1.00000 (122) obj. 1.28276 iterations 0
Cbc0038I Pass   9: suminf.    0.91803 (112) obj. 14.0052 iterations 10
Cbc0038I Pass  10: suminf.    0.68033 (83) obj. 50.9003 iterations 29
Cbc0038I Pass  11: suminf.    0.59836 (73) obj. 63.6227 iterations 10
Cbc0038I Pass  12: suminf.    0.45902 (56) obj. 85.2509 iterations 17
Cbc0038I Pass  13: suminf.    0.25410 (31) obj. 117.057 iterations 25
Cbc0038I Pass  14: suminf.    0.29673 (13) obj. 140.975 iterations 28
Cbc0038I Pass  15: suminf.    0.29673 (13) obj. 140.975 iterations 0
Cbc0038I Pass  16: suminf.    0.29673 (13) obj. 140.975 iterations 12
Cbc0038I Pass  17: suminf.    0.29673 (13) obj. 140.975 iterations 0
Cbc0038I Pass  18: suminf.    0.29673 (13) obj. 140.975 iterations 2
Cbc0038I Pass  19: suminf.    0.29673 (13) obj. 140.975 iterations 0
Cbc0038I Pass  20: suminf.    0.29673 (13) obj. 140.975 iterations 1
Cbc0038I Pass  21: suminf.    0.29673 (13) obj. 140.975 iterations 0
Cbc0038I Pass  22: suminf.    0.29673 (13) obj. 140.975 iterations 1
Cbc0038I Pass  23: suminf.    0.48072 (14) obj. 140.975 iterations 18
Cbc0038I Pass  24: suminf.    0.09836 (12) obj. 140.918 iterations 33
Cbc0038I Pass  25: suminf.    0.14290 (12) obj. 140.975 iterations 37
Cbc0038I Pass  26: suminf.    0.09836 (12) obj. 140.918 iterations 34
Cbc0038I Pass  27: suminf.    0.46682 (14) obj. 140.975 iterations 45
Cbc0038I Pass  28: suminf.    0.12182 (13) obj. 140.975 iterations 18
Cbc0038I Pass  29: suminf.    0.12182 (13) obj. 140.975 iterations 8
Cbc0038I Pass  30: suminf.    0.12182 (13) obj. 140.975 iterations 0
Cbc0038I Pass  31: suminf.    0.12182 (13) obj. 140.975 iterations 7
Cbc0038I Pass  32: suminf.    0.12182 (13) obj. 140.975 iterations 0
Cbc0038I Pass  33: suminf.    1.07214 (16) obj. 140.975 iterations 45
Cbc0038I Pass  34: suminf.    0.15574 (14) obj. 140.809 iterations 60
Cbc0038I Pass  35: suminf.    0.28528 (13) obj. 140.975 iterations 70
Cbc0038I Pass  36: suminf.    0.11475 (12) obj. 140.756 iterations 67
Cbc0038I Pass  37: suminf.    0.28528 (12) obj. 140.975 iterations 69
Cbc0038I Rounding solution of 125.216 is better than previous of 156.497

Cbc0038I Before mini branch and bound, 14807 integers at bound fixed and 0 continuous
Cbc0038I Full problem 244 rows 15006 columns, reduced to 30 rows 60 columns
Cbc0038I Mini branch and bound improved solution from 125.216 to 122.508 (0.39 seconds)
Cbc0038I Round again with cutoff of 98.2627
Cbc0038I Pass  37: suminf.    1.00000 (122) obj. 1.28276 iterations 0
Cbc0038I Pass  38: suminf.    0.88525 (108) obj. 19.0942 iterations 14
Cbc0038I Pass  39: suminf.    0.72951 (89) obj. 43.2668 iterations 19
Cbc0038I Pass  40: suminf.    0.64754 (79) obj. 55.9893 iterations 10
Cbc0038I Pass  41: suminf.    0.48361 (59) obj. 81.4341 iterations 20
Cbc0038I Pass  42: suminf.    0.60264 (46) obj. 98.2627 iterations 24
Cbc0038I Pass  43: suminf.    0.37705 (46) obj. 97.9733 iterations 1
Cbc0038I Pass  44: suminf.    0.60264 (46) obj. 98.2627 iterations 18
Cbc0038I Pass  45: suminf.    0.37705 (46) obj. 97.9733 iterations 1
Cbc0038I Pass  46: suminf.    0.60264 (46) obj. 98.2627 iterations 1
Cbc0038I Pass  47: suminf.    0.74629 (46) obj. 98.2627 iterations 30
Cbc0038I Pass  48: suminf.    0.74629 (46) obj. 98.2627 iterations 8
Cbc0038I Pass  49: suminf.    0.71350 (45) obj. 98.2627 iterations 8
Cbc0038I Pass  50: suminf.    0.71350 (45) obj. 98.2627 iterations 0
Cbc0038I Pass  51: suminf.    0.71350 (45) obj. 98.2627 iterations 5
Cbc0038I Pass  52: suminf.    0.71350 (45) obj. 98.2627 iterations 0
Cbc0038I Pass  53: suminf.    0.71350 (45) obj. 98.2627 iterations 3
Cbc0038I Pass  54: suminf.    1.07651 (46) obj. 98.2627 iterations 13
Cbc0038I Pass  55: suminf.    0.37705 (44) obj. 98.209 iterations 20
Cbc0038I Pass  56: suminf.    0.41889 (44) obj. 98.2627 iterations 21
Cbc0038I Pass  57: suminf.    0.36885 (44) obj. 98.1985 iterations 19
Cbc0038I Pass  58: suminf.    0.41889 (44) obj. 98.2627 iterations 24
Cbc0038I Pass  59: suminf.    0.36885 (44) obj. 98.1985 iterations 19
Cbc0038I Pass  60: suminf.    0.41889 (44) obj. 98.2627 iterations 22
Cbc0038I Pass  61: suminf.    0.59828 (43) obj. 98.2627 iterations 42
Cbc0038I Pass  62: suminf.    0.42588 (42) obj. 98.2627 iterations 21
Cbc0038I Pass  63: suminf.    0.44228 (42) obj. 98.2627 iterations 14
Cbc0038I Pass  64: suminf.    0.44228 (42) obj. 98.2627 iterations 1
Cbc0038I Pass  65: suminf.    0.42588 (42) obj. 98.2627 iterations 17
Cbc0038I Pass  66: suminf.    0.42588 (42) obj. 98.2627 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14834 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.56 seconds)
Cbc0038I After 0.56 seconds - Feasibility pump exiting with objective of 122.508 - took 0.41 seconds
Cbc0012I Integer solution of 122.5077 found by feasibility pump after 0 iterations and 0 nodes (0.56 seconds)
Cbc0031I 1097 added rows had average density of 18.233364
Cbc0013I At root node, 1097 cuts changed objective from 1.2827586 to 22.698388 in 31 passes
Cbc0014I Cut generator 0 (Probing) - 1016 row cuts average 2.9 elements, 0 column cuts (423 active)  in 1.439 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 260 row cuts average 192.4 elements, 0 column cuts (0 active)  in 0.722 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2143 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1314 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.135 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 254 row cuts average 154.9 elements, 0 column cuts (0 active)  in 0.218 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 122.5077 best solution, best possible 22.698388 (9.17 seconds)
Cbc0016I Integer solution of 22.710257 found by strong branching after 14861 iterations and 2 nodes (9.91 seconds)
Clp0006I 0  Obj 22.708312 Primal inf 0.015894849 (1)
Cbc0012I Integer solution of 22.710257 found by heuristic after 14644 iterations and 1 nodes (9.94 seconds)
Cbc0030I Thread 0 used 3 times,  waiting to start 0.25556302, 1.178726 cpu time, 20 locks, 0.0025858879 locked, 1.0967255e-05 waiting for locks
Cbc0030I Thread 1 used 1 times,  waiting to start 0.66002488, 0.745693 cpu time, 9 locks, 0.0011320114 locked, 3.0994415e-06 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 1.014889, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.99284196, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.97051692, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.94872689, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.92706585, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.90448689, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.88299799, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.861624, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.83856606, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.81450391, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0.79709911 waiting for threads,  15 locks, 2.4795532e-05 locked, 1.9073486e-06 waiting for locks
Cbc0001I Search completed - best objective 22.71025661024974, took 15698 iterations and 4 nodes (10.04 seconds)
Cbc0032I Strong branching done 312 times (15786 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.28276 to 22.6984
Probing was tried 410 times and created 13234 cuts of which 5499 were active after adding rounds of cuts (18.732 seconds)
Gomory was tried 410 times and created 3380 cuts of which 0 were active after adding rounds of cuts (9.415 seconds)
Knapsack was tried 410 times and created 27976 cuts of which 0 were active after adding rounds of cuts (1.567 seconds)
Clique was tried 403 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.342 seconds)
MixedIntegerRounding2 was tried 410 times and created 17109 cuts of which 0 were active after adding rounds of cuts (1.774 seconds)
FlowCover was tried 403 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.146 seconds)
TwoMirCuts was tried 410 times and created 3302 cuts of which 0 were active after adding rounds of cuts (2.923 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
ImplicationCuts was tried 7 times and created 64 cuts of which 0 were active after adding rounds of cuts (0.026 seconds)

Result - Optimal solution found

Objective value:                22.71025661
Enumerated nodes:               4
Total iterations:               15698
Time (CPU seconds):             10.25
Time (Wallclock seconds):       10.06

Option for printingOptions changed from normal to all
Total time (CPU seconds):       10.29   (Wallclock seconds):       10.10

