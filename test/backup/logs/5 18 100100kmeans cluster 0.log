Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/tesis/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/9644a1bbbd5542499f97e34cd6751988-pulp.mps -sec 3600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/9644a1bbbd5542499f97e34cd6751988-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 38813 COLUMNS
At line 231286 RHS
At line 270095 BOUNDS
At line 308708 ENDATA
Problem MODEL has 38808 rows, 38612 columns and 153664 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 7.14431e+07 - 0.82 seconds
Cgl0004I processed model has 38808 rows, 38612 columns (196 integer (196 of which binary)) and 153664 elements
Cbc0038I Initial state - 33 integers unsatisfied sum - 6.80607
Cbc0038I Pass   1: (26.96 seconds) suminf.    1.05153 (12) obj. 1.87616e+08 iterations 40397
Cbc0038I Solution found of 2.42138e+08
Cbc0038I Relaxing continuous gives 1.22805e+08
Cbc0038I Before mini branch and bound, 153 integers at bound fixed and 35272 continuous
Cbc0038I Full problem 38808 rows 38612 columns, reduced to 3354 rows 3187 columns
Cbc0038I Mini branch and bound improved solution from 1.22805e+08 to 1.14437e+08 (51.03 seconds)
Cbc0038I Freeing continuous variables gives a solution of 1.14003e+08
Cbc0038I Round again with cutoff of 1.0982e+08
Cbc0038I Pass   2: (92.88 seconds) suminf.    1.64395 (15) obj. 1.0982e+08 iterations 24379
Cbc0038I Pass   3: (99.52 seconds) suminf.    1.53523 (8) obj. 1.0982e+08 iterations 17384
Cbc0038I Pass   4: (100.06 seconds) suminf.    1.05857 (10) obj. 1.0982e+08 iterations 2681
Cbc0038I Pass   5: (101.25 seconds) suminf.    1.83075 (7) obj. 1.0982e+08 iterations 3887
Cbc0038I Pass   6: (101.72 seconds) suminf.    0.62974 (6) obj. 1.0982e+08 iterations 2110
Cbc0038I Pass   7: (102.34 seconds) suminf.    2.89255 (9) obj. 1.0982e+08 iterations 3032
Cbc0038I Pass   8: (102.66 seconds) suminf.    0.98473 (8) obj. 1.0982e+08 iterations 1821
Cbc0038I Pass   9: (103.59 seconds) suminf.    0.62813 (3) obj. 1.0982e+08 iterations 4037
Cbc0038I Pass  10: (103.96 seconds) suminf.    1.24401 (5) obj. 1.0982e+08 iterations 2435
Cbc0038I Pass  11: (104.03 seconds) suminf.    0.70572 (6) obj. 1.0982e+08 iterations 249
Cbc0038I Pass  12: (106.27 seconds) suminf.    0.14802 (1) obj. 1.0982e+08 iterations 11902
Cbc0038I Pass  13: (107.58 seconds) suminf.    0.40456 (1) obj. 1.0982e+08 iterations 8333
Cbc0038I Pass  14: (108.36 seconds) suminf.    6.28693 (18) obj. 1.0982e+08 iterations 2806
Cbc0038I Pass  15: (110.03 seconds) suminf.    0.26923 (2) obj. 1.0982e+08 iterations 8758
Cbc0038I Pass  16: (111.04 seconds) suminf.    0.81035 (2) obj. 1.0982e+08 iterations 5980
Cbc0038I Pass  17: (111.97 seconds) suminf.    5.34114 (20) obj. 1.0982e+08 iterations 3390
Cbc0038I Pass  18: (112.73 seconds) suminf.    0.18622 (3) obj. 1.0982e+08 iterations 4029
Cbc0038I Pass  19: (112.97 seconds) suminf.    0.63367 (4) obj. 1.0982e+08 iterations 1446
Cbc0038I Pass  20: (113.12 seconds) suminf.    0.57707 (5) obj. 1.0982e+08 iterations 1068
Cbc0038I Pass  21: (114.29 seconds) suminf.    0.12618 (1) obj. 1.0982e+08 iterations 7609
Cbc0038I Pass  22: (114.98 seconds) suminf.    0.36386 (1) obj. 1.0982e+08 iterations 5352
Cbc0038I Rounding solution of 1.13708e+08 is better than previous of 1.14003e+08

Cbc0038I After 114.99 seconds - Feasibility pump exiting with objective of 1.13708e+08 - took 111.78 seconds
Cbc0012I Integer solution of 1.1354084e+08 found by feasibility pump after 0 iterations and 0 nodes (115.16 seconds)
Cbc0038I Full problem 38808 rows 38612 columns, reduced to 8274 rows 8273 columns
Cbc0031I 507 added rows had average density of 28.869822
Cbc0013I At root node, 507 cuts changed objective from 72175209 to 86990180 in 33 passes
Cbc0014I Cut generator 0 (Probing) - 551 row cuts average 2.0 elements, 0 column cuts (330 active)  in 0.331 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 48 row cuts average 297.0 elements, 0 column cuts (0 active)  in 0.439 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.415 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 694 row cuts average 38.6 elements, 0 column cuts (0 active)  in 0.285 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 11 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.253 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 12 row cuts average 27.7 elements, 0 column cuts (0 active)  in 0.357 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1.1354084e+08 best solution, best possible 86990180 (177.44 seconds)
Cbc0010I After 100 nodes, 50 on tree, 1.1354084e+08 best solution, best possible 87772003 (488.73 seconds)
Cbc0010I After 200 nodes, 104 on tree, 1.1354084e+08 best solution, best possible 87772003 (676.01 seconds)
Cbc0010I After 300 nodes, 156 on tree, 1.1354084e+08 best solution, best possible 87772003 (805.99 seconds)
Cbc0010I After 400 nodes, 210 on tree, 1.1354084e+08 best solution, best possible 87772003 (896.52 seconds)
Cbc0010I After 500 nodes, 264 on tree, 1.1354084e+08 best solution, best possible 87772003 (950.06 seconds)
Cbc0010I After 600 nodes, 313 on tree, 1.1354084e+08 best solution, best possible 87772003 (1024.36 seconds)
Cbc0010I After 700 nodes, 363 on tree, 1.1354084e+08 best solution, best possible 87772003 (1073.52 seconds)
Cbc0010I After 800 nodes, 413 on tree, 1.1354084e+08 best solution, best possible 87772003 (1138.29 seconds)
Cbc0010I After 900 nodes, 463 on tree, 1.1354084e+08 best solution, best possible 87772003 (1184.77 seconds)
Cbc0012I Integer solution of 1.1032869e+08 found by heuristic after 831462 iterations and 948 nodes (1224.64 seconds)
Cbc0010I After 1000 nodes, 515 on tree, 1.1032869e+08 best solution, best possible 87772003 (1250.44 seconds)
Cbc0010I After 1100 nodes, 563 on tree, 1.1032869e+08 best solution, best possible 87772003 (1308.82 seconds)
Cbc0010I After 1200 nodes, 614 on tree, 1.1032869e+08 best solution, best possible 87772003 (1384.69 seconds)
Cbc0010I After 1300 nodes, 663 on tree, 1.1032869e+08 best solution, best possible 87772003 (1438.98 seconds)
Cbc0010I After 1400 nodes, 713 on tree, 1.1032869e+08 best solution, best possible 87772003 (1510.60 seconds)
Cbc0010I After 1500 nodes, 764 on tree, 1.1032869e+08 best solution, best possible 87772003 (1556.52 seconds)
Cbc0010I After 1600 nodes, 812 on tree, 1.1032869e+08 best solution, best possible 87772003 (1634.55 seconds)
Cbc0010I After 1700 nodes, 860 on tree, 1.1032869e+08 best solution, best possible 87772003 (1674.63 seconds)
Cbc0010I After 1800 nodes, 909 on tree, 1.1032869e+08 best solution, best possible 87772003 (1723.98 seconds)
Cbc0010I After 1900 nodes, 961 on tree, 1.1032869e+08 best solution, best possible 87772003 (1764.69 seconds)
Cbc0010I After 2000 nodes, 1008 on tree, 1.1032869e+08 best solution, best possible 87772003 (1803.79 seconds)
Cbc0010I After 2100 nodes, 1061 on tree, 1.1032869e+08 best solution, best possible 87772003 (1843.75 seconds)
Cbc0010I After 2200 nodes, 1109 on tree, 1.1032869e+08 best solution, best possible 87772003 (1884.17 seconds)
Cbc0010I After 2300 nodes, 1160 on tree, 1.1032869e+08 best solution, best possible 87772003 (1923.42 seconds)
Cbc0010I After 2400 nodes, 1210 on tree, 1.1032869e+08 best solution, best possible 87772003 (1967.45 seconds)
Cbc0010I After 2500 nodes, 1260 on tree, 1.1032869e+08 best solution, best possible 87772003 (2009.69 seconds)
Cbc0010I After 2600 nodes, 1309 on tree, 1.1032869e+08 best solution, best possible 87772003 (2047.55 seconds)
Cbc0010I After 2700 nodes, 1358 on tree, 1.1032869e+08 best solution, best possible 87772003 (2089.72 seconds)
Cbc0010I After 2800 nodes, 1410 on tree, 1.1032869e+08 best solution, best possible 87772003 (2147.01 seconds)
Cbc0010I After 2900 nodes, 1458 on tree, 1.1032869e+08 best solution, best possible 87772003 (2193.19 seconds)
Cbc0010I After 3000 nodes, 1509 on tree, 1.1032869e+08 best solution, best possible 87772003 (2233.94 seconds)
Cbc0010I After 3100 nodes, 1559 on tree, 1.1032869e+08 best solution, best possible 87772003 (2274.39 seconds)
Cbc0010I After 3200 nodes, 1609 on tree, 1.1032869e+08 best solution, best possible 87772003 (2311.37 seconds)
Cbc0010I After 3300 nodes, 1659 on tree, 1.1032869e+08 best solution, best possible 87772003 (2349.31 seconds)
Cbc0010I After 3400 nodes, 1709 on tree, 1.1032869e+08 best solution, best possible 87772003 (2391.17 seconds)
Cbc0010I After 3500 nodes, 1758 on tree, 1.1032869e+08 best solution, best possible 87772003 (2425.89 seconds)
Cbc0010I After 3600 nodes, 1809 on tree, 1.1032869e+08 best solution, best possible 87772003 (2461.68 seconds)
Cbc0010I After 3700 nodes, 1861 on tree, 1.1032869e+08 best solution, best possible 87772003 (2506.05 seconds)
Cbc0010I After 3800 nodes, 1910 on tree, 1.1032869e+08 best solution, best possible 87772003 (2538.93 seconds)
Cbc0010I After 3900 nodes, 1960 on tree, 1.1032869e+08 best solution, best possible 87772003 (2577.42 seconds)
Cbc0010I After 4000 nodes, 2009 on tree, 1.1032869e+08 best solution, best possible 87772003 (2618.87 seconds)
Cbc0010I After 4100 nodes, 2058 on tree, 1.1032869e+08 best solution, best possible 87772003 (2664.28 seconds)
Cbc0010I After 4200 nodes, 2110 on tree, 1.1032869e+08 best solution, best possible 87772003 (2709.50 seconds)
Cbc0010I After 4300 nodes, 2159 on tree, 1.1032869e+08 best solution, best possible 87772003 (2749.42 seconds)
Cbc0010I After 4400 nodes, 2207 on tree, 1.1032869e+08 best solution, best possible 87772003 (2779.98 seconds)
Cbc0010I After 4500 nodes, 2259 on tree, 1.1032869e+08 best solution, best possible 87772003 (2818.55 seconds)
Cbc0010I After 4600 nodes, 2308 on tree, 1.1032869e+08 best solution, best possible 87772003 (2854.06 seconds)
Cbc0010I After 4700 nodes, 2359 on tree, 1.1032869e+08 best solution, best possible 87772003 (2882.53 seconds)
Cbc0010I After 4800 nodes, 2409 on tree, 1.1032869e+08 best solution, best possible 87772003 (2908.67 seconds)
Cbc0010I After 4900 nodes, 2461 on tree, 1.1032869e+08 best solution, best possible 87772003 (2935.34 seconds)
Cbc0010I After 5000 nodes, 2508 on tree, 1.1032869e+08 best solution, best possible 87772003 (2956.85 seconds)
Cbc0010I After 5100 nodes, 2558 on tree, 1.1032869e+08 best solution, best possible 87772003 (2980.96 seconds)
Cbc0012I Integer solution of 1.070353e+08 found by heuristic after 2895745 iterations and 5130 nodes (2989.19 seconds)
Cbc0010I After 5200 nodes, 2604 on tree, 1.070353e+08 best solution, best possible 87772003 (3065.81 seconds)
Cbc0010I After 5300 nodes, 2658 on tree, 1.070353e+08 best solution, best possible 87772003 (3152.61 seconds)
Cbc0010I After 5400 nodes, 2707 on tree, 1.070353e+08 best solution, best possible 87772003 (3218.59 seconds)
Cbc0010I After 5500 nodes, 2756 on tree, 1.070353e+08 best solution, best possible 87772003 (3282.16 seconds)
Cbc0010I After 5600 nodes, 2809 on tree, 1.070353e+08 best solution, best possible 87772003 (3331.72 seconds)
Cbc0010I After 5700 nodes, 2856 on tree, 1.070353e+08 best solution, best possible 87772003 (3389.40 seconds)
Cbc0010I After 5800 nodes, 2906 on tree, 1.070353e+08 best solution, best possible 87772003 (3445.25 seconds)
Cbc0010I After 5900 nodes, 2956 on tree, 1.070353e+08 best solution, best possible 87772003 (3502.00 seconds)
Cbc0010I After 6000 nodes, 3007 on tree, 1.070353e+08 best solution, best possible 87772003 (3554.26 seconds)
Cbc0030I Thread 0 used 538 times,  waiting to start 5.2862446,  4260 locks, 5.0677259 locked, 0.2840836 waiting for locks
Cbc0030I Thread 1 used 511 times,  waiting to start 9.8829472,  4049 locks, 4.9472783 locked, 0.19241714 waiting for locks
Cbc0030I Thread 2 used 471 times,  waiting to start 15.044723,  3742 locks, 4.8318524 locked, 0.22601819 waiting for locks
Cbc0030I Thread 3 used 516 times,  waiting to start 20.846219,  4091 locks, 5.1861196 locked, 0.35003018 waiting for locks
Cbc0030I Thread 4 used 484 times,  waiting to start 21.582957,  3847 locks, 4.6730418 locked, 0.2608254 waiting for locks
Cbc0030I Thread 5 used 511 times,  waiting to start 30.837832,  4074 locks, 4.8976145 locked, 0.22748184 waiting for locks
Cbc0030I Thread 6 used 504 times,  waiting to start 38.935631,  4006 locks, 4.766928 locked, 0.30327392 waiting for locks
Cbc0030I Thread 7 used 461 times,  waiting to start 48.164293,  3664 locks, 4.683712 locked, 0.1726768 waiting for locks
Cbc0030I Thread 8 used 480 times,  waiting to start 53.949996,  3836 locks, 4.5224528 locked, 0.21105242 waiting for locks
Cbc0030I Thread 9 used 567 times,  waiting to start 68.394231,  4495 locks, 5.0901976 locked, 0.30431676 waiting for locks
Cbc0030I Thread 10 used 521 times,  waiting to start 69.784117,  4131 locks, 5.0773139 locked, 0.23295045 waiting for locks
Cbc0030I Thread 11 used 488 times,  waiting to start 77.965745,  3888 locks, 4.8772385 locked, 0.34388638 waiting for locks
Cbc0030I Main thread 3410.833 waiting for threads,  12176 locks, 0.08520937 locked, 0.10480285 waiting for locks
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1.070353e+08 (best possible 87772003), took 3635609 iterations and 6041 nodes (3605.42 seconds)
Cbc0032I Strong branching done 4452 times (369127 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 87, 0 variables fixed on reduced cost
Cuts at root node changed objective from 7.21752e+07 to 8.69902e+07
Probing was tried 12290 times and created 11939 cuts of which 4290 were active after adding rounds of cuts (2271.915 seconds)
Gomory was tried 12290 times and created 624 cuts of which 0 were active after adding rounds of cuts (4900.046 seconds)
Knapsack was tried 429 times and created 0 cuts of which 0 were active after adding rounds of cuts (5.396 seconds)
Clique was tried 429 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.128 seconds)
MixedIntegerRounding2 was tried 12290 times and created 73537 cuts of which 0 were active after adding rounds of cuts (6410.409 seconds)
FlowCover was tried 429 times and created 143 cuts of which 0 were active after adding rounds of cuts (3.286 seconds)
TwoMirCuts was tried 429 times and created 156 cuts of which 0 were active after adding rounds of cuts (4.637 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Stopped on time limit

Objective value:                107035303.13678779
Lower bound:                    87772002.806
Gap:                            0.22
Enumerated nodes:               6041
Total iterations:               3635609
Time (CPU seconds):             39726.81
Time (Wallclock seconds):       3606.17

Option for printingOptions changed from normal to all
Total time (CPU seconds):       39726.95   (Wallclock seconds):       3606.34

