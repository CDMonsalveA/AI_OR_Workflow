Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/ed1f972983e244c380f509ac0677bb84-pulp.mps -sec 60 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/ed1f972983e244c380f509ac0677bb84-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 617 COLUMNS
At line 469716 RHS
At line 470329 BOUNDS
At line 564272 ENDATA
Problem MODEL has 612 rows, 93942 columns and 187578 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 60
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.27414 - 0.07 seconds
Cgl0004I processed model has 612 rows, 93942 columns (93942 integer (93942 of which binary)) and 187578 elements
Cbc0038I Initial state - 306 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (306) obj. 1.27414 iterations 0
Cbc0038I Pass   2: suminf.    0.91830 (281) obj. 33.0235 iterations 25
Cbc0038I Pass   3: suminf.    0.86275 (264) obj. 54.613 iterations 17
Cbc0038I Pass   4: suminf.    0.82680 (253) obj. 68.5828 iterations 11
Cbc0038I Pass   5: suminf.    0.74510 (228) obj. 100.332 iterations 25
Cbc0038I Pass   6: suminf.    0.68954 (211) obj. 121.922 iterations 17
Cbc0038I Pass   7: suminf.    0.65359 (200) obj. 135.891 iterations 11
Cbc0038I Pass   8: suminf.    0.60458 (185) obj. 154.941 iterations 15
Cbc0038I Pass   9: suminf.    0.53922 (165) obj. 180.34 iterations 20
Cbc0038I Pass  10: suminf.    0.45752 (140) obj. 212.09 iterations 25
Cbc0038I Pass  11: suminf.    0.42157 (129) obj. 226.06 iterations 11
Cbc0038I Pass  12: suminf.    0.35621 (109) obj. 251.459 iterations 20
Cbc0038I Pass  13: suminf.    0.29085 (89) obj. 276.859 iterations 20
Cbc0038I Pass  14: suminf.    0.21895 (67) obj. 304.798 iterations 22
Cbc0038I Pass  15: suminf.    0.14379 (44) obj. 334.007 iterations 23
Cbc0038I Pass  16: suminf.    0.08497 (26) obj. 356.867 iterations 18
Cbc0038I Pass  17: suminf.    0.03922 (12) obj. 374.647 iterations 14
Cbc0038I Solution found of 389.886
Cbc0038I Before mini branch and bound, 93636 integers at bound fixed and 0 continuous
Cbc0038I Full problem 612 rows 93942 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (2.35 seconds)
Cbc0038I Round again with cutoff of 351.025
Cbc0038I Pass  18: suminf.    1.00000 (306) obj. 1.27414 iterations 0
Cbc0038I Pass  19: suminf.    0.91176 (279) obj. 35.5634 iterations 27
Cbc0038I Pass  20: suminf.    0.86601 (265) obj. 53.3431 iterations 14
Cbc0038I Pass  21: suminf.    0.77124 (236) obj. 90.1723 iterations 29
Cbc0038I Pass  22: suminf.    0.73529 (225) obj. 104.142 iterations 11
Cbc0038I Pass  23: suminf.    0.67974 (208) obj. 125.732 iterations 17
Cbc0038I Pass  24: suminf.    0.59477 (182) obj. 158.751 iterations 26
Cbc0038I Pass  25: suminf.    0.55229 (169) obj. 175.261 iterations 13
Cbc0038I Pass  26: suminf.    0.51307 (157) obj. 190.5 iterations 12
Cbc0038I Pass  27: suminf.    0.43137 (132) obj. 222.25 iterations 25
Cbc0038I Pass  28: suminf.    0.34314 (105) obj. 256.539 iterations 27
Cbc0038I Pass  29: suminf.    0.25490 (78) obj. 290.828 iterations 27
Cbc0038I Pass  30: suminf.    0.18954 (58) obj. 316.228 iterations 20
Cbc0038I Pass  31: suminf.    0.13725 (42) obj. 336.547 iterations 16
Cbc0038I Pass  32: suminf.    0.49999 (31) obj. 351.025 iterations 19
Cbc0038I Pass  33: suminf.    0.10131 (31) obj. 350.517 iterations 1
Cbc0038I Pass  34: suminf.    0.49999 (31) obj. 351.025 iterations 12
Cbc0038I Pass  35: suminf.    0.10131 (31) obj. 350.517 iterations 1
Cbc0038I Pass  36: suminf.    0.49999 (31) obj. 351.025 iterations 26
Cbc0038I Pass  37: suminf.    0.10131 (31) obj. 350.517 iterations 1
Cbc0038I Pass  38: suminf.    0.49999 (31) obj. 351.025 iterations 1
Cbc0038I Pass  39: suminf.    0.52916 (25) obj. 351.025 iterations 157
Cbc0038I Pass  40: suminf.    0.08824 (24) obj. 350.463 iterations 123
Cbc0038I Pass  41: suminf.    0.52916 (24) obj. 351.025 iterations 106
Cbc0038I Pass  42: suminf.    0.08497 (24) obj. 350.459 iterations 93
Cbc0038I Pass  43: suminf.    0.52916 (24) obj. 351.025 iterations 106
Cbc0038I Pass  44: suminf.    0.08824 (24) obj. 350.463 iterations 91
Cbc0038I Pass  45: suminf.    1.05695 (28) obj. 351.025 iterations 346
Cbc0038I Pass  46: suminf.    0.15972 (27) obj. 351.025 iterations 201
Cbc0038I Pass  47: suminf.    0.15319 (25) obj. 351.025 iterations 102
Cbc0038I Rounding solution of 280.851 is better than previous of 389.886

Cbc0038I Before mini branch and bound, 93300 integers at bound fixed and 0 continuous
Cbc0038I Full problem 612 rows 93942 columns, reduced to 146 rows 292 columns
Cbc0038I Mini branch and bound improved solution from 280.851 to 251.913 (3.57 seconds)
Cbc0038I Round again with cutoff of 201.785
Cbc0038I Pass  47: suminf.    1.00000 (306) obj. 1.27414 iterations 0
Cbc0038I Pass  48: suminf.    0.95752 (293) obj. 17.7838 iterations 13
Cbc0038I Pass  49: suminf.    0.88562 (271) obj. 45.7232 iterations 22
Cbc0038I Pass  50: suminf.    0.79085 (242) obj. 82.5525 iterations 29
Cbc0038I Pass  51: suminf.    0.71569 (219) obj. 111.762 iterations 23
Cbc0038I Pass  52: suminf.    0.65686 (201) obj. 134.621 iterations 18
Cbc0038I Pass  53: suminf.    0.60458 (185) obj. 154.941 iterations 16
Cbc0038I Pass  54: suminf.    0.57190 (175) obj. 167.641 iterations 10
Cbc0038I Pass  55: suminf.    0.59756 (149) obj. 201.785 iterations 28
Cbc0038I Pass  56: suminf.    0.59756 (149) obj. 201.785 iterations 0
Cbc0038I Pass  57: suminf.    0.59756 (149) obj. 201.785 iterations 46
Cbc0038I Pass  58: suminf.    0.59756 (149) obj. 201.785 iterations 0
Cbc0038I Pass  59: suminf.    0.59756 (149) obj. 201.785 iterations 1
Cbc0038I Pass  60: suminf.    0.59756 (149) obj. 201.785 iterations 0
Cbc0038I Pass  61: suminf.    0.59756 (149) obj. 201.785 iterations 1
Cbc0038I Pass  62: suminf.    0.49145 (126) obj. 201.785 iterations 87
Cbc0038I Pass  63: suminf.    0.46732 (126) obj. 201.754 iterations 137
Cbc0038I Pass  64: suminf.    0.49145 (125) obj. 201.785 iterations 125
Cbc0038I Pass  65: suminf.    0.42157 (125) obj. 201.696 iterations 103
Cbc0038I Pass  66: suminf.    0.49145 (125) obj. 201.785 iterations 93
Cbc0038I Pass  67: suminf.    0.54772 (119) obj. 201.785 iterations 345
Cbc0038I Pass  68: suminf.    0.43464 (119) obj. 201.641 iterations 223
Cbc0038I Pass  69: suminf.    0.54772 (119) obj. 201.785 iterations 166
Cbc0038I Pass  70: suminf.    0.42157 (119) obj. 201.624 iterations 141
Cbc0038I Pass  71: suminf.    0.54772 (119) obj. 201.785 iterations 145
Cbc0038I Pass  72: suminf.    0.69744 (114) obj. 201.785 iterations 286
Cbc0038I Pass  73: suminf.    0.43137 (114) obj. 201.446 iterations 290
Cbc0038I Pass  74: suminf.    0.69744 (114) obj. 201.785 iterations 210
Cbc0038I Pass  75: suminf.    0.41503 (113) obj. 201.425 iterations 188
Cbc0038I Pass  76: suminf.    0.69744 (113) obj. 201.785 iterations 199
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 93417 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (4.77 seconds)
Cbc0038I After 4.77 seconds - Feasibility pump exiting with objective of 251.913 - took 3.11 seconds
Cbc0012I Integer solution of 251.91262 found by feasibility pump after 0 iterations and 0 nodes (4.78 seconds)
Cbc0031I 5463 added rows had average density of 5.18067
Cbc0013I At root node, 5463 cuts changed objective from 1.2741379 to 18.935042 in 18 passes
Cbc0014I Cut generator 0 (Probing) - 12835 row cuts average 2.1 elements, 0 column cuts (1401 active)  in 0.546 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 93 row cuts average 122.8 elements, 0 column cuts (0 active)  in 2.149 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 5902 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.604 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 3189 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.778 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0030I Thread 0 used 0 times,  waiting to start 0.99069715, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.91160417, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.83192587, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.75279379, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.67394018, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.59509993, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.51397491, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.42400408, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.3284719, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.23321605, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.1372261, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.042201996, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 8.1062317e-06 locked, 9.5367432e-07 waiting for locks
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 251.91262 (best possible 18.935042), took 41748 iterations and 0 nodes (63.36 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.27414 to 18.935
Probing was tried 234 times and created 166855 cuts of which 18213 were active after adding rounds of cuts (7.097 seconds)
Gomory was tried 234 times and created 1209 cuts of which 0 were active after adding rounds of cuts (27.938 seconds)
Knapsack was tried 234 times and created 76726 cuts of which 0 were active after adding rounds of cuts (7.846 seconds)
Clique was tried 234 times and created 0 cuts of which 0 were active after adding rounds of cuts (1.076 seconds)
MixedIntegerRounding2 was tried 234 times and created 41457 cuts of which 0 were active after adding rounds of cuts (10.108 seconds)
FlowCover was tried 234 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.409 seconds)
TwoMirCuts was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.050 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.033 seconds)

Result - Stopped on time limit

Objective value:                251.91261663
Lower bound:                    18.935
Gap:                            12.30
Enumerated nodes:               0
Total iterations:               41748
Time (CPU seconds):             62.93
Time (Wallclock seconds):       63.47

Option for printingOptions changed from normal to all
Total time (CPU seconds):       63.25   (Wallclock seconds):       63.82

