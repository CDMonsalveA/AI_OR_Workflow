Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/tesis/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/9be6d13e09d84711bfe174fd419e03d1-pulp.mps -sec 3600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/9be6d13e09d84711bfe174fd419e03d1-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 904 COLUMNS
At line 5168 RHS
At line 6068 BOUNDS
At line 6939 ENDATA
Problem MODEL has 899 rows, 870 columns and 3364 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.53752e+07 - 0.00 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 83 strengthened rows, 0 substitutions
Cgl0004I processed model has 899 rows, 870 columns (29 integer (29 of which binary)) and 3393 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.16892
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.62668e+07 iterations 291
Cbc0038I Solution found of 3.62668e+07
Cbc0038I Relaxing continuous gives 3.62668e+07
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 802 continuous
Cbc0038I Full problem 899 rows 870 columns, reduced to 43 rows 27 columns
Cbc0038I Mini branch and bound improved solution from 3.62668e+07 to 3.274e+07 (0.08 seconds)
Cbc0038I Freeing continuous variables gives a solution of 3.24172e+07
Cbc0038I Round again with cutoff of 3.23239e+07
Cbc0038I Pass   2: suminf.    0.46443 (2) obj. 3.23239e+07 iterations 336
Cbc0038I Pass   3: suminf.    0.42481 (1) obj. 3.23239e+07 iterations 142
Cbc0038I Pass   4: suminf.    0.42481 (1) obj. 3.23239e+07 iterations 0
Cbc0038I Pass   5: suminf.    0.69978 (3) obj. 3.23239e+07 iterations 462
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 3.23239e+07 iterations 185
Cbc0038I Solution found of 3.23239e+07
Cbc0038I Relaxing continuous gives 3.21468e+07
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 752 continuous
Cbc0038I Full problem 899 rows 870 columns, reduced to 102 rows 94 columns
Cbc0038I Mini branch and bound improved solution from 3.21468e+07 to 3.21468e+07 (0.15 seconds)
Cbc0038I Freeing continuous variables gives a solution of 3.19665e+07
Cbc0038I Round again with cutoff of 3.187e+07
Cbc0038I Pass   7: suminf.    0.53883 (2) obj. 3.187e+07 iterations 31
Cbc0038I Pass   8: suminf.    0.42481 (1) obj. 3.187e+07 iterations 103
Cbc0038I Pass   9: suminf.    0.42481 (1) obj. 3.187e+07 iterations 0
Cbc0038I Pass  10: suminf.    0.52666 (2) obj. 3.187e+07 iterations 420
Cbc0038I Pass  11: suminf.    0.20273 (1) obj. 3.187e+07 iterations 111
Cbc0038I Pass  12: suminf.    0.55471 (2) obj. 3.187e+07 iterations 134
Cbc0038I Pass  13: suminf.    1.67088 (7) obj. 3.187e+07 iterations 166
Cbc0038I Pass  14: suminf.    0.53883 (2) obj. 3.187e+07 iterations 352
Cbc0038I Pass  15: suminf.    0.42481 (1) obj. 3.187e+07 iterations 117
Cbc0038I Pass  16: suminf.    0.42481 (1) obj. 3.187e+07 iterations 0
Cbc0038I Pass  17: suminf.    0.03719 (3) obj. 3.187e+07 iterations 428
Cbc0038I Pass  18: suminf.    0.03189 (2) obj. 3.187e+07 iterations 79
Cbc0038I Pass  19: suminf.    0.20273 (1) obj. 3.187e+07 iterations 118
Cbc0038I Pass  20: suminf.    0.20273 (1) obj. 3.187e+07 iterations 0
Cbc0038I Pass  21: suminf.    0.55471 (2) obj. 3.187e+07 iterations 119
Cbc0038I Pass  22: suminf.    1.65695 (5) obj. 3.187e+07 iterations 125
Cbc0038I Pass  23: suminf.    0.53883 (2) obj. 3.187e+07 iterations 308
Cbc0038I Pass  24: suminf.    0.42481 (1) obj. 3.187e+07 iterations 115
Cbc0038I Pass  25: suminf.    0.42481 (1) obj. 3.187e+07 iterations 0
Cbc0038I Pass  26: suminf.    0.88289 (4) obj. 3.187e+07 iterations 457
Cbc0038I Pass  27: suminf.    0.43331 (2) obj. 3.187e+07 iterations 22
Cbc0038I Pass  28: suminf.    0.52838 (2) obj. 3.187e+07 iterations 201
Cbc0038I Pass  29: suminf.    0.42481 (1) obj. 3.187e+07 iterations 76
Cbc0038I Pass  30: suminf.    0.42481 (1) obj. 3.187e+07 iterations 0
Cbc0038I Pass  31: suminf.    0.41562 (2) obj. 3.187e+07 iterations 390
Cbc0038I Pass  32: suminf.    0.41562 (2) obj. 3.187e+07 iterations 4
Cbc0038I Pass  33: suminf.    0.66749 (3) obj. 3.187e+07 iterations 52
Cbc0038I Pass  34: suminf.    0.20273 (1) obj. 3.187e+07 iterations 190
Cbc0038I Pass  35: suminf.    0.24422 (2) obj. 3.187e+07 iterations 229
Cbc0038I Pass  36: suminf.    1.93038 (5) obj. 3.187e+07 iterations 228
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 659 continuous
Cbc0038I Full problem 899 rows 870 columns, reduced to 225 rows 196 columns
Cbc0038I Mini branch and bound did not improve solution (0.38 seconds)
Cbc0038I After 0.38 seconds - Feasibility pump exiting with objective of 3.19665e+07 - took 0.32 seconds
Cbc0012I Integer solution of 31966480 found by feasibility pump after 0 iterations and 0 nodes (0.38 seconds)
Cbc0038I Full problem 899 rows 870 columns, reduced to 181 rows 208 columns
Cbc0012I Integer solution of 31883936 found by DiveCoefficient after 1574 iterations and 0 nodes (0.87 seconds)
Cbc0031I 5 added rows had average density of 869.8
Cbc0013I At root node, 5 cuts changed objective from 31484099 to 31618055 in 45 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 194 row cuts average 862.6 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 31883936 best solution, best possible 31618055 (1.12 seconds)
Cbc0030I Thread 0 used 11 times,  waiting to start 0.19795513, 0.396597 cpu time, 52 locks, 0.00021958351 locked, 8.5830688e-06 waiting for locks
Cbc0030I Thread 1 used 4 times,  waiting to start 0.26761007, 0.335492 cpu time, 20 locks, 5.8412552e-05 locked, 1.2397766e-05 waiting for locks
Cbc0030I Thread 2 used 4 times,  waiting to start 0.26798892, 0.307369 cpu time, 20 locks, 6.1273575e-05 locked, 5.4836273e-06 waiting for locks
Cbc0030I Thread 3 used 1 times,  waiting to start 0.35425377, 0.032499 cpu time, 4 locks, 1.8358231e-05 locked, 0 waiting for locks
Cbc0030I Thread 4 used 1 times,  waiting to start 0.33365178, 0.056878 cpu time, 5 locks, 1.4066696e-05 locked, 1.9073486e-06 waiting for locks
Cbc0030I Thread 5 used 1 times,  waiting to start 0.27189302, 0.142252 cpu time, 5 locks, 1.9788742e-05 locked, 1.1920929e-06 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.31598806, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.30127406, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.28821206, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.27532387, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.26272821, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.24882603, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0.18459773 waiting for threads,  51 locks, 3.3855438e-05 locked, 5.1021576e-05 waiting for locks
Cbc0001I Search completed - best objective 31883935.78663788, took 2965 iterations and 22 nodes (1.44 seconds)
Cbc0032I Strong branching done 390 times (20112 iterations), fathomed 8 nodes and fixed 4 variables
Cbc0035I Maximum depth 5, 17 variables fixed on reduced cost
Cuts at root node changed objective from 3.14841e+07 to 3.16181e+07
Probing was tried 585 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.166 seconds)
Gomory was tried 585 times and created 2522 cuts of which 0 were active after adding rounds of cuts (0.716 seconds)
Knapsack was tried 585 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.310 seconds)
Clique was tried 585 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
MixedIntegerRounding2 was tried 585 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.286 seconds)
FlowCover was tried 585 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.959 seconds)
TwoMirCuts was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                31883935.78663788
Enumerated nodes:               22
Total iterations:               2965
Time (CPU seconds):             1.64
Time (Wallclock seconds):       1.45

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.64   (Wallclock seconds):       1.46

