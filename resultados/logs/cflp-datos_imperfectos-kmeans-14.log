Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/88779432f90449f0bc0b7d75cc69c360-pulp.mps -sec 3600 -timeMode elapsed -branch -printingOptions all -solution /tmp/88779432f90449f0bc0b7d75cc69c360-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 33 COLUMNS
At line 664 RHS
At line 693 BOUNDS
At line 708 ENDATA
Problem MODEL has 28 rows, 210 columns and 406 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
Option for timeMode changed from cpu to elapsed
Continuous objective value is 9.03405e+06 - 0.00 seconds
Cgl0004I processed model has 28 rows, 210 columns (14 integer (14 of which binary)) and 406 elements
Cbc0038I Initial state - 14 integers unsatisfied sum - 2.18327
Cbc0038I Pass   1: suminf.    0.00550 (1) obj. 3.22892e+08 iterations 13
Cbc0038I Solution found of 3.22935e+08
Cbc0038I Relaxing continuous gives 3.22935e+08
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 169 continuous
Cbc0038I Full problem 28 rows 210 columns, reduced to 27 rows 39 columns
Cbc0038I Mini branch and bound improved solution from 3.22935e+08 to 4.7082e+07 (0.00 seconds)
Cbc0038I Round again with cutoff of 4.32772e+07
Cbc0038I Pass   2: suminf.    1.70248 (10) obj. 4.32772e+07 iterations 10
Cbc0038I Pass   3: suminf.    1.31594 (10) obj. 4.32772e+07 iterations 2
Cbc0038I Pass   4: suminf.    0.04617 (1) obj. 4.32772e+07 iterations 12
Cbc0038I Pass   5: suminf.    0.09803 (2) obj. 4.32772e+07 iterations 5
Cbc0038I Pass   6: suminf.    0.44535 (1) obj. 4.32772e+07 iterations 2
Cbc0038I Pass   7: suminf.    0.37283 (1) obj. 4.32772e+07 iterations 1
Cbc0038I Pass   8: suminf.    0.20834 (2) obj. 4.32772e+07 iterations 12
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. 4.32772e+07 iterations 5
Cbc0038I Solution found of 4.32772e+07
Cbc0038I Relaxing continuous gives 4.26734e+07
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 169 continuous
Cbc0038I Full problem 28 rows 210 columns, reduced to 22 rows 32 columns
Cbc0038I Mini branch and bound improved solution from 4.26734e+07 to 4.13935e+07 (0.01 seconds)
Cbc0038I Round again with cutoff of 3.49216e+07
Cbc0038I Pass  10: suminf.    1.81078 (10) obj. 3.49216e+07 iterations 0
Cbc0038I Pass  11: suminf.    1.40082 (10) obj. 3.49216e+07 iterations 3
Cbc0038I Pass  12: suminf.    1.00579 (5) obj. 3.49216e+07 iterations 15
Cbc0038I Pass  13: suminf.    1.00579 (5) obj. 3.49216e+07 iterations 0
Cbc0038I Pass  14: suminf.    1.50404 (5) obj. 3.49216e+07 iterations 6
Cbc0038I Pass  15: suminf.    0.87707 (4) obj. 3.49216e+07 iterations 2
Cbc0038I Pass  16: suminf.    1.50404 (5) obj. 3.49216e+07 iterations 2
Cbc0038I Pass  17: suminf.    0.66491 (3) obj. 3.49216e+07 iterations 7
Cbc0038I Pass  18: suminf.    0.85267 (4) obj. 3.49216e+07 iterations 6
Cbc0038I Pass  19: suminf.    0.85267 (4) obj. 3.49216e+07 iterations 0
Cbc0038I Pass  20: suminf.    0.65153 (3) obj. 3.49216e+07 iterations 7
Cbc0038I Pass  21: suminf.    0.72457 (4) obj. 3.49216e+07 iterations 7
Cbc0038I Pass  22: suminf.    1.50404 (5) obj. 3.49216e+07 iterations 6
Cbc0038I Pass  23: suminf.    0.87707 (4) obj. 3.49216e+07 iterations 2
Cbc0038I Pass  24: suminf.    1.50404 (5) obj. 3.49216e+07 iterations 2
Cbc0038I Pass  25: suminf.    0.27631 (3) obj. 3.49216e+07 iterations 15
Cbc0038I Pass  26: suminf.    1.11332 (5) obj. 3.49216e+07 iterations 9
Cbc0038I Pass  27: suminf.    1.11332 (5) obj. 3.49216e+07 iterations 0
Cbc0038I Pass  28: suminf.    1.50404 (5) obj. 3.49216e+07 iterations 4
Cbc0038I Pass  29: suminf.    0.87707 (4) obj. 3.49216e+07 iterations 2
Cbc0038I Pass  30: suminf.    1.50404 (5) obj. 3.49216e+07 iterations 2
Cbc0038I Pass  31: suminf.    0.49735 (5) obj. 3.49216e+07 iterations 13
Cbc0038I Pass  32: suminf.    1.50404 (5) obj. 3.49216e+07 iterations 10
Cbc0038I Pass  33: suminf.    0.93127 (4) obj. 3.49216e+07 iterations 2
Cbc0038I Pass  34: suminf.    0.83009 (4) obj. 3.49216e+07 iterations 6
Cbc0038I Pass  35: suminf.    0.86611 (4) obj. 3.49216e+07 iterations 7
Cbc0038I Pass  36: suminf.    0.86611 (4) obj. 3.49216e+07 iterations 0
Cbc0038I Pass  37: suminf.    1.50404 (5) obj. 3.49216e+07 iterations 5
Cbc0038I Pass  38: suminf.    0.87707 (4) obj. 3.49216e+07 iterations 2
Cbc0038I Pass  39: suminf.    0.67071 (3) obj. 3.49216e+07 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 167 continuous
Cbc0038I Full problem 28 rows 210 columns, reduced to 21 rows 35 columns
Cbc0038I Mini branch and bound improved solution from 4.13935e+07 to 4.07347e+07 (0.02 seconds)
Cbc0038I Round again with cutoff of 2.71554e+07
Cbc0038I Pass  39: suminf.    1.91154 (10) obj. 2.71554e+07 iterations 1
Cbc0038I Pass  40: suminf.    1.47971 (10) obj. 2.71554e+07 iterations 3
Cbc0038I Pass  41: suminf.    1.58886 (8) obj. 2.71554e+07 iterations 13
Cbc0038I Pass  42: suminf.    1.58886 (8) obj. 2.71554e+07 iterations 0
Cbc0038I Pass  43: suminf.    1.55862 (8) obj. 2.71554e+07 iterations 4
Cbc0038I Pass  44: suminf.    1.55862 (8) obj. 2.71554e+07 iterations 0
Cbc0038I Pass  45: suminf.    1.70666 (8) obj. 2.71554e+07 iterations 2
Cbc0038I Pass  46: suminf.    1.70666 (8) obj. 2.71554e+07 iterations 0
Cbc0038I Pass  47: suminf.    1.55862 (8) obj. 2.71554e+07 iterations 1
Cbc0038I Pass  48: suminf.    1.65270 (8) obj. 2.71554e+07 iterations 2
Cbc0038I Pass  49: suminf.    1.65270 (8) obj. 2.71554e+07 iterations 0
Cbc0038I Pass  50: suminf.    1.65270 (8) obj. 2.71554e+07 iterations 0
Cbc0038I Pass  51: suminf.    1.27821 (8) obj. 2.71554e+07 iterations 8
Cbc0038I Pass  52: suminf.    1.55862 (8) obj. 2.71554e+07 iterations 9
Cbc0038I Pass  53: suminf.    1.55862 (8) obj. 2.71554e+07 iterations 0
Cbc0038I Pass  54: suminf.    1.70666 (8) obj. 2.71554e+07 iterations 2
Cbc0038I Pass  55: suminf.    1.70666 (8) obj. 2.71554e+07 iterations 0
Cbc0038I Pass  56: suminf.    1.55862 (8) obj. 2.71554e+07 iterations 1
Cbc0038I Pass  57: suminf.    1.70666 (8) obj. 2.71554e+07 iterations 1
Cbc0038I Pass  58: suminf.    0.69244 (7) obj. 2.71554e+07 iterations 11
Cbc0038I Pass  59: suminf.    1.68562 (8) obj. 2.71554e+07 iterations 6
Cbc0038I Pass  60: suminf.    1.68562 (8) obj. 2.71554e+07 iterations 0
Cbc0038I Pass  61: suminf.    1.28024 (7) obj. 2.71554e+07 iterations 3
Cbc0038I Pass  62: suminf.    1.55862 (8) obj. 2.71554e+07 iterations 5
Cbc0038I Pass  63: suminf.    1.55862 (8) obj. 2.71554e+07 iterations 0
Cbc0038I Pass  64: suminf.    1.70666 (8) obj. 2.71554e+07 iterations 2
Cbc0038I Pass  65: suminf.    1.70666 (8) obj. 2.71554e+07 iterations 0
Cbc0038I Pass  66: suminf.    1.55862 (8) obj. 2.71554e+07 iterations 1
Cbc0038I Pass  67: suminf.    1.76333 (8) obj. 2.71554e+07 iterations 5
Cbc0038I Pass  68: suminf.    1.76333 (8) obj. 2.71554e+07 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 171 continuous
Cbc0038I Full problem 28 rows 210 columns, reduced to 19 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 4.07347e+07 - took 0.02 seconds
Cbc0012I Integer solution of 40734747 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of 39063040 found by DiveCoefficient after 23 iterations and 0 nodes (0.03 seconds)
Cbc0031I 19 added rows had average density of 21.368421
Cbc0013I At root node, 19 cuts changed objective from 9034054.9 to 39063040 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 19 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 21 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective 39063040.07695711, took 23 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 9.03405e+06 to 3.9063e+07
Probing was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Gomory was tried 4 times and created 19 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 4 times and created 21 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                39063040.07695711
Enumerated nodes:               0
Total iterations:               23
Time (CPU seconds):             0.03
Time (Wallclock seconds):       0.03

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

