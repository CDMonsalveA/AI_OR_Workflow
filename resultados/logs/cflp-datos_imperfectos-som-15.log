Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/31ad7012bf794bbcaf58784c94d5cab2-pulp.mps -sec 3600 -timeMode elapsed -branch -printingOptions all -solution /tmp/31ad7012bf794bbcaf58784c94d5cab2-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 67 COLUMNS
At line 3044 RHS
At line 3107 BOUNDS
At line 3139 ENDATA
Problem MODEL has 62 rows, 992 columns and 1953 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
Option for timeMode changed from cpu to elapsed
Continuous objective value is 6.13664e+06 - 0.00 seconds
Cgl0004I processed model has 62 rows, 992 columns (31 integer (31 of which binary)) and 1953 elements
Cbc0038I Initial state - 31 integers unsatisfied sum - 1.97243
Cbc0038I Pass   1: suminf.    0.02757 (1) obj. 2.13584e+09 iterations 30
Cbc0038I Solution found of 2.13593e+09
Cbc0038I Relaxing continuous gives 1.50539e+09
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 900 continuous
Cbc0038I Full problem 62 rows 992 columns, reduced to 60 rows 88 columns
Cbc0038I Mini branch and bound improved solution from 1.50539e+09 to 8.67688e+07 (0.01 seconds)
Cbc0038I Freeing continuous variables gives a solution of 8.03928e+07
Cbc0038I Round again with cutoff of 7.29672e+07
Cbc0038I Pass   2: suminf.    1.93739 (12) obj. 7.29672e+07 iterations 49
Cbc0038I Pass   3: suminf.    1.28390 (23) obj. 7.29672e+07 iterations 20
Cbc0038I Pass   4: suminf.    0.49434 (6) obj. 7.29672e+07 iterations 41
Cbc0038I Pass   5: suminf.    0.45305 (8) obj. 7.29672e+07 iterations 20
Cbc0038I Pass   6: suminf.    0.41702 (7) obj. 7.29672e+07 iterations 2
Cbc0038I Pass   7: suminf.    0.57322 (9) obj. 7.29672e+07 iterations 9
Cbc0038I Pass   8: suminf.    0.57322 (9) obj. 7.29672e+07 iterations 0
Cbc0038I Pass   9: suminf.    0.61881 (9) obj. 7.29672e+07 iterations 2
Cbc0038I Pass  10: suminf.    0.61881 (9) obj. 7.29672e+07 iterations 0
Cbc0038I Pass  11: suminf.    0.91273 (5) obj. 7.29672e+07 iterations 10
Cbc0038I Pass  12: suminf.    0.66243 (9) obj. 7.29672e+07 iterations 12
Cbc0038I Pass  13: suminf.    0.66243 (9) obj. 7.29672e+07 iterations 0
Cbc0038I Pass  14: suminf.    0.61881 (9) obj. 7.29672e+07 iterations 6
Cbc0038I Pass  15: suminf.    0.42504 (6) obj. 7.29672e+07 iterations 12
Cbc0038I Pass  16: suminf.    0.54573 (9) obj. 7.29672e+07 iterations 10
Cbc0038I Pass  17: suminf.    0.54573 (9) obj. 7.29672e+07 iterations 0
Cbc0038I Pass  18: suminf.    0.57322 (9) obj. 7.29672e+07 iterations 8
Cbc0038I Pass  19: suminf.    0.57322 (9) obj. 7.29672e+07 iterations 0
Cbc0038I Pass  20: suminf.    0.61881 (9) obj. 7.29672e+07 iterations 2
Cbc0038I Pass  21: suminf.    0.61881 (9) obj. 7.29672e+07 iterations 0
Cbc0038I Pass  22: suminf.    0.57322 (9) obj. 7.29672e+07 iterations 2
Cbc0038I Pass  23: suminf.    0.31581 (6) obj. 7.29672e+07 iterations 13
Cbc0038I Pass  24: suminf.    0.50016 (9) obj. 7.29672e+07 iterations 22
Cbc0038I Pass  25: suminf.    0.50016 (9) obj. 7.29672e+07 iterations 0
Cbc0038I Pass  26: suminf.    0.61881 (9) obj. 7.29672e+07 iterations 6
Cbc0038I Pass  27: suminf.    0.61881 (9) obj. 7.29672e+07 iterations 0
Cbc0038I Pass  28: suminf.    0.57322 (9) obj. 7.29672e+07 iterations 2
Cbc0038I Pass  29: suminf.    0.57322 (9) obj. 7.29672e+07 iterations 0
Cbc0038I Pass  30: suminf.    0.61881 (9) obj. 7.29672e+07 iterations 2
Cbc0038I Pass  31: suminf.    0.99512 (9) obj. 7.29672e+07 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 890 continuous
Cbc0038I Full problem 62 rows 992 columns, reduced to 54 rows 94 columns
Cbc0038I Mini branch and bound improved solution from 8.03928e+07 to 6.80212e+07 (0.06 seconds)
Cbc0038I Freeing continuous variables gives a solution of 6.77882e+07
Cbc0038I Round again with cutoff of 5.54579e+07
Cbc0038I Pass  31: suminf.    1.97243 (16) obj. 5.54579e+07 iterations 7
Cbc0038I Pass  32: suminf.    0.47863 (10) obj. 5.54579e+07 iterations 28
Cbc0038I Pass  33: suminf.    0.82523 (14) obj. 5.54579e+07 iterations 31
Cbc0038I Pass  34: suminf.    0.59516 (12) obj. 5.54579e+07 iterations 3
Cbc0038I Pass  35: suminf.    0.82523 (14) obj. 5.54579e+07 iterations 14
Cbc0038I Pass  36: suminf.    0.75776 (14) obj. 5.54579e+07 iterations 1
Cbc0038I Pass  37: suminf.    1.65845 (15) obj. 5.54579e+07 iterations 6
Cbc0038I Pass  38: suminf.    1.65845 (15) obj. 5.54579e+07 iterations 0
Cbc0038I Pass  39: suminf.    1.73752 (15) obj. 5.54579e+07 iterations 4
Cbc0038I Pass  40: suminf.    1.73752 (15) obj. 5.54579e+07 iterations 0
Cbc0038I Pass  41: suminf.    1.65845 (15) obj. 5.54579e+07 iterations 1
Cbc0038I Pass  42: suminf.    0.27688 (14) obj. 5.54579e+07 iterations 7
Cbc0038I Pass  43: suminf.    1.65845 (15) obj. 5.54579e+07 iterations 7
Cbc0038I Pass  44: suminf.    1.65845 (15) obj. 5.54579e+07 iterations 0
Cbc0038I Pass  45: suminf.    1.73752 (15) obj. 5.54579e+07 iterations 4
Cbc0038I Pass  46: suminf.    1.73752 (15) obj. 5.54579e+07 iterations 0
Cbc0038I Pass  47: suminf.    1.65845 (15) obj. 5.54579e+07 iterations 1
Cbc0038I Pass  48: suminf.    0.75568 (13) obj. 5.54579e+07 iterations 6
Cbc0038I Pass  49: suminf.    1.65845 (15) obj. 5.54579e+07 iterations 7
Cbc0038I Pass  50: suminf.    1.65845 (15) obj. 5.54579e+07 iterations 0
Cbc0038I Pass  51: suminf.    0.82523 (14) obj. 5.54579e+07 iterations 2
Cbc0038I Pass  52: suminf.    0.79495 (14) obj. 5.54579e+07 iterations 1
Cbc0038I Pass  53: suminf.    1.65845 (15) obj. 5.54579e+07 iterations 3
Cbc0038I Pass  54: suminf.    0.59023 (10) obj. 5.54579e+07 iterations 15
Cbc0038I Pass  55: suminf.    0.82523 (14) obj. 5.54579e+07 iterations 12
Cbc0038I Pass  56: suminf.    0.65972 (14) obj. 5.54579e+07 iterations 1
Cbc0038I Pass  57: suminf.    1.65845 (15) obj. 5.54579e+07 iterations 9
Cbc0038I Pass  58: suminf.    1.65845 (15) obj. 5.54579e+07 iterations 0
Cbc0038I Pass  59: suminf.    1.73752 (15) obj. 5.54579e+07 iterations 4
Cbc0038I Pass  60: suminf.    1.73752 (15) obj. 5.54579e+07 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 901 continuous
Cbc0038I Full problem 62 rows 992 columns, reduced to 44 rows 71 columns
Cbc0038I Mini branch and bound improved solution from 6.77882e+07 to 6.64235e+07 (0.11 seconds)
Cbc0038I Round again with cutoff of 4.06615e+07
Cbc0038I Pass  60: suminf.    1.97243 (19) obj. 4.06615e+07 iterations 3
Cbc0038I Pass  61: suminf.    1.06939 (19) obj. 4.06615e+07 iterations 38
Cbc0038I Pass  62: suminf.    0.56868 (19) obj. 4.06615e+07 iterations 1
Cbc0038I Pass  63: suminf.    2.06939 (20) obj. 4.06615e+07 iterations 18
Cbc0038I Pass  64: suminf.    1.49612 (20) obj. 4.06615e+07 iterations 1
Cbc0038I Pass  65: suminf.    2.06939 (20) obj. 4.06615e+07 iterations 8
Cbc0038I Pass  66: suminf.    1.69631 (20) obj. 4.06615e+07 iterations 2
Cbc0038I Pass  67: suminf.    1.69631 (20) obj. 4.06615e+07 iterations 0
Cbc0038I Pass  68: suminf.    2.06939 (20) obj. 4.06615e+07 iterations 2
Cbc0038I Pass  69: suminf.    1.29699 (18) obj. 4.06615e+07 iterations 9
Cbc0038I Pass  70: suminf.    2.06939 (20) obj. 4.06615e+07 iterations 10
Cbc0038I Pass  71: suminf.    1.49379 (20) obj. 4.06615e+07 iterations 1
Cbc0038I Pass  72: suminf.    2.06939 (20) obj. 4.06615e+07 iterations 12
Cbc0038I Pass  73: suminf.    1.49612 (20) obj. 4.06615e+07 iterations 1
Cbc0038I Pass  74: suminf.    2.06939 (20) obj. 4.06615e+07 iterations 4
Cbc0038I Pass  75: suminf.    1.72281 (20) obj. 4.06615e+07 iterations 7
Cbc0038I Pass  76: suminf.    1.72281 (20) obj. 4.06615e+07 iterations 0
Cbc0038I Pass  77: suminf.    1.60973 (20) obj. 4.06615e+07 iterations 2
Cbc0038I Pass  78: suminf.    1.60973 (20) obj. 4.06615e+07 iterations 0
Cbc0038I Pass  79: suminf.    2.06939 (20) obj. 4.06615e+07 iterations 5
Cbc0038I Pass  80: suminf.    1.49612 (20) obj. 4.06615e+07 iterations 1
Cbc0038I Pass  81: suminf.    2.06939 (20) obj. 4.06615e+07 iterations 2
Cbc0038I Pass  82: suminf.    1.06939 (19) obj. 4.06615e+07 iterations 4
Cbc0038I Pass  83: suminf.    0.83075 (17) obj. 4.06615e+07 iterations 3
Cbc0038I Pass  84: suminf.    2.06939 (20) obj. 4.06615e+07 iterations 7
Cbc0038I Pass  85: suminf.    1.57095 (20) obj. 4.06615e+07 iterations 7
Cbc0038I Pass  86: suminf.    1.57095 (20) obj. 4.06615e+07 iterations 0
Cbc0038I Pass  87: suminf.    2.06939 (20) obj. 4.06615e+07 iterations 4
Cbc0038I Pass  88: suminf.    1.49612 (20) obj. 4.06615e+07 iterations 1
Cbc0038I Pass  89: suminf.    2.06939 (20) obj. 4.06615e+07 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 910 continuous
Cbc0038I Full problem 62 rows 992 columns, reduced to 33 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of 6.64235e+07 - took 0.11 seconds
Cbc0012I Integer solution of 66423485 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0031I 40 added rows had average density of 62.125
Cbc0013I At root node, 40 cuts changed objective from 6136643.7 to 57617072 in 51 passes
Cbc0014I Cut generator 0 (Probing) - 10 row cuts average 32.2 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 134 row cuts average 105.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 7 row cuts average 123.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 60 row cuts average 71.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 66423485 best solution, best possible 57617072 (0.26 seconds)
Cbc0012I Integer solution of 66056469 found by DiveCoefficient after 535 iterations and 3 nodes (0.29 seconds)
Cbc0012I Integer solution of 65646184 found by DiveCoefficient after 537 iterations and 4 nodes (0.30 seconds)
Cbc0012I Integer solution of 64321125 found by DiveCoefficient after 538 iterations and 5 nodes (0.31 seconds)
Cbc0012I Integer solution of 62413443 found by DiveCoefficient after 550 iterations and 7 nodes (0.32 seconds)
Cbc0012I Integer solution of 62089383 found by DiveCoefficient after 553 iterations and 8 nodes (0.32 seconds)
Cbc0016I Integer solution of 61645285 found by strong branching after 591 iterations and 12 nodes (0.33 seconds)
Cbc0016I Integer solution of 59675156 found by strong branching after 592 iterations and 12 nodes (0.33 seconds)
Cbc0001I Search completed - best objective 59675155.65718611, took 696 iterations and 24 nodes (0.36 seconds)
Cbc0032I Strong branching done 208 times (1418 iterations), fathomed 3 nodes and fixed 0 variables
Cbc0035I Maximum depth 11, 0 variables fixed on reduced cost
Cuts at root node changed objective from 6.13664e+06 to 5.76171e+07
Probing was tried 51 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
Gomory was tried 71 times and created 134 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Knapsack was tried 51 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Clique was tried 51 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 51 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
FlowCover was tried 51 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.027 seconds)
TwoMirCuts was tried 71 times and created 74 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                59675155.65718611
Enumerated nodes:               24
Total iterations:               696
Time (CPU seconds):             0.34
Time (Wallclock seconds):       0.36

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.34   (Wallclock seconds):       0.36

