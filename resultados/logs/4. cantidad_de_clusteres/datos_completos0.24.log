Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/2c14a07ae2d84223b94977a9dd995d27-pulp.mps -sec 60 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/2c14a07ae2d84223b94977a9dd995d27-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 213 COLUMNS
At line 54606 RHS
At line 54815 BOUNDS
At line 65736 ENDATA
Problem MODEL has 208 rows, 10920 columns and 21736 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 60
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.23966 - 0.01 seconds
Cgl0004I processed model has 208 rows, 10920 columns (10920 integer (10920 of which binary)) and 21736 elements
Cbc0038I Initial state - 104 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (104) obj. 1.23966 iterations 0
Cbc0038I Pass   2: suminf.    0.73077 (76) obj. 35.6162 iterations 28
Cbc0038I Pass   3: suminf.    0.51923 (54) obj. 62.6264 iterations 22
Cbc0038I Pass   4: suminf.    0.24038 (25) obj. 98.2308 iterations 29
Cbc0038I Pass   5: suminf.    0.08654 (9) obj. 117.875 iterations 16
Cbc0038I Solution found of 128.924
Cbc0038I Before mini branch and bound, 10816 integers at bound fixed and 0 continuous
Cbc0038I Full problem 208 rows 10920 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of 116.156
Cbc0038I Pass   6: suminf.    1.00000 (104) obj. 1.23966 iterations 0
Cbc0038I Pass   7: suminf.    0.75962 (79) obj. 31.933 iterations 25
Cbc0038I Pass   8: suminf.    0.66346 (69) obj. 44.2104 iterations 10
Cbc0038I Pass   9: suminf.    0.47115 (49) obj. 68.7651 iterations 20
Cbc0038I Pass  10: suminf.    0.21154 (22) obj. 101.914 iterations 27
Cbc0038I Pass  11: suminf.    0.49231 (11) obj. 116.156 iterations 23
Cbc0038I Pass  12: suminf.    0.49231 (11) obj. 116.156 iterations 0
Cbc0038I Pass  13: suminf.    0.49231 (11) obj. 116.156 iterations 6
Cbc0038I Pass  14: suminf.    0.49231 (11) obj. 116.156 iterations 0
Cbc0038I Pass  15: suminf.    0.49231 (11) obj. 116.156 iterations 1
Cbc0038I Pass  16: suminf.    0.49231 (11) obj. 116.156 iterations 0
Cbc0038I Pass  17: suminf.    0.49231 (11) obj. 116.156 iterations 1
Cbc0038I Pass  18: suminf.    0.67942 (14) obj. 116.156 iterations 43
Cbc0038I Pass  19: suminf.    0.22144 (13) obj. 116.156 iterations 14
Cbc0038I Pass  20: suminf.    0.18298 (11) obj. 116.156 iterations 10
Cbc0038I Pass  21: suminf.    0.18298 (11) obj. 116.156 iterations 1
Cbc0038I Pass  22: suminf.    0.18298 (11) obj. 116.156 iterations 11
Cbc0038I Pass  23: suminf.    0.18298 (11) obj. 116.156 iterations 1
Cbc0038I Pass  24: suminf.    0.18298 (11) obj. 116.156 iterations 9
Cbc0038I Pass  25: suminf.    1.03678 (11) obj. 116.156 iterations 62
Cbc0038I Pass  26: suminf.    0.26067 (10) obj. 116.156 iterations 40
Cbc0038I Pass  27: suminf.    0.26067 (10) obj. 116.156 iterations 29
Cbc0038I Pass  28: suminf.    0.26067 (10) obj. 116.156 iterations 0
Cbc0038I Pass  29: suminf.    0.26067 (10) obj. 116.156 iterations 24
Cbc0038I Pass  30: suminf.    0.26067 (10) obj. 116.156 iterations 0
Cbc0038I Pass  31: suminf.    0.44731 (14) obj. 116.156 iterations 64
Cbc0038I Pass  32: suminf.    0.16657 (13) obj. 116.156 iterations 54
Cbc0038I Pass  33: suminf.    0.14734 (13) obj. 116.156 iterations 23
Cbc0038I Pass  34: suminf.    0.14734 (13) obj. 116.156 iterations 0
Cbc0038I Pass  35: suminf.    0.14734 (13) obj. 116.156 iterations 10
Cbc0038I Rounding solution of 98.6494 is better than previous of 128.924

Cbc0038I Before mini branch and bound, 10707 integers at bound fixed and 0 continuous
Cbc0038I Full problem 208 rows 10920 columns, reduced to 49 rows 98 columns
Cbc0038I Mini branch and bound improved solution from 98.6494 to 90.1953 (0.27 seconds)
Cbc0038I Round again with cutoff of 72.4041
Cbc0038I Pass  35: suminf.    1.00000 (104) obj. 1.23966 iterations 0
Cbc0038I Pass  36: suminf.    0.72115 (75) obj. 36.844 iterations 29
Cbc0038I Pass  37: suminf.    0.60577 (63) obj. 51.5768 iterations 12
Cbc0038I Pass  38: suminf.    0.46154 (48) obj. 69.9928 iterations 15
Cbc0038I Pass  39: suminf.    0.47793 (47) obj. 72.4041 iterations 29
Cbc0038I Pass  40: suminf.    0.47793 (47) obj. 72.4041 iterations 0
Cbc0038I Pass  41: suminf.    0.47793 (47) obj. 72.4041 iterations 8
Cbc0038I Pass  42: suminf.    0.47793 (47) obj. 72.4041 iterations 0
Cbc0038I Pass  43: suminf.    0.47793 (47) obj. 72.4041 iterations 1
Cbc0038I Pass  44: suminf.    0.47793 (47) obj. 72.4041 iterations 0
Cbc0038I Pass  45: suminf.    0.47793 (47) obj. 72.4041 iterations 1
Cbc0038I Pass  46: suminf.    1.40679 (44) obj. 72.4041 iterations 29
Cbc0038I Pass  47: suminf.    0.45192 (42) obj. 72.3005 iterations 26
Cbc0038I Pass  48: suminf.    0.53549 (42) obj. 72.4041 iterations 28
Cbc0038I Pass  49: suminf.    0.43269 (42) obj. 72.2767 iterations 24
Cbc0038I Pass  50: suminf.    0.53549 (42) obj. 72.4041 iterations 33
Cbc0038I Pass  51: suminf.    0.44231 (41) obj. 72.2886 iterations 24
Cbc0038I Pass  52: suminf.    0.53549 (41) obj. 72.4041 iterations 26
Cbc0038I Pass  53: suminf.    1.16866 (40) obj. 72.4041 iterations 22
Cbc0038I Pass  54: suminf.    0.53059 (39) obj. 72.4041 iterations 18
Cbc0038I Pass  55: suminf.    0.49213 (38) obj. 72.4041 iterations 16
Cbc0038I Pass  56: suminf.    0.49213 (38) obj. 72.4041 iterations 1
Cbc0038I Pass  57: suminf.    0.47290 (38) obj. 72.4041 iterations 12
Cbc0038I Pass  58: suminf.    0.47290 (38) obj. 72.4041 iterations 1
Cbc0038I Pass  59: suminf.    0.49213 (38) obj. 72.4041 iterations 12
Cbc0038I Pass  60: suminf.    0.50824 (36) obj. 72.4041 iterations 56
Cbc0038I Pass  61: suminf.    0.50824 (36) obj. 72.4041 iterations 64
Cbc0038I Pass  62: suminf.    0.50824 (36) obj. 72.4041 iterations 14
Cbc0038I Pass  63: suminf.    0.50824 (36) obj. 72.4041 iterations 1
Cbc0038I Pass  64: suminf.    0.50824 (36) obj. 72.4041 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10751 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.39 seconds)
Cbc0038I After 0.39 seconds - Feasibility pump exiting with objective of 90.1953 - took 0.30 seconds
Cbc0012I Integer solution of 90.19528 found by feasibility pump after 0 iterations and 0 nodes (0.39 seconds)
Cbc0012I Integer solution of 19.618391 found by DiveCoefficient after 8733 iterations and 0 nodes (3.93 seconds)
Cbc0031I 848 added rows had average density of 17.958726
Cbc0013I At root node, 848 cuts changed objective from 1.2396552 to 19.618391 in 20 passes
Cbc0014I Cut generator 0 (Probing) - 820 row cuts average 2.1 elements, 0 column cuts (577 active)  in 0.668 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 234 row cuts average 196.9 elements, 0 column cuts (0 active)  in 0.425 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1214 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 958 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 208 row cuts average 131.8 elements, 0 column cuts (0 active)  in 0.134 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 0.18557787, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.16976905, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.15381694, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.13585186, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.12021518, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.10442305, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.087476015, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.071501017, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.055500031, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.039685965, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.023868084, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.0078539848, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 5.9604645e-06 locked, 9.5367432e-07 waiting for locks
Cbc0001I Search completed - best objective 19.61839051259523, took 8733 iterations and 0 nodes (4.18 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.23966 to 19.6184
Probing was tried 260 times and created 10660 cuts of which 7501 were active after adding rounds of cuts (8.688 seconds)
Gomory was tried 260 times and created 3042 cuts of which 0 were active after adding rounds of cuts (5.529 seconds)
Knapsack was tried 260 times and created 15782 cuts of which 0 were active after adding rounds of cuts (0.685 seconds)
Clique was tried 260 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.156 seconds)
MixedIntegerRounding2 was tried 260 times and created 12454 cuts of which 0 were active after adding rounds of cuts (0.899 seconds)
FlowCover was tried 260 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.059 seconds)
TwoMirCuts was tried 260 times and created 2704 cuts of which 0 were active after adding rounds of cuts (1.741 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)

Result - Optimal solution found

Objective value:                19.61839051
Enumerated nodes:               0
Total iterations:               8733
Time (CPU seconds):             4.09
Time (Wallclock seconds):       4.19

Option for printingOptions changed from normal to all
Total time (CPU seconds):       4.11   (Wallclock seconds):       4.22

