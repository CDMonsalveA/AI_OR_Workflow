Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/95e79f7c69fc440eafc7c128a5cd2518-pulp.mps -sec 60 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/95e79f7c69fc440eafc7c128a5cd2518-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 405 COLUMNS
At line 201006 RHS
At line 201407 BOUNDS
At line 241608 ENDATA
Problem MODEL has 400 rows, 40200 columns and 80200 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 60
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.17931 - 0.02 seconds
Cgl0004I processed model has 400 rows, 40200 columns (40200 integer (40200 of which binary)) and 80200 elements
Cbc0038I Initial state - 200 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (200) obj. 1.17931 iterations 0
Cbc0038I Pass   2: suminf.    0.91500 (183) obj. 21.1273 iterations 17
Cbc0038I Pass   3: suminf.    0.82000 (164) obj. 43.4222 iterations 19
Cbc0038I Pass   4: suminf.    0.74500 (149) obj. 61.0234 iterations 15
Cbc0038I Pass   5: suminf.    0.64000 (128) obj. 85.6651 iterations 21
Cbc0038I Pass   6: suminf.    0.50000 (100) obj. 118.521 iterations 28
Cbc0038I Pass   7: suminf.    0.43500 (87) obj. 133.775 iterations 13
Cbc0038I Pass   8: suminf.    0.33000 (66) obj. 158.417 iterations 21
Cbc0038I Pass   9: suminf.    0.25000 (50) obj. 177.191 iterations 16
Cbc0038I Pass  10: suminf.    0.15000 (30) obj. 200.66 iterations 20
Cbc0038I Pass  11: suminf.    0.10000 (20) obj. 212.394 iterations 10
Cbc0038I Pass  12: suminf.    0.03500 (7) obj. 227.648 iterations 13
Cbc0038I Solution found of 235.862
Cbc0038I Before mini branch and bound, 40000 integers at bound fixed and 0 continuous
Cbc0038I Full problem 400 rows 40200 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.74 seconds)
Cbc0038I Round again with cutoff of 212.394
Cbc0038I Pass  13: suminf.    1.00000 (200) obj. 1.17931 iterations 0
Cbc0038I Pass  14: suminf.    0.90000 (180) obj. 24.6476 iterations 20
Cbc0038I Pass  15: suminf.    0.85000 (170) obj. 36.3817 iterations 10
Cbc0038I Pass  16: suminf.    0.78500 (157) obj. 51.6361 iterations 13
Cbc0038I Pass  17: suminf.    0.71000 (142) obj. 69.2373 iterations 15
Cbc0038I Pass  18: suminf.    0.60000 (120) obj. 95.0524 iterations 22
Cbc0038I Pass  19: suminf.    0.45500 (91) obj. 129.081 iterations 29
Cbc0038I Pass  20: suminf.    0.40500 (81) obj. 140.816 iterations 10
Cbc0038I Pass  21: suminf.    0.28000 (56) obj. 170.151 iterations 25
Cbc0038I Pass  22: suminf.    0.21500 (43) obj. 185.405 iterations 13
Cbc0038I Pass  23: suminf.    0.12500 (25) obj. 206.527 iterations 18
Cbc0038I Pass  24: suminf.    0.10001 (21) obj. 212.394 iterations 19
Cbc0038I Pass  25: suminf.    0.10001 (21) obj. 212.394 iterations 0
Cbc0038I Pass  26: suminf.    0.10001 (21) obj. 212.394 iterations 14
Cbc0038I Pass  27: suminf.    0.10001 (21) obj. 212.394 iterations 0
Cbc0038I Pass  28: suminf.    0.10001 (21) obj. 212.394 iterations 8
Cbc0038I Pass  29: suminf.    0.10001 (21) obj. 212.394 iterations 0
Cbc0038I Pass  30: suminf.    0.80798 (17) obj. 212.394 iterations 68
Cbc0038I Pass  31: suminf.    0.07500 (15) obj. 212.352 iterations 89
Cbc0038I Pass  32: suminf.    0.11023 (15) obj. 212.394 iterations 93
Cbc0038I Pass  33: suminf.    0.07000 (14) obj. 212.346 iterations 89
Cbc0038I Pass  34: suminf.    0.11023 (14) obj. 212.394 iterations 93
Cbc0038I Pass  35: suminf.    0.06500 (13) obj. 212.34 iterations 85
Cbc0038I Pass  36: suminf.    0.11023 (13) obj. 212.394 iterations 96
Cbc0038I Pass  37: suminf.    0.63381 (11) obj. 212.394 iterations 123
Cbc0038I Pass  38: suminf.    0.07972 (10) obj. 212.394 iterations 103
Cbc0038I Pass  39: suminf.    0.07972 (10) obj. 212.394 iterations 33
Cbc0038I Pass  40: suminf.    0.07972 (10) obj. 212.394 iterations 1
Cbc0038I Pass  41: suminf.    0.06972 (9) obj. 212.394 iterations 50
Cbc0038I Pass  42: suminf.    0.06972 (9) obj. 212.394 iterations 1
Cbc0038I Rounding solution of 177.002 is better than previous of 235.862

Cbc0038I Before mini branch and bound, 39831 integers at bound fixed and 0 continuous
Cbc0038I Full problem 400 rows 40200 columns, reduced to 72 rows 144 columns
Cbc0038I Mini branch and bound improved solution from 177.002 to 168.209 (1.32 seconds)
Cbc0038I Round again with cutoff of 134.803
Cbc0038I Pass  42: suminf.    1.00000 (200) obj. 1.17931 iterations 0
Cbc0038I Pass  43: suminf.    0.89500 (179) obj. 25.821 iterations 21
Cbc0038I Pass  44: suminf.    0.80500 (161) obj. 46.9424 iterations 18
Cbc0038I Pass  45: suminf.    0.67000 (134) obj. 78.6246 iterations 27
Cbc0038I Pass  46: suminf.    0.58000 (116) obj. 99.7461 iterations 18
Cbc0038I Pass  47: suminf.    0.51500 (103) obj. 115 iterations 13
Cbc0038I Pass  48: suminf.    0.55328 (87) obj. 134.803 iterations 22
Cbc0038I Pass  49: suminf.    0.55328 (87) obj. 134.803 iterations 0
Cbc0038I Pass  50: suminf.    0.55328 (87) obj. 134.803 iterations 36
Cbc0038I Pass  51: suminf.    0.55328 (87) obj. 134.803 iterations 0
Cbc0038I Pass  52: suminf.    0.55328 (87) obj. 134.803 iterations 1
Cbc0038I Pass  53: suminf.    0.55328 (87) obj. 134.803 iterations 0
Cbc0038I Pass  54: suminf.    0.55328 (87) obj. 134.803 iterations 1
Cbc0038I Pass  55: suminf.    0.76592 (76) obj. 134.803 iterations 102
Cbc0038I Pass  56: suminf.    0.76592 (76) obj. 134.803 iterations 13
Cbc0038I Pass  57: suminf.    0.73592 (75) obj. 134.803 iterations 23
Cbc0038I Pass  58: suminf.    0.73592 (75) obj. 134.803 iterations 0
Cbc0038I Pass  59: suminf.    0.73592 (75) obj. 134.803 iterations 22
Cbc0038I Pass  60: suminf.    0.73592 (75) obj. 134.803 iterations 0
Cbc0038I Pass  61: suminf.    0.73592 (75) obj. 134.803 iterations 14
Cbc0038I Pass  62: suminf.    0.55687 (65) obj. 134.803 iterations 110
Cbc0038I Pass  63: suminf.    0.35591 (64) obj. 134.803 iterations 88
Cbc0038I Pass  64: suminf.    0.36591 (64) obj. 134.803 iterations 75
Cbc0038I Pass  65: suminf.    0.36591 (64) obj. 134.803 iterations 4
Cbc0038I Pass  66: suminf.    0.35591 (64) obj. 134.803 iterations 34
Cbc0038I Pass  67: suminf.    0.35591 (64) obj. 134.803 iterations 1
Cbc0038I Pass  68: suminf.    0.35591 (64) obj. 134.803 iterations 33
Cbc0038I Pass  69: suminf.    0.35591 (64) obj. 134.803 iterations 1
Cbc0038I Pass  70: suminf.    0.36591 (64) obj. 134.803 iterations 36
Cbc0038I Pass  71: suminf.    0.36591 (64) obj. 134.803 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39867 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (1.78 seconds)
Cbc0038I After 1.78 seconds - Feasibility pump exiting with objective of 168.209 - took 1.24 seconds
Cbc0012I Integer solution of 168.20905 found by feasibility pump after 0 iterations and 0 nodes (1.79 seconds)
Cbc0031I 2994 added rows had average density of 12.547094
Cbc0013I At root node, 2994 cuts changed objective from 1.1793103 to 16.487861 in 23 passes
Cbc0014I Cut generator 0 (Probing) - 1878 row cuts average 2.4 elements, 0 column cuts (625 active)  in 3.376 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 179 row cuts average 280.8 elements, 0 column cuts (0 active)  in 1.653 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 5566 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.313 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2632 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.399 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 282 row cuts average 169.2 elements, 0 column cuts (0 active)  in 0.593 seconds - new frequency is -100
Cbc0030I Thread 0 used 0 times,  waiting to start 0.55686998, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.51188111, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.46669316, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.422019, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.37617016, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.32878304, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.27882481, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.22889805, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.17435408, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.11993408, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.070536852, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.021063089, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 9.059906e-06 locked, 0 waiting for locks
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 168.20905 (best possible 16.487861), took 71127 iterations and 0 nodes (62.92 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.17931 to 16.4879
Probing was tried 299 times and created 24414 cuts of which 8125 were active after adding rounds of cuts (43.890 seconds)
Gomory was tried 299 times and created 2327 cuts of which 0 were active after adding rounds of cuts (21.488 seconds)
Knapsack was tried 299 times and created 72358 cuts of which 0 were active after adding rounds of cuts (4.075 seconds)
Clique was tried 299 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.868 seconds)
MixedIntegerRounding2 was tried 299 times and created 34216 cuts of which 0 were active after adding rounds of cuts (5.191 seconds)
FlowCover was tried 299 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.275 seconds)
TwoMirCuts was tried 299 times and created 3666 cuts of which 0 were active after adding rounds of cuts (7.703 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)

Result - Stopped on time limit

Objective value:                168.20905058
Lower bound:                    16.488
Gap:                            9.20
Enumerated nodes:               0
Total iterations:               71127
Time (CPU seconds):             62.69
Time (Wallclock seconds):       62.97

Option for printingOptions changed from normal to all
Total time (CPU seconds):       62.79   (Wallclock seconds):       63.09

