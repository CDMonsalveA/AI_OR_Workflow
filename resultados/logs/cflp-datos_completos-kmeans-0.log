Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/efbbd8e1c95a4373acde49b7f4bf3037-pulp.mps -sec 3600 -timeMode elapsed -branch -printingOptions all -solution /tmp/efbbd8e1c95a4373acde49b7f4bf3037-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 151 COLUMNS
At line 16358 RHS
At line 16505 BOUNDS
At line 16579 ENDATA
Problem MODEL has 146 rows, 5402 columns and 10731 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.04568e+08 - 0.00 seconds
Cgl0004I processed model has 146 rows, 5402 columns (73 integer (73 of which binary)) and 10731 elements
Cbc0038I Initial state - 73 integers unsatisfied sum - 19.5477
Cbc0038I Pass   1: suminf.    0.05919 (1) obj. 2.03628e+09 iterations 74
Cbc0038I Solution found of 2.03804e+09
Cbc0038I Relaxing continuous gives 9.96332e+08
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 5184 continuous
Cbc0038I Full problem 146 rows 5402 columns, reduced to 133 rows 196 columns
Cbc0038I Mini branch and bound improved solution from 9.96332e+08 to 2.88648e+08 (0.05 seconds)
Cbc0038I Freeing continuous variables gives a solution of 2.86468e+08
Cbc0038I Round again with cutoff of 2.68278e+08
Cbc0038I Pass   2: suminf.    6.49372 (28) obj. 2.68278e+08 iterations 167
Cbc0038I Pass   3: suminf.    6.20162 (26) obj. 2.68278e+08 iterations 4
Cbc0038I Pass   4: suminf.    2.62524 (16) obj. 2.68278e+08 iterations 42
Cbc0038I Pass   5: suminf.    1.57008 (6) obj. 2.68278e+08 iterations 41
Cbc0038I Pass   6: suminf.    1.56307 (6) obj. 2.68278e+08 iterations 1
Cbc0038I Pass   7: suminf.    1.27080 (4) obj. 2.68278e+08 iterations 11
Cbc0038I Pass   8: suminf.    1.26037 (4) obj. 2.68278e+08 iterations 2
Cbc0038I Pass   9: suminf.    0.99691 (3) obj. 2.68278e+08 iterations 17
Cbc0038I Pass  10: suminf.    0.98658 (3) obj. 2.68278e+08 iterations 2
Cbc0038I Pass  11: suminf.    0.85078 (3) obj. 2.68278e+08 iterations 8
Cbc0038I Pass  12: suminf.    0.84150 (3) obj. 2.68278e+08 iterations 2
Cbc0038I Pass  13: suminf.    0.88170 (2) obj. 2.68278e+08 iterations 8
Cbc0038I Pass  14: suminf.    0.66416 (2) obj. 2.68278e+08 iterations 2
Cbc0038I Pass  15: suminf.    0.64586 (2) obj. 2.68278e+08 iterations 2
Cbc0038I Pass  16: suminf.    2.39949 (8) obj. 2.68278e+08 iterations 40
Cbc0038I Pass  17: suminf.    1.95384 (8) obj. 2.68278e+08 iterations 3
Cbc0038I Pass  18: suminf.    0.73498 (3) obj. 2.68278e+08 iterations 17
Cbc0038I Pass  19: suminf.    0.72776 (3) obj. 2.68278e+08 iterations 1
Cbc0038I Pass  20: suminf.    0.89618 (2) obj. 2.68278e+08 iterations 12
Cbc0038I Pass  21: suminf.    0.60395 (2) obj. 2.68278e+08 iterations 12
Cbc0038I Pass  22: suminf.    2.25033 (8) obj. 2.68278e+08 iterations 61
Cbc0038I Pass  23: suminf.    0.86694 (4) obj. 2.68278e+08 iterations 25
Cbc0038I Pass  24: suminf.    0.85429 (4) obj. 2.68278e+08 iterations 2
Cbc0038I Pass  25: suminf.    0.89338 (2) obj. 2.68278e+08 iterations 16
Cbc0038I Pass  26: suminf.    0.55002 (2) obj. 2.68278e+08 iterations 12
Cbc0038I Pass  27: suminf.    2.02188 (7) obj. 2.68278e+08 iterations 46
Cbc0038I Pass  28: suminf.    1.68813 (6) obj. 2.68278e+08 iterations 1
Cbc0038I Pass  29: suminf.    1.02934 (4) obj. 2.68278e+08 iterations 13
Cbc0038I Pass  30: suminf.    1.01016 (4) obj. 2.68278e+08 iterations 2
Cbc0038I Pass  31: suminf.    0.90120 (3) obj. 2.68278e+08 iterations 19
Cbc0038I Rounding solution of 2.80245e+08 is better than previous of 2.86468e+08

Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 5173 continuous
Cbc0038I Full problem 146 rows 5402 columns, reduced to 98 rows 172 columns
Cbc0038I Mini branch and bound improved solution from 2.80245e+08 to 2.68888e+08 (0.16 seconds)
Cbc0038I Freeing continuous variables gives a solution of 2.66101e+08
Cbc0038I Round again with cutoff of 2.33795e+08
Cbc0038I Pass  31: suminf.    7.78197 (33) obj. 2.33795e+08 iterations 8
Cbc0038I Pass  32: suminf.    7.53588 (33) obj. 2.33795e+08 iterations 5
Cbc0038I Pass  33: suminf.    3.46165 (19) obj. 2.33795e+08 iterations 53
Cbc0038I Pass  34: suminf.    3.27156 (13) obj. 2.33795e+08 iterations 38
Cbc0038I Pass  35: suminf.    3.26359 (13) obj. 2.33795e+08 iterations 2
Cbc0038I Pass  36: suminf.    2.94145 (13) obj. 2.33795e+08 iterations 27
Cbc0038I Pass  37: suminf.    2.93872 (13) obj. 2.33795e+08 iterations 1
Cbc0038I Pass  38: suminf.    4.55983 (14) obj. 2.33795e+08 iterations 28
Cbc0038I Pass  39: suminf.    4.55983 (14) obj. 2.33795e+08 iterations 0
Cbc0038I Pass  40: suminf.    5.02209 (13) obj. 2.33795e+08 iterations 16
Cbc0038I Pass  41: suminf.    4.98096 (13) obj. 2.33795e+08 iterations 1
Cbc0038I Pass  42: suminf.    4.98096 (13) obj. 2.33795e+08 iterations 0
Cbc0038I Pass  43: suminf.    5.48457 (14) obj. 2.33795e+08 iterations 5
Cbc0038I Pass  44: suminf.    5.48457 (14) obj. 2.33795e+08 iterations 0
Cbc0038I Pass  45: suminf.    5.57493 (14) obj. 2.33795e+08 iterations 4
Cbc0038I Pass  46: suminf.    5.57493 (14) obj. 2.33795e+08 iterations 0
Cbc0038I Pass  47: suminf.    5.50453 (14) obj. 2.33795e+08 iterations 4
Cbc0038I Pass  48: suminf.    5.50453 (14) obj. 2.33795e+08 iterations 0
Cbc0038I Pass  49: suminf.    5.47211 (16) obj. 2.33795e+08 iterations 32
Cbc0038I Pass  50: suminf.    5.03121 (14) obj. 2.33795e+08 iterations 26
Cbc0038I Pass  51: suminf.    4.65811 (14) obj. 2.33795e+08 iterations 5
Cbc0038I Pass  52: suminf.    4.69355 (13) obj. 2.33795e+08 iterations 3
Cbc0038I Pass  53: suminf.    4.69355 (13) obj. 2.33795e+08 iterations 0
Cbc0038I Pass  54: suminf.    5.49749 (14) obj. 2.33795e+08 iterations 7
Cbc0038I Pass  55: suminf.    5.49749 (14) obj. 2.33795e+08 iterations 0
Cbc0038I Pass  56: suminf.    5.57493 (14) obj. 2.33795e+08 iterations 4
Cbc0038I Pass  57: suminf.    5.57493 (14) obj. 2.33795e+08 iterations 0
Cbc0038I Pass  58: suminf.    5.50453 (14) obj. 2.33795e+08 iterations 4
Cbc0038I Pass  59: suminf.    5.50453 (14) obj. 2.33795e+08 iterations 0
Cbc0038I Pass  60: suminf.    4.70915 (14) obj. 2.33795e+08 iterations 46
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 5191 continuous
Cbc0038I Full problem 146 rows 5402 columns, reduced to 86 rows 143 columns
Cbc0038I Mini branch and bound improved solution from 2.66101e+08 to 2.6302e+08 (0.27 seconds)
Cbc0038I Freeing continuous variables gives a solution of 2.6284e+08
Cbc0038I Round again with cutoff of 1.95027e+08
Cbc0038I Pass  60: suminf.    9.68512 (40) obj. 1.95027e+08 iterations 7
Cbc0038I Pass  61: suminf.    9.35117 (38) obj. 1.95027e+08 iterations 10
Cbc0038I Pass  62: suminf.    6.00350 (29) obj. 1.95027e+08 iterations 48
Cbc0038I Pass  63: suminf.    5.99701 (29) obj. 1.95027e+08 iterations 1
Cbc0038I Pass  64: suminf.    7.74321 (31) obj. 1.95027e+08 iterations 54
Cbc0038I Pass  65: suminf.    7.74321 (31) obj. 1.95027e+08 iterations 0
Cbc0038I Pass  66: suminf.    9.07254 (32) obj. 1.95027e+08 iterations 27
Cbc0038I Pass  67: suminf.    8.87879 (32) obj. 1.95027e+08 iterations 5
Cbc0038I Pass  68: suminf.    9.23130 (33) obj. 1.95027e+08 iterations 13
Cbc0038I Pass  69: suminf.    9.23130 (33) obj. 1.95027e+08 iterations 0
Cbc0038I Pass  70: suminf.    9.23130 (33) obj. 1.95027e+08 iterations 0
Cbc0038I Pass  71: suminf.    8.44941 (31) obj. 1.95027e+08 iterations 39
Cbc0038I Pass  72: suminf.    8.32783 (30) obj. 1.95027e+08 iterations 1
Cbc0038I Pass  73: suminf.    8.95401 (31) obj. 1.95027e+08 iterations 11
Cbc0038I Pass  74: suminf.    8.95401 (31) obj. 1.95027e+08 iterations 0
Cbc0038I Pass  75: suminf.    8.86316 (31) obj. 1.95027e+08 iterations 11
Cbc0038I Pass  76: suminf.    8.86316 (31) obj. 1.95027e+08 iterations 0
Cbc0038I Pass  77: suminf.    8.86316 (31) obj. 1.95027e+08 iterations 0
Cbc0038I Pass  78: suminf.    7.98543 (29) obj. 1.95027e+08 iterations 41
Cbc0038I Pass  79: suminf.    7.79758 (30) obj. 1.95027e+08 iterations 4
Cbc0038I Pass  80: suminf.    7.63404 (29) obj. 1.95027e+08 iterations 8
Cbc0038I Pass  81: suminf.    7.62566 (29) obj. 1.95027e+08 iterations 4
Cbc0038I Pass  82: suminf.    7.91416 (30) obj. 1.95027e+08 iterations 5
Cbc0038I Pass  83: suminf.    7.91416 (30) obj. 1.95027e+08 iterations 0
Cbc0038I Pass  84: suminf.    8.80424 (31) obj. 1.95027e+08 iterations 10
Cbc0038I Pass  85: suminf.    8.80424 (31) obj. 1.95027e+08 iterations 0
Cbc0038I Pass  86: suminf.    8.80424 (31) obj. 1.95027e+08 iterations 0
Cbc0038I Pass  87: suminf.    8.39748 (31) obj. 1.95027e+08 iterations 36
Cbc0038I Pass  88: suminf.    8.07671 (30) obj. 1.95027e+08 iterations 3
Cbc0038I Pass  89: suminf.    8.07671 (30) obj. 1.95027e+08 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 5215 continuous
Cbc0038I Full problem 146 rows 5402 columns, reduced to 70 rows 103 columns
Cbc0038I Mini branch and bound did not improve solution (0.32 seconds)
Cbc0038I After 0.32 seconds - Feasibility pump exiting with objective of 2.6284e+08 - took 0.30 seconds
Cbc0012I Integer solution of 2.6283973e+08 found by feasibility pump after 0 iterations and 0 nodes (0.33 seconds)
Cbc0012I Integer solution of 2.604348e+08 found by DiveCoefficient after 332 iterations and 0 nodes (0.71 seconds)
Cbc0031I 86 added rows had average density of 97.755814
Cbc0013I At root node, 86 cuts changed objective from 1.0456836e+08 to 2.5997962e+08 in 38 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 174 row cuts average 166.7 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2 row cuts average 328.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 106 row cuts average 115.9 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 2.604348e+08 best solution, best possible 2.5998085e+08 (0.72 seconds)
Cbc0012I Integer solution of 2.6035975e+08 found by rounding after 358 iterations and 2 nodes (0.73 seconds)
Cbc0001I Search completed - best objective 260359746.7856274, took 391 iterations and 4 nodes (0.75 seconds)
Cbc0032I Strong branching done 20 times (133 iterations), fathomed 3 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.04568e+08 to 2.59981e+08
Probing was tried 38 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.103 seconds)
Gomory was tried 38 times and created 174 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
Knapsack was tried 38 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Clique was tried 38 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 38 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
FlowCover was tried 38 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.079 seconds)
TwoMirCuts was tried 44 times and created 108 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                260359746.78562737
Enumerated nodes:               4
Total iterations:               391
Time (CPU seconds):             0.77
Time (Wallclock seconds):       0.77

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.77   (Wallclock seconds):       0.78

