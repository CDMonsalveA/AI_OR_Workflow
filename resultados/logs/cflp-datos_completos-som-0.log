Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/fd4e8ebd7093473ca7eb4d30018a9d37-pulp.mps -sec 3600 -timeMode elapsed -branch -printingOptions all -solution /tmp/fd4e8ebd7093473ca7eb4d30018a9d37-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 175 COLUMNS
At line 22106 RHS
At line 22277 BOUNDS
At line 22363 ENDATA
Problem MODEL has 170 rows, 7310 columns and 14535 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
Option for timeMode changed from cpu to elapsed
Continuous objective value is 9.96086e+07 - 0.01 seconds
Cgl0004I processed model has 170 rows, 7310 columns (85 integer (85 of which binary)) and 14535 elements
Cbc0038I Initial state - 85 integers unsatisfied sum - 18.3224
Cbc0038I Pass   1: suminf.    0.48866 (1) obj. 3.52363e+09 iterations 85
Cbc0038I Pass   2: suminf.    0.48866 (1) obj. 3.52363e+09 iterations 0
Cbc0038I Solution found of 3.52618e+09
Cbc0038I Relaxing continuous gives 1.28915e+09
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 7056 continuous
Cbc0038I Full problem 170 rows 7310 columns, reduced to 162 rows 238 columns
Cbc0038I Mini branch and bound improved solution from 1.28915e+09 to 3.20849e+08 (0.07 seconds)
Cbc0038I Freeing continuous variables gives a solution of 3.15114e+08
Cbc0038I Round again with cutoff of 2.93564e+08
Cbc0038I Pass   3: suminf.    7.82613 (33) obj. 2.93564e+08 iterations 193
Cbc0038I Pass   4: suminf.    7.41622 (34) obj. 2.93564e+08 iterations 5
Cbc0038I Pass   5: suminf.    1.67806 (11) obj. 2.93564e+08 iterations 58
Cbc0038I Pass   6: suminf.    0.28697 (1) obj. 2.93564e+08 iterations 44
Cbc0038I Pass   7: suminf.    0.25456 (1) obj. 2.93564e+08 iterations 5
Cbc0038I Pass   8: suminf.    0.56109 (3) obj. 2.93564e+08 iterations 58
Cbc0038I Pass   9: suminf.    0.42806 (1) obj. 2.93564e+08 iterations 21
Cbc0038I Pass  10: suminf.    0.04660 (1) obj. 2.93564e+08 iterations 16
Cbc0038I Pass  11: suminf.    1.57689 (7) obj. 2.93564e+08 iterations 85
Cbc0038I Pass  12: suminf.    0.75802 (4) obj. 2.93564e+08 iterations 18
Cbc0038I Pass  13: suminf.    0.74804 (4) obj. 2.93564e+08 iterations 2
Cbc0038I Pass  14: suminf.    0.44547 (3) obj. 2.93564e+08 iterations 16
Cbc0038I Pass  15: suminf.    0.43829 (3) obj. 2.93564e+08 iterations 1
Cbc0038I Pass  16: suminf.    0.34555 (1) obj. 2.93564e+08 iterations 14
Cbc0038I Pass  17: suminf.    0.33872 (1) obj. 2.93564e+08 iterations 3
Cbc0038I Pass  18: suminf.    1.75920 (8) obj. 2.93564e+08 iterations 57
Cbc0038I Pass  19: suminf.    1.41611 (7) obj. 2.93564e+08 iterations 1
Cbc0038I Pass  20: suminf.    0.67929 (3) obj. 2.93564e+08 iterations 17
Cbc0038I Pass  21: suminf.    0.67929 (3) obj. 2.93564e+08 iterations 0
Cbc0038I Pass  22: suminf.    0.49218 (2) obj. 2.93564e+08 iterations 5
Cbc0038I Pass  23: suminf.    0.49218 (2) obj. 2.93564e+08 iterations 0
Cbc0038I Pass  24: suminf.    0.39705 (3) obj. 2.93564e+08 iterations 5
Cbc0038I Pass  25: suminf.    0.39705 (3) obj. 2.93564e+08 iterations 0
Cbc0038I Pass  26: suminf.    0.56115 (3) obj. 2.93564e+08 iterations 7
Cbc0038I Pass  27: suminf.    0.56115 (3) obj. 2.93564e+08 iterations 0
Cbc0038I Pass  28: suminf.    0.49625 (3) obj. 2.93564e+08 iterations 8
Cbc0038I Pass  29: suminf.    0.49625 (3) obj. 2.93564e+08 iterations 0
Cbc0038I Pass  30: suminf.    0.36891 (2) obj. 2.93564e+08 iterations 10
Cbc0038I Pass  31: suminf.    0.36891 (2) obj. 2.93564e+08 iterations 0
Cbc0038I Pass  32: suminf.    0.35704 (1) obj. 2.93564e+08 iterations 8
Cbc0038I Rounding solution of 2.95355e+08 is better than previous of 3.15114e+08

Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 7022 continuous
Cbc0038I Full problem 170 rows 7310 columns, reduced to 138 rows 246 columns
Cbc0038I Mini branch and bound improved solution from 2.95355e+08 to 2.79262e+08 (0.21 seconds)
Cbc0038I Freeing continuous variables gives a solution of 2.71366e+08
Cbc0038I Round again with cutoff of 2.37015e+08
Cbc0038I Pass  32: suminf.    9.29438 (41) obj. 2.37015e+08 iterations 16
Cbc0038I Pass  33: suminf.    8.83742 (41) obj. 2.37015e+08 iterations 3
Cbc0038I Pass  34: suminf.    4.06570 (25) obj. 2.37015e+08 iterations 49
Cbc0038I Pass  35: suminf.    2.05869 (13) obj. 2.37015e+08 iterations 61
Cbc0038I Pass  36: suminf.    2.05048 (13) obj. 2.37015e+08 iterations 1
Cbc0038I Pass  37: suminf.    3.18780 (18) obj. 2.37015e+08 iterations 41
Cbc0038I Pass  38: suminf.    3.18780 (18) obj. 2.37015e+08 iterations 0
Cbc0038I Pass  39: suminf.    4.29974 (22) obj. 2.37015e+08 iterations 28
Cbc0038I Pass  40: suminf.    3.98989 (21) obj. 2.37015e+08 iterations 1
Cbc0038I Pass  41: suminf.    3.90452 (22) obj. 2.37015e+08 iterations 3
Cbc0038I Pass  42: suminf.    7.60233 (27) obj. 2.37015e+08 iterations 34
Cbc0038I Pass  43: suminf.    7.49779 (27) obj. 2.37015e+08 iterations 2
Cbc0038I Pass  44: suminf.    7.38799 (25) obj. 2.37015e+08 iterations 10
Cbc0038I Pass  45: suminf.    7.33549 (26) obj. 2.37015e+08 iterations 1
Cbc0038I Pass  46: suminf.    7.20491 (25) obj. 2.37015e+08 iterations 11
Cbc0038I Pass  47: suminf.    7.15241 (26) obj. 2.37015e+08 iterations 1
Cbc0038I Pass  48: suminf.    6.75455 (25) obj. 2.37015e+08 iterations 7
Cbc0038I Pass  49: suminf.    6.70326 (25) obj. 2.37015e+08 iterations 2
Cbc0038I Pass  50: suminf.    7.38799 (25) obj. 2.37015e+08 iterations 5
Cbc0038I Pass  51: suminf.    7.33549 (26) obj. 2.37015e+08 iterations 1
Cbc0038I Pass  52: suminf.    6.75455 (25) obj. 2.37015e+08 iterations 7
Cbc0038I Pass  53: suminf.    5.35043 (22) obj. 2.37015e+08 iterations 60
Cbc0038I Pass  54: suminf.    5.16395 (22) obj. 2.37015e+08 iterations 3
Cbc0038I Pass  55: suminf.    5.32094 (22) obj. 2.37015e+08 iterations 19
Cbc0038I Pass  56: suminf.    5.14583 (22) obj. 2.37015e+08 iterations 2
Cbc0038I Pass  57: suminf.    5.43936 (21) obj. 2.37015e+08 iterations 7
Cbc0038I Pass  58: suminf.    5.26583 (22) obj. 2.37015e+08 iterations 2
Cbc0038I Pass  59: suminf.    7.40478 (25) obj. 2.37015e+08 iterations 20
Cbc0038I Pass  60: suminf.    7.40478 (25) obj. 2.37015e+08 iterations 0
Cbc0038I Pass  61: suminf.    7.22170 (25) obj. 2.37015e+08 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 7059 continuous
Cbc0038I Full problem 170 rows 7310 columns, reduced to 116 rows 189 columns
Cbc0038I Mini branch and bound did not improve solution (0.33 seconds)
Cbc0038I After 0.33 seconds - Feasibility pump exiting with objective of 2.71366e+08 - took 0.30 seconds
Cbc0012I Integer solution of 2.7136611e+08 found by feasibility pump after 0 iterations and 0 nodes (0.34 seconds)
Cbc0012I Integer solution of 2.6989441e+08 found by DiveCoefficient after 128 iterations and 0 nodes (0.50 seconds)
Cbc0031I 105 added rows had average density of 112.52381
Cbc0013I At root node, 105 cuts changed objective from 99608599 to 2.6349168e+08 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 104 row cuts average 108.7 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 117 row cuts average 119.1 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 2.6989441e+08 best solution, best possible 2.6349168e+08 (0.51 seconds)
Cbc0012I Integer solution of 2.6795605e+08 found by DiveCoefficient after 138 iterations and 2 nodes (0.54 seconds)
Cbc0012I Integer solution of 2.6767495e+08 found by DiveCoefficient after 143 iterations and 3 nodes (0.57 seconds)
Cbc0012I Integer solution of 2.6664462e+08 found by DiveCoefficient after 146 iterations and 4 nodes (0.60 seconds)
Cbc0012I Integer solution of 2.6646382e+08 found by DiveCoefficient after 153 iterations and 5 nodes (0.63 seconds)
Cbc0012I Integer solution of 2.652536e+08 found by DiveCoefficient after 156 iterations and 6 nodes (0.64 seconds)
Cbc0012I Integer solution of 2.6488812e+08 found by DiveCoefficient after 159 iterations and 9 nodes (0.67 seconds)
Cbc0001I Search completed - best objective 264888123.7371249, took 217 iterations and 16 nodes (0.75 seconds)
Cbc0032I Strong branching done 144 times (300 iterations), fathomed 3 nodes and fixed 17 variables
Cbc0035I Maximum depth 5, 0 variables fixed on reduced cost
Cuts at root node changed objective from 9.96086e+07 to 2.63492e+08
Probing was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.031 seconds)
Gomory was tried 6 times and created 104 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Knapsack was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
FlowCover was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
TwoMirCuts was tried 18 times and created 120 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                264888123.73712489
Enumerated nodes:               16
Total iterations:               217
Time (CPU seconds):             0.76
Time (Wallclock seconds):       0.76

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.78   (Wallclock seconds):       0.78

