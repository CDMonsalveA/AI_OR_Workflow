Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/e052e586ddc742b99b649940d508bdba-pulp.mps -sec 60 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/e052e586ddc742b99b649940d508bdba-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 137 COLUMNS
At line 22116 RHS
At line 22249 BOUNDS
At line 26672 ENDATA
Problem MODEL has 132 rows, 4422 columns and 8778 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 60
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.15345 - 0.00 seconds
Cgl0004I processed model has 132 rows, 4422 columns (4422 integer (4422 of which binary)) and 8778 elements
Cbc0038I Initial state - 66 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (66) obj. 1.15345 iterations 0
Cbc0038I Pass   2: suminf.    0.59091 (39) obj. 31.8247 iterations 27
Cbc0038I Pass   3: suminf.    0.16667 (11) obj. 63.6319 iterations 28
Cbc0038I Solution found of 76.1276
Cbc0038I Before mini branch and bound, 4356 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 4422 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I Round again with cutoff of 68.6302
Cbc0038I Pass   4: suminf.    1.00000 (66) obj. 1.15345 iterations 0
Cbc0038I Pass   5: suminf.    0.72727 (48) obj. 21.6009 iterations 18
Cbc0038I Pass   6: suminf.    0.46970 (31) obj. 40.9125 iterations 17
Cbc0038I Pass   7: suminf.    0.25758 (17) obj. 56.8161 iterations 14
Cbc0038I Pass   8: suminf.    0.49999 (7) obj. 68.6302 iterations 24
Cbc0038I Pass   9: suminf.    0.10606 (7) obj. 68.1758 iterations 1
Cbc0038I Pass  10: suminf.    0.65806 (9) obj. 68.6302 iterations 43
Cbc0038I Pass  11: suminf.    0.20555 (8) obj. 68.6302 iterations 19
Cbc0038I Pass  12: suminf.    0.26615 (7) obj. 68.6302 iterations 11
Cbc0038I Pass  13: suminf.    0.26615 (7) obj. 68.6302 iterations 1
Cbc0038I Pass  14: suminf.    0.20555 (7) obj. 68.6302 iterations 8
Cbc0038I Pass  15: suminf.    0.20555 (7) obj. 68.6302 iterations 1
Cbc0038I Pass  16: suminf.    0.26615 (7) obj. 68.6302 iterations 10
Cbc0038I Pass  17: suminf.    0.78388 (8) obj. 68.6302 iterations 70
Cbc0038I Pass  18: suminf.    0.13636 (6) obj. 68.5169 iterations 65
Cbc0038I Pass  19: suminf.    0.23452 (6) obj. 68.6302 iterations 60
Cbc0038I Pass  20: suminf.    0.12121 (6) obj. 68.4995 iterations 61
Cbc0038I Pass  21: suminf.    1.13537 (11) obj. 68.6302 iterations 110
Cbc0038I Pass  22: suminf.    0.18182 (9) obj. 68.2438 iterations 83
Cbc0038I Pass  23: suminf.    0.51678 (8) obj. 68.6302 iterations 97
Cbc0038I Pass  24: suminf.    0.19697 (7) obj. 68.2613 iterations 97
Cbc0038I Pass  25: suminf.    0.51678 (7) obj. 68.6302 iterations 94
Cbc0038I Pass  26: suminf.    1.03697 (7) obj. 68.6302 iterations 139
Cbc0038I Pass  27: suminf.    0.20144 (6) obj. 68.6302 iterations 70
Cbc0038I Pass  28: suminf.    0.26204 (6) obj. 68.6302 iterations 23
Cbc0038I Pass  29: suminf.    0.26204 (6) obj. 68.6302 iterations 1
Cbc0038I Pass  30: suminf.    0.20144 (6) obj. 68.6302 iterations 19
Cbc0038I Pass  31: suminf.    0.70440 (11) obj. 68.6302 iterations 164
Cbc0038I Pass  32: suminf.    0.16667 (9) obj. 68.4308 iterations 116
Cbc0038I Pass  33: suminf.    0.33955 (8) obj. 68.6302 iterations 130
Cbc0038I Rounding solution of 58.8065 is better than previous of 76.1276

Cbc0038I Before mini branch and bound, 4183 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 4422 columns, reduced to 98 rows 211 columns
Cbc0038I Mini branch and bound improved solution from 58.8065 to 39.0998 (0.17 seconds)
Cbc0038I Round again with cutoff of 31.5105
Cbc0038I Pass  33: suminf.    1.00000 (66) obj. 1.15345 iterations 0
Cbc0038I Pass  34: suminf.    0.83333 (55) obj. 13.6491 iterations 11
Cbc0038I Pass  35: suminf.    0.86328 (40) obj. 31.5105 iterations 16
Cbc0038I Pass  36: suminf.    0.86328 (40) obj. 31.5105 iterations 23
Cbc0038I Pass  37: suminf.    0.86328 (40) obj. 31.5105 iterations 0
Cbc0038I Pass  38: suminf.    0.86328 (40) obj. 31.5105 iterations 1
Cbc0038I Pass  39: suminf.    0.86328 (40) obj. 31.5105 iterations 0
Cbc0038I Pass  40: suminf.    0.86328 (40) obj. 31.5105 iterations 1
Cbc0038I Pass  41: suminf.    0.86328 (40) obj. 31.5105 iterations 0
Cbc0038I Pass  42: suminf.    0.86328 (40) obj. 31.5105 iterations 1
Cbc0038I Pass  43: suminf.    0.86328 (40) obj. 31.5105 iterations 0
Cbc0038I Pass  44: suminf.    0.86328 (40) obj. 31.5105 iterations 1
Cbc0038I Pass  45: suminf.    0.86328 (40) obj. 31.5105 iterations 0
Cbc0038I Pass  46: suminf.    0.86328 (40) obj. 31.5105 iterations 1
Cbc0038I Pass  47: suminf.    0.86328 (40) obj. 31.5105 iterations 0
Cbc0038I Pass  48: suminf.    0.86328 (40) obj. 31.5105 iterations 1
Cbc0038I Pass  49: suminf.    0.86328 (40) obj. 31.5105 iterations 0
Cbc0038I Pass  50: suminf.    0.86328 (40) obj. 31.5105 iterations 1
Cbc0038I Pass  51: suminf.    0.86328 (40) obj. 31.5105 iterations 0
Cbc0038I Pass  52: suminf.    0.86328 (40) obj. 31.5105 iterations 1
Cbc0038I Pass  53: suminf.    0.86328 (40) obj. 31.5105 iterations 0
Cbc0038I Pass  54: suminf.    0.86328 (40) obj. 31.5105 iterations 6
Cbc0038I Pass  55: suminf.    0.86328 (40) obj. 31.5105 iterations 0
Cbc0038I Pass  56: suminf.    0.86328 (40) obj. 31.5105 iterations 1
Cbc0038I Pass  57: suminf.    0.86328 (40) obj. 31.5105 iterations 0
Cbc0038I Pass  58: suminf.    0.86328 (40) obj. 31.5105 iterations 1
Cbc0038I Pass  59: suminf.    0.82573 (38) obj. 31.5105 iterations 28
Cbc0038I Pass  60: suminf.    0.59091 (38) obj. 31.2397 iterations 6
Cbc0038I Pass  61: suminf.    0.82573 (38) obj. 31.5105 iterations 10
Cbc0038I Pass  62: suminf.    0.60606 (38) obj. 31.2571 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4350 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I After 0.21 seconds - Feasibility pump exiting with objective of 39.0998 - took 0.14 seconds
Cbc0012I Integer solution of 39.099802 found by feasibility pump after 0 iterations and 0 nodes (0.22 seconds)
Cbc0012I Integer solution of 14.430848 found by DiveCoefficient after 4017 iterations and 0 nodes (1.18 seconds)
Cbc0031I 447 added rows had average density of 19.814318
Cbc0013I At root node, 447 cuts changed objective from 1.1534483 to 14.430848 in 18 passes
Cbc0014I Cut generator 0 (Probing) - 647 row cuts average 2.5 elements, 0 column cuts (131 active)  in 0.224 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 208 row cuts average 143.6 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 502 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 538 row cuts average 23.8 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 265 row cuts average 123.1 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 0.1146431, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.10482001, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.094535112, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.08474493, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.07454586, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.064380884, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.053905964, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.044023037, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.03421998, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.024396896, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.014256001, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.0044572353, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 6.1988831e-06 locked, 9.5367432e-07 waiting for locks
Cbc0001I Search completed - best objective 14.43084811512516, took 4017 iterations and 0 nodes (1.35 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.15345 to 14.4308
Probing was tried 234 times and created 8411 cuts of which 1703 were active after adding rounds of cuts (2.910 seconds)
Gomory was tried 234 times and created 2704 cuts of which 0 were active after adding rounds of cuts (1.325 seconds)
Knapsack was tried 234 times and created 6526 cuts of which 0 were active after adding rounds of cuts (0.224 seconds)
Clique was tried 234 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.050 seconds)
MixedIntegerRounding2 was tried 234 times and created 6994 cuts of which 0 were active after adding rounds of cuts (0.408 seconds)
FlowCover was tried 234 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.026 seconds)
TwoMirCuts was tried 234 times and created 3445 cuts of which 0 were active after adding rounds of cuts (0.605 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Optimal solution found

Objective value:                14.43084812
Enumerated nodes:               0
Total iterations:               4017
Time (CPU seconds):             1.30
Time (Wallclock seconds):       1.36

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.30   (Wallclock seconds):       1.37

