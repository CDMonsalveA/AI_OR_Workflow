Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/88c36571d2ec49428ede5cefa9559281-pulp.mps -sec 600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/88c36571d2ec49428ede5cefa9559281-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 217 COLUMNS
At line 56716 RHS
At line 56929 BOUNDS
At line 68272 ENDATA
Problem MODEL has 212 rows, 11342 columns and 22578 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.24545 - 0.00 seconds
Cgl0004I processed model has 212 rows, 11342 columns (11342 integer (11342 of which binary)) and 22578 elements
Cbc0038I Initial state - 106 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (106) obj. 1.24545 iterations 0
Cbc0038I Pass   2: suminf.    0.78302 (83) obj. 29.6207 iterations 23
Cbc0038I Pass   3: suminf.    0.58491 (62) obj. 55.5285 iterations 21
Cbc0038I Pass   4: suminf.    0.40566 (43) obj. 78.9689 iterations 19
Cbc0038I Pass   5: suminf.    0.27358 (29) obj. 96.2407 iterations 14
Cbc0038I Pass   6: suminf.    0.10377 (11) obj. 118.447 iterations 18
Cbc0038I Solution found of 132.018
Cbc0038I Before mini branch and bound, 11236 integers at bound fixed and 0 continuous
Cbc0038I Full problem 212 rows 11342 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of 118.941
Cbc0038I Pass   7: suminf.    1.00000 (106) obj. 1.24545 iterations 0
Cbc0038I Pass   8: suminf.    0.83962 (89) obj. 22.2184 iterations 17
Cbc0038I Pass   9: suminf.    0.66038 (70) obj. 45.6588 iterations 19
Cbc0038I Pass  10: suminf.    0.48113 (51) obj. 69.0992 iterations 19
Cbc0038I Pass  11: suminf.    0.27358 (29) obj. 96.2407 iterations 22
Cbc0038I Pass  12: suminf.    0.49999 (11) obj. 118.941 iterations 20
Cbc0038I Pass  13: suminf.    0.10377 (11) obj. 118.447 iterations 1
Cbc0038I Pass  14: suminf.    0.49999 (11) obj. 118.941 iterations 12
Cbc0038I Pass  15: suminf.    0.10377 (11) obj. 118.447 iterations 1
Cbc0038I Pass  16: suminf.    0.27626 (14) obj. 118.941 iterations 19
Cbc0038I Pass  17: suminf.    0.15844 (13) obj. 118.941 iterations 6
Cbc0038I Pass  18: suminf.    0.17730 (13) obj. 118.941 iterations 4
Cbc0038I Pass  19: suminf.    0.17730 (13) obj. 118.941 iterations 0
Cbc0038I Pass  20: suminf.    0.17730 (13) obj. 118.941 iterations 3
Cbc0038I Pass  21: suminf.    0.17730 (13) obj. 118.941 iterations 0
Cbc0038I Pass  22: suminf.    0.17730 (13) obj. 118.941 iterations 3
Cbc0038I Pass  23: suminf.    0.17625 (15) obj. 118.941 iterations 39
Cbc0038I Pass  24: suminf.    0.13208 (13) obj. 118.931 iterations 47
Cbc0038I Pass  25: suminf.    0.13977 (13) obj. 118.941 iterations 54
Cbc0038I Pass  26: suminf.    0.12264 (12) obj. 118.92 iterations 51
Cbc0038I Pass  27: suminf.    0.13977 (12) obj. 118.941 iterations 54
Cbc0038I Pass  28: suminf.    0.72971 (13) obj. 118.941 iterations 43
Cbc0038I Pass  29: suminf.    0.18105 (12) obj. 118.941 iterations 35
Cbc0038I Pass  30: suminf.    0.18105 (12) obj. 118.941 iterations 14
Cbc0038I Pass  31: suminf.    0.18105 (12) obj. 118.941 iterations 0
Cbc0038I Pass  32: suminf.    0.18105 (12) obj. 118.941 iterations 13
Cbc0038I Pass  33: suminf.    0.18105 (12) obj. 118.941 iterations 0
Cbc0038I Pass  34: suminf.    0.18105 (12) obj. 118.941 iterations 9
Cbc0038I Pass  35: suminf.    0.26557 (12) obj. 118.941 iterations 48
Cbc0038I Pass  36: suminf.    0.26557 (12) obj. 118.941 iterations 71
Cbc0038I Rounding solution of 108.897 is better than previous of 132.018

Cbc0038I Before mini branch and bound, 11152 integers at bound fixed and 0 continuous
Cbc0038I Full problem 212 rows 11342 columns, reduced to 36 rows 73 columns
Cbc0038I Mini branch and bound improved solution from 108.897 to 103.093 (0.29 seconds)
Cbc0038I Round again with cutoff of 82.7232
Cbc0038I Pass  36: suminf.    1.00000 (106) obj. 1.24545 iterations 0
Cbc0038I Pass  37: suminf.    0.75472 (80) obj. 33.3218 iterations 26
Cbc0038I Pass  38: suminf.    0.56604 (60) obj. 57.9959 iterations 20
Cbc0038I Pass  39: suminf.    0.42011 (40) obj. 82.7232 iterations 23
Cbc0038I Pass  40: suminf.    0.37736 (40) obj. 82.67 iterations 1
Cbc0038I Pass  41: suminf.    0.42011 (40) obj. 82.7232 iterations 26
Cbc0038I Pass  42: suminf.    0.37736 (40) obj. 82.67 iterations 1
Cbc0038I Pass  43: suminf.    0.42011 (40) obj. 82.7232 iterations 6
Cbc0038I Pass  44: suminf.    0.37736 (40) obj. 82.67 iterations 1
Cbc0038I Pass  45: suminf.    0.42011 (40) obj. 82.7232 iterations 1
Cbc0038I Pass  46: suminf.    0.81777 (39) obj. 82.7232 iterations 10
Cbc0038I Pass  47: suminf.    0.81777 (39) obj. 82.7232 iterations 1
Cbc0038I Pass  48: suminf.    0.81777 (39) obj. 82.7232 iterations 4
Cbc0038I Pass  49: suminf.    0.81777 (39) obj. 82.7232 iterations 0
Cbc0038I Pass  50: suminf.    0.81777 (39) obj. 82.7232 iterations 1
Cbc0038I Pass  51: suminf.    0.81777 (39) obj. 82.7232 iterations 0
Cbc0038I Pass  52: suminf.    0.81777 (39) obj. 82.7232 iterations 6
Cbc0038I Pass  53: suminf.    0.81777 (39) obj. 82.7232 iterations 0
Cbc0038I Pass  54: suminf.    0.81777 (39) obj. 82.7232 iterations 1
Cbc0038I Pass  55: suminf.    0.81777 (39) obj. 82.7232 iterations 0
Cbc0038I Pass  56: suminf.    0.81777 (39) obj. 82.7232 iterations 1
Cbc0038I Pass  57: suminf.    0.40226 (39) obj. 82.7232 iterations 21
Cbc0038I Pass  58: suminf.    0.37120 (37) obj. 82.7232 iterations 12
Cbc0038I Pass  59: suminf.    0.37120 (37) obj. 82.7232 iterations 0
Cbc0038I Pass  60: suminf.    0.79607 (36) obj. 82.7232 iterations 33
Cbc0038I Pass  61: suminf.    0.36792 (34) obj. 82.6727 iterations 43
Cbc0038I Pass  62: suminf.    0.40848 (34) obj. 82.7232 iterations 47
Cbc0038I Pass  63: suminf.    0.34906 (33) obj. 82.6492 iterations 41
Cbc0038I Pass  64: suminf.    0.40848 (33) obj. 82.7232 iterations 46
Cbc0038I Pass  65: suminf.    0.65342 (35) obj. 82.7232 iterations 42
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11169 integers at bound fixed and 0 continuous
Cbc0038I Full problem 212 rows 11342 columns, reduced to 22 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.41 seconds)
Cbc0038I After 0.41 seconds - Feasibility pump exiting with objective of 103.093 - took 0.31 seconds
Cbc0012I Integer solution of 103.09269 found by feasibility pump after 0 iterations and 0 nodes (0.41 seconds)
Cbc0012I Integer solution of 20.178286 found by DiveCoefficient after 9400 iterations and 0 nodes (4.17 seconds)
Cbc0031I 876 added rows had average density of 17.469178
Cbc0013I At root node, 876 cuts changed objective from 1.2454545 to 20.178286 in 19 passes
Cbc0014I Cut generator 0 (Probing) - 866 row cuts average 2.4 elements, 0 column cuts (464 active)  in 0.659 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 228 row cuts average 188.6 elements, 0 column cuts (0 active)  in 0.466 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1363 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1018 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 228 row cuts average 136.4 elements, 0 column cuts (0 active)  in 0.137 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 0.20452785, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.18777704, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.17112207, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.15429497, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.13786411, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.12165785, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.1029551, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.083013058, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.063000917, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.044404984, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.025964975, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.0080509186, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 5.9604645e-06 locked, 0 waiting for locks
Cbc0001I Search completed - best objective 20.17828573785093, took 9400 iterations and 0 nodes (4.45 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.24545 to 20.1783
Probing was tried 247 times and created 11258 cuts of which 6032 were active after adding rounds of cuts (8.570 seconds)
Gomory was tried 247 times and created 2964 cuts of which 0 were active after adding rounds of cuts (6.057 seconds)
Knapsack was tried 247 times and created 17719 cuts of which 0 were active after adding rounds of cuts (0.647 seconds)
Clique was tried 247 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.157 seconds)
MixedIntegerRounding2 was tried 247 times and created 13234 cuts of which 0 were active after adding rounds of cuts (0.859 seconds)
FlowCover was tried 247 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.050 seconds)
TwoMirCuts was tried 247 times and created 2964 cuts of which 0 were active after adding rounds of cuts (1.782 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)

Result - Optimal solution found

Objective value:                20.17828574
Enumerated nodes:               0
Total iterations:               9400
Time (CPU seconds):             4.38
Time (Wallclock seconds):       4.47

Option for printingOptions changed from normal to all
Total time (CPU seconds):       4.40   (Wallclock seconds):       4.50

