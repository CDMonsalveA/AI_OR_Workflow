Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/tesis/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/404776205a654826ac4c87bd145132aa-pulp.mps -sec 3600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/404776205a654826ac4c87bd145132aa-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 8468 COLUMNS
At line 50056 RHS
At line 58520 BOUNDS
At line 66893 ENDATA
Problem MODEL has 8463 rows, 8372 columns and 33124 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 4.85325e+07 - 0.08 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 268 strengthened rows, 0 substitutions
Cgl0004I processed model has 8463 rows, 8372 columns (91 integer (91 of which binary)) and 33215 elements
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.2868
Cbc0038I Pass   1: (1.86 seconds) suminf.    0.00000 (0) obj. 6.2185e+07 iterations 471
Cbc0038I Solution found of 6.2185e+07
Cbc0038I Relaxing continuous gives 6.15474e+07
Cbc0038I Before mini branch and bound, 84 integers at bound fixed and 8201 continuous
Cbc0038I Full problem 8463 rows 8372 columns, reduced to 36 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (1.94 seconds)
Cbc0038I Round again with cutoff of 6.14957e+07
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: (2.17 seconds) suminf.    0.02086 (1) obj. 6.14957e+07 iterations 635
Cbc0038I Pass   3: (2.35 seconds) suminf.    0.17700 (1) obj. 6.14957e+07 iterations 1283
Cbc0038I Pass   4: (2.84 seconds) suminf.    1.66841 (6) obj. 6.14957e+07 iterations 3411
Cbc0038I Pass   5: (2.91 seconds) suminf.    0.73120 (2) obj. 6.14957e+07 iterations 347
Cbc0038I Pass   6: (2.98 seconds) suminf.    0.05363 (1) obj. 6.14957e+07 iterations 535
Cbc0038I Pass   7: (3.00 seconds) suminf.    0.17700 (1) obj. 6.14957e+07 iterations 182
Cbc0038I Pass   8: (3.44 seconds) suminf.    2.02543 (5) obj. 6.14957e+07 iterations 2515
Cbc0038I Pass   9: (3.47 seconds) suminf.    0.80488 (2) obj. 6.14957e+07 iterations 163
Cbc0038I Pass  10: (3.50 seconds) suminf.    0.69595 (3) obj. 6.14957e+07 iterations 212
Cbc0038I Pass  11: (3.55 seconds) suminf.    0.17700 (1) obj. 6.14957e+07 iterations 297
Cbc0038I Pass  12: (3.59 seconds) suminf.    0.10381 (1) obj. 6.14957e+07 iterations 704
Cbc0038I Pass  13: (3.61 seconds) suminf.    0.17700 (1) obj. 6.14957e+07 iterations 111
Cbc0038I Pass  14: (3.91 seconds) suminf.    1.48261 (6) obj. 6.14957e+07 iterations 1546
Cbc0038I Pass  15: (4.06 seconds) suminf.    0.12657 (1) obj. 6.14957e+07 iterations 1223
Cbc0038I Pass  16: (4.13 seconds) suminf.    0.17700 (1) obj. 6.14957e+07 iterations 677
Cbc0038I Pass  17: (4.69 seconds) suminf.    0.50781 (4) obj. 6.14957e+07 iterations 2812
Cbc0038I Pass  18: (5.03 seconds) suminf.    0.36851 (1) obj. 6.14957e+07 iterations 2317
Cbc0038I Pass  19: (5.81 seconds) suminf.    0.43617 (2) obj. 6.14957e+07 iterations 5998
Cbc0038I No solution found this major pass
Cbc0038I After 5.81 seconds - Feasibility pump exiting with objective of 6.15474e+07 - took 4.01 seconds
Cbc0012I Integer solution of 61547373 found by feasibility pump after 0 iterations and 0 nodes (5.81 seconds)
Cbc0012I Integer solution of 61547373 found by DiveCoefficient after 0 iterations and 0 nodes (5.97 seconds)
Cbc0038I Full problem 8463 rows 8372 columns, reduced to 742 rows 1281 columns
Cbc0013I At root node, 0 cuts changed objective from 61030299 to 61030299 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 61547373 best solution, best possible 61030299 (6.30 seconds)
Cbc0012I Integer solution of 61541899 found by DiveCoefficient after 37 iterations and 1 nodes (6.43 seconds)
Cbc0012I Integer solution of 61541899 found by heuristic after 0 iterations and 0 nodes (6.50 seconds)
Cbc0010I After 100 nodes, 6 on tree, 61541899 best solution, best possible 61071958 (14.46 seconds)
Cbc0010I After 200 nodes, 27 on tree, 61541899 best solution, best possible 61071958 (19.13 seconds)
Cbc0010I After 300 nodes, 31 on tree, 61541899 best solution, best possible 61071958 (21.62 seconds)
Cbc0010I After 400 nodes, 40 on tree, 61541899 best solution, best possible 61071958 (23.24 seconds)
Cbc0010I After 500 nodes, 33 on tree, 61541899 best solution, best possible 61071958 (24.54 seconds)
Cbc0010I After 600 nodes, 26 on tree, 61541899 best solution, best possible 61071958 (25.85 seconds)
Cbc0010I After 700 nodes, 15 on tree, 61541899 best solution, best possible 61071958 (26.97 seconds)
Cbc0010I After 800 nodes, 4 on tree, 61541899 best solution, best possible 61091832 (29.94 seconds)
Cbc0010I After 900 nodes, 9 on tree, 61541899 best solution, best possible 61115585 (32.67 seconds)
Cbc0010I After 1000 nodes, 19 on tree, 61541899 best solution, best possible 61138216 (34.83 seconds)
Cbc0010I After 1100 nodes, 5 on tree, 61541899 best solution, best possible 61138216 (37.37 seconds)
Cbc0010I After 1200 nodes, 3 on tree, 61541899 best solution, best possible 61153772 (39.03 seconds)
Cbc0010I After 1300 nodes, 7 on tree, 61541899 best solution, best possible 61153772 (40.46 seconds)
Cbc0010I After 1400 nodes, 1 on tree, 61541899 best solution, best possible 61187250 (46.43 seconds)
Cbc0010I After 1500 nodes, 10 on tree, 61541899 best solution, best possible 61231985 (49.16 seconds)
Cbc0010I After 1600 nodes, 8 on tree, 61541899 best solution, best possible 61231985 (50.67 seconds)
Cbc0010I After 1700 nodes, 12 on tree, 61541899 best solution, best possible 61231985 (51.84 seconds)
Cbc0010I After 1800 nodes, 2 on tree, 61541899 best solution, best possible 61231985 (53.05 seconds)
Cbc0010I After 1900 nodes, 3 on tree, 61541899 best solution, best possible 61257579 (55.16 seconds)
Cbc0010I After 2000 nodes, 7 on tree, 61541899 best solution, best possible 61328403 (56.24 seconds)
Cbc0010I After 2100 nodes, 4 on tree, 61541899 best solution, best possible 61435333 (57.13 seconds)
Cbc0030I Thread 0 used 209 times,  waiting to start 2.7151926,  952 locks, 0.017903805 locked, 0.0028648376 waiting for locks
Cbc0030I Thread 1 used 231 times,  waiting to start 9.9295805,  1046 locks, 0.023185492 locked, 0.0067574978 waiting for locks
Cbc0030I Thread 2 used 170 times,  waiting to start 10.428155,  763 locks, 0.015918255 locked, 0.012702942 waiting for locks
Cbc0030I Thread 3 used 212 times,  waiting to start 9.7877247,  962 locks, 0.024341106 locked, 0.011409283 waiting for locks
Cbc0030I Thread 4 used 192 times,  waiting to start 12.191024,  878 locks, 0.014732599 locked, 0.0091178417 waiting for locks
Cbc0030I Thread 5 used 177 times,  waiting to start 11.421252,  797 locks, 0.015412569 locked, 0.0063533783 waiting for locks
Cbc0030I Thread 6 used 139 times,  waiting to start 12.04931,  635 locks, 0.01281333 locked, 0.014760971 waiting for locks
Cbc0030I Thread 7 used 217 times,  waiting to start 12.24303,  987 locks, 0.017716885 locked, 0.0089285374 waiting for locks
Cbc0030I Thread 8 used 127 times,  waiting to start 9.1892939,  591 locks, 0.010828018 locked, 0.0031702518 waiting for locks
Cbc0030I Thread 9 used 198 times,  waiting to start 11.755154,  907 locks, 0.015871048 locked, 0.0027959347 waiting for locks
Cbc0030I Thread 10 used 132 times,  waiting to start 10.461318,  601 locks, 0.011028051 locked, 0.013999939 waiting for locks
Cbc0030I Thread 11 used 152 times,  waiting to start 11.391472,  688 locks, 0.013111591 locked, 0.0017790794 waiting for locks
Cbc0030I Main thread 38.819592 waiting for threads,  4365 locks, 0.033172369 locked, 0.040941477 waiting for locks
Cbc0001I Search completed - best objective 61541898.6669087, took 249736 iterations and 2156 nodes (57.90 seconds)
Cbc0032I Strong branching done 2706 times (157721 iterations), fathomed 105 nodes and fixed 46 variables
Cbc0035I Maximum depth 47, 288 variables fixed on reduced cost
Cuts at root node changed objective from 6.10303e+07 to 6.10303e+07
Probing was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.066 seconds)
Gomory was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.031 seconds)
Knapsack was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.043 seconds)
Clique was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
FlowCover was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
TwoMirCuts was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.042 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                61541898.66690870
Enumerated nodes:               2156
Total iterations:               249736
Time (CPU seconds):             487.02
Time (Wallclock seconds):       58.08

Option for printingOptions changed from normal to all
Total time (CPU seconds):       487.03   (Wallclock seconds):       58.11

