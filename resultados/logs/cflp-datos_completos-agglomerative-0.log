Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/6a3020023b5f472b9449a8eee6e58918-pulp.mps -sec 3600 -timeMode elapsed -branch -printingOptions all -solution /tmp/6a3020023b5f472b9449a8eee6e58918-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 207 COLUMNS
At line 31114 RHS
At line 31317 BOUNDS
At line 31419 ENDATA
Problem MODEL has 202 rows, 10302 columns and 20503 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
Option for timeMode changed from cpu to elapsed
Continuous objective value is 6.60918e+07 - 0.00 seconds
Cgl0004I processed model has 202 rows, 10302 columns (101 integer (101 of which binary)) and 20503 elements
Cbc0038I Initial state - 101 integers unsatisfied sum - 16.715
Cbc0038I Pass   1: suminf.    0.29397 (1) obj. 3.60601e+09 iterations 106
Cbc0038I Solution found of 3.61836e+09
Cbc0038I Relaxing continuous gives 2.94211e+09
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 10000 continuous
Cbc0038I Full problem 202 rows 10302 columns, reduced to 197 rows 291 columns
Cbc0038I Mini branch and bound improved solution from 2.94211e+09 to 3.35939e+08 (0.09 seconds)
Cbc0038I Freeing continuous variables gives a solution of 3.32007e+08
Cbc0038I Round again with cutoff of 3.05416e+08
Cbc0038I Pass   2: suminf.    4.79829 (28) obj. 3.05416e+08 iterations 261
Cbc0038I Pass   3: suminf.    3.84372 (26) obj. 3.05416e+08 iterations 15
Cbc0038I Pass   4: suminf.    0.71114 (10) obj. 3.05416e+08 iterations 74
Cbc0038I Pass   5: suminf.    0.04944 (1) obj. 3.05416e+08 iterations 47
Cbc0038I Pass   6: suminf.    0.06879 (1) obj. 3.05416e+08 iterations 6
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. 3.05416e+08 iterations 9
Cbc0038I Solution found of 3.05416e+08
Cbc0038I Relaxing continuous gives 2.9705e+08
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 9981 continuous
Cbc0038I Full problem 202 rows 10302 columns, reduced to 167 rows 270 columns
Cbc0038I Mini branch and bound improved solution from 2.9705e+08 to 2.59321e+08 (0.21 seconds)
Cbc0038I Freeing continuous variables gives a solution of 2.52473e+08
Cbc0038I Round again with cutoff of 2.15197e+08
Cbc0038I Pass   8: suminf.    7.63112 (46) obj. 2.15197e+08 iterations 39
Cbc0038I Pass   9: suminf.    7.11236 (47) obj. 2.15197e+08 iterations 22
Cbc0038I Pass  10: suminf.    2.25512 (23) obj. 2.15197e+08 iterations 79
Cbc0038I Pass  11: suminf.    1.88373 (21) obj. 2.15197e+08 iterations 72
Cbc0038I Pass  12: suminf.    1.88373 (21) obj. 2.15197e+08 iterations 0
Cbc0038I Pass  13: suminf.    3.98875 (28) obj. 2.15197e+08 iterations 59
Cbc0038I Pass  14: suminf.    3.98875 (28) obj. 2.15197e+08 iterations 0
Cbc0038I Pass  15: suminf.    7.03434 (39) obj. 2.15197e+08 iterations 54
Cbc0038I Pass  16: suminf.    6.98989 (40) obj. 2.15197e+08 iterations 5
Cbc0038I Pass  17: suminf.    6.26152 (39) obj. 2.15197e+08 iterations 21
Cbc0038I Pass  18: suminf.    6.26152 (39) obj. 2.15197e+08 iterations 0
Cbc0038I Pass  19: suminf.    6.27437 (38) obj. 2.15197e+08 iterations 1
Cbc0038I Pass  20: suminf.    4.63184 (28) obj. 2.15197e+08 iterations 68
Cbc0038I Pass  21: suminf.    4.36798 (29) obj. 2.15197e+08 iterations 3
Cbc0038I Pass  22: suminf.    5.96673 (38) obj. 2.15197e+08 iterations 29
Cbc0038I Pass  23: suminf.    5.96673 (38) obj. 2.15197e+08 iterations 0
Cbc0038I Pass  24: suminf.    5.91399 (37) obj. 2.15197e+08 iterations 13
Cbc0038I Pass  25: suminf.    5.63889 (34) obj. 2.15197e+08 iterations 10
Cbc0038I Pass  26: suminf.    6.37765 (38) obj. 2.15197e+08 iterations 18
Cbc0038I Pass  27: suminf.    6.36480 (39) obj. 2.15197e+08 iterations 1
Cbc0038I Pass  28: suminf.    6.36947 (39) obj. 2.15197e+08 iterations 29
Cbc0038I Pass  29: suminf.    6.36947 (39) obj. 2.15197e+08 iterations 0
Cbc0038I Pass  30: suminf.    6.38232 (38) obj. 2.15197e+08 iterations 1
Cbc0038I Pass  31: suminf.    5.08381 (32) obj. 2.15197e+08 iterations 88
Cbc0038I Pass  32: suminf.    4.92339 (31) obj. 2.15197e+08 iterations 1
Cbc0038I Pass  33: suminf.    5.54777 (36) obj. 2.15197e+08 iterations 34
Cbc0038I Pass  34: suminf.    5.44499 (35) obj. 2.15197e+08 iterations 4
Cbc0038I Pass  35: suminf.    6.68568 (38) obj. 2.15197e+08 iterations 15
Cbc0038I Pass  36: suminf.    6.65408 (39) obj. 2.15197e+08 iterations 1
Cbc0038I Pass  37: suminf.    6.08050 (38) obj. 2.15197e+08 iterations 22
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 9992 continuous
Cbc0038I Full problem 202 rows 10302 columns, reduced to 159 rows 254 columns
Cbc0038I Mini branch and bound improved solution from 2.52473e+08 to 2.49756e+08 (0.39 seconds)
Cbc0038I Freeing continuous variables gives a solution of 2.45836e+08
Cbc0038I Round again with cutoff of 1.70465e+08
Cbc0038I Pass  37: suminf.    9.49730 (59) obj. 1.70465e+08 iterations 18
Cbc0038I Pass  38: suminf.    8.46609 (53) obj. 1.70465e+08 iterations 20
Cbc0038I Pass  39: suminf.    4.69219 (45) obj. 1.70465e+08 iterations 51
Cbc0038I Pass  40: suminf.    5.57308 (48) obj. 1.70465e+08 iterations 90
Cbc0038I Pass  41: suminf.    5.57308 (48) obj. 1.70465e+08 iterations 0
Cbc0038I Pass  42: suminf.    7.60361 (54) obj. 1.70465e+08 iterations 39
Cbc0038I Pass  43: suminf.    7.55915 (55) obj. 1.70465e+08 iterations 5
Cbc0038I Pass  44: suminf.    7.30486 (53) obj. 1.70465e+08 iterations 9
Cbc0038I Pass  45: suminf.    7.29201 (54) obj. 1.70465e+08 iterations 1
Cbc0038I Pass  46: suminf.    7.17968 (53) obj. 1.70465e+08 iterations 19
Cbc0038I Pass  47: suminf.    7.16683 (54) obj. 1.70465e+08 iterations 1
Cbc0038I Pass  48: suminf.    7.30391 (54) obj. 1.70465e+08 iterations 18
Cbc0038I Pass  49: suminf.    7.30391 (54) obj. 1.70465e+08 iterations 0
Cbc0038I Pass  50: suminf.    6.84929 (53) obj. 1.70465e+08 iterations 13
Cbc0038I Pass  51: suminf.    6.83644 (54) obj. 1.70465e+08 iterations 1
Cbc0038I Pass  52: suminf.    7.46694 (54) obj. 1.70465e+08 iterations 18
Cbc0038I Pass  53: suminf.    7.46694 (54) obj. 1.70465e+08 iterations 0
Cbc0038I Pass  54: suminf.    7.19958 (53) obj. 1.70465e+08 iterations 8
Cbc0038I Pass  55: suminf.    7.18673 (54) obj. 1.70465e+08 iterations 1
Cbc0038I Pass  56: suminf.    7.47095 (53) obj. 1.70465e+08 iterations 15
Cbc0038I Pass  57: suminf.    6.97215 (51) obj. 1.70465e+08 iterations 12
Cbc0038I Pass  58: suminf.    7.47095 (53) obj. 1.70465e+08 iterations 10
Cbc0038I Pass  59: suminf.    8.61906 (56) obj. 1.70465e+08 iterations 52
Cbc0038I Pass  60: suminf.    8.61906 (56) obj. 1.70465e+08 iterations 0
Cbc0038I Pass  61: suminf.    7.26115 (54) obj. 1.70465e+08 iterations 26
Cbc0038I Pass  62: suminf.    7.26115 (54) obj. 1.70465e+08 iterations 0
Cbc0038I Pass  63: suminf.    7.49133 (54) obj. 1.70465e+08 iterations 17
Cbc0038I Pass  64: suminf.    7.49133 (54) obj. 1.70465e+08 iterations 0
Cbc0038I Pass  65: suminf.    7.49122 (54) obj. 1.70465e+08 iterations 19
Cbc0038I Pass  66: suminf.    7.49122 (54) obj. 1.70465e+08 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 10029 continuous
Cbc0038I Full problem 202 rows 10302 columns, reduced to 130 rows 191 columns
Cbc0038I Mini branch and bound did not improve solution (0.49 seconds)
Cbc0038I After 0.49 seconds - Feasibility pump exiting with objective of 2.45836e+08 - took 0.44 seconds
Cbc0012I Integer solution of 2.4583613e+08 found by feasibility pump after 0 iterations and 0 nodes (0.50 seconds)
Cbc0012I Integer solution of 2.3935688e+08 found by DiveCoefficient after 161 iterations and 0 nodes (0.80 seconds)
Cbc0031I 127 added rows had average density of 137.58268
Cbc0013I At root node, 127 cuts changed objective from 66091772 to 2.1824545e+08 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 111 row cuts average 116.5 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 148 row cuts average 146.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 2.3935688e+08 best solution, best possible 2.1824545e+08 (0.82 seconds)
Cbc0012I Integer solution of 2.3727097e+08 found by DiveCoefficient after 164 iterations and 2 nodes (0.87 seconds)
Cbc0012I Integer solution of 2.3670056e+08 found by DiveCoefficient after 169 iterations and 3 nodes (0.94 seconds)
Cbc0012I Integer solution of 2.3642183e+08 found by DiveCoefficient after 170 iterations and 4 nodes (1.02 seconds)
Cbc0012I Integer solution of 2.3637725e+08 found by DiveCoefficient after 173 iterations and 5 nodes (1.10 seconds)
Cbc0012I Integer solution of 2.3596451e+08 found by DiveCoefficient after 175 iterations and 6 nodes (1.19 seconds)
Cbc0012I Integer solution of 2.3587742e+08 found by DiveCoefficient after 194 iterations and 10 nodes (1.28 seconds)
Cbc0012I Integer solution of 2.3549672e+08 found by DiveCoefficient after 196 iterations and 11 nodes (1.33 seconds)
Cbc0016I Integer solution of 2.2833113e+08 found by strong branching after 236 iterations and 22 nodes (1.45 seconds)
Cbc0016I Integer solution of 2.2790095e+08 found by strong branching after 240 iterations and 23 nodes (1.47 seconds)
Cbc0038I Full problem 202 rows 10302 columns, reduced to 157 rows 5673 columns
Cbc0012I Integer solution of 2.2780781e+08 found by rounding after 409 iterations and 48 nodes (1.88 seconds)
Cbc0016I Integer solution of 2.2763837e+08 found by strong branching after 460 iterations and 55 nodes (1.94 seconds)
Cbc0038I Full problem 202 rows 10302 columns, reduced to 146 rows 4551 columns
Cbc0010I After 100 nodes, 11 on tree, 2.2763837e+08 best solution, best possible 2.1824545e+08 (2.54 seconds)
Cbc0012I Integer solution of 2.2731661e+08 found by DiveCoefficient after 1165 iterations and 131 nodes (2.94 seconds)
Cbc0012I Integer solution of 2.2724031e+08 found by rounding after 1229 iterations and 141 nodes (3.05 seconds)
Cbc0012I Integer solution of 2.2714717e+08 found by rounding after 1433 iterations and 164 nodes (3.27 seconds)
Cbc0010I After 200 nodes, 8 on tree, 2.2714717e+08 best solution, best possible 2.1824545e+08 (3.65 seconds)
Cbc0038I Full problem 202 rows 10302 columns, reduced to 151 rows 5061 columns
Cbc0010I After 300 nodes, 5 on tree, 2.2714717e+08 best solution, best possible 2.1824545e+08 (4.74 seconds)
Cbc0012I Integer solution of 2.2712898e+08 found by DiveCoefficient after 2717 iterations and 347 nodes (5.47 seconds)
Cbc0012I Integer solution of 2.2680461e+08 found by rounding after 2751 iterations and 353 nodes (5.52 seconds)
Cbc0038I Full problem 202 rows 10302 columns, reduced to 156 rows 5571 columns
Cbc0010I After 400 nodes, 8 on tree, 2.2680461e+08 best solution, best possible 2.1824545e+08 (6.25 seconds)
Cbc0038I Full problem 202 rows 10302 columns, reduced to 153 rows 5266 columns
Cbc0010I After 500 nodes, 16 on tree, 2.2680461e+08 best solution, best possible 2.1974023e+08 (7.61 seconds)
Cbc0038I Full problem 202 rows 10302 columns, reduced to 162 rows 6185 columns
Cbc0010I After 600 nodes, 5 on tree, 2.2680461e+08 best solution, best possible 2.1974023e+08 (8.63 seconds)
Cbc0010I After 700 nodes, 2 on tree, 2.2680461e+08 best solution, best possible 2.2208369e+08 (9.96 seconds)
Cbc0001I Search completed - best objective 226804607.1589862, took 4685 iterations and 724 nodes (10.23 seconds)
Cbc0032I Strong branching done 2796 times (9466 iterations), fathomed 86 nodes and fixed 554 variables
Cbc0035I Maximum depth 19, 126 variables fixed on reduced cost
Cuts at root node changed objective from 6.60918e+07 to 2.18245e+08
Probing was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.064 seconds)
Gomory was tried 7 times and created 111 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
Knapsack was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
FlowCover was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.035 seconds)
TwoMirCuts was tried 470 times and created 148 cuts of which 0 were active after adding rounds of cuts (0.142 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                226804607.15898621
Enumerated nodes:               724
Total iterations:               4685
Time (CPU seconds):             10.11
Time (Wallclock seconds):       10.25

Option for printingOptions changed from normal to all
Total time (CPU seconds):       10.12   (Wallclock seconds):       10.27

