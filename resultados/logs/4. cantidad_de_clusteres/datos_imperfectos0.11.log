Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/e54607c93f3c4da8af333f197de8b334-pulp.mps -sec 60 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/e54607c93f3c4da8af333f197de8b334-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 251 COLUMNS
At line 76266 RHS
At line 76513 BOUNDS
At line 91766 ENDATA
Problem MODEL has 246 rows, 15252 columns and 30381 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 60
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.11034 - 0.01 seconds
Cgl0004I processed model has 246 rows, 15252 columns (15252 integer (15252 of which binary)) and 30381 elements
Cbc0038I Initial state - 123 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (123) obj. 1.11034 iterations 0
Cbc0038I Pass   2: suminf.    0.83740 (103) obj. 23.1367 iterations 20
Cbc0038I Pass   3: suminf.    0.74797 (92) obj. 35.2512 iterations 11
Cbc0038I Pass   4: suminf.    0.54472 (67) obj. 62.7841 iterations 25
Cbc0038I Pass   5: suminf.    0.34959 (43) obj. 89.2158 iterations 24
Cbc0038I Pass   6: suminf.    0.13821 (17) obj. 117.85 iterations 26
Cbc0038I Pass   7: suminf.    0.01626 (2) obj. 134.37 iterations 15
Cbc0038I Solution found of 136.572
Cbc0038I Before mini branch and bound, 15129 integers at bound fixed and 0 continuous
Cbc0038I Full problem 246 rows 15252 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I Round again with cutoff of 123.026
Cbc0038I Pass   8: suminf.    1.00000 (123) obj. 1.11034 iterations 0
Cbc0038I Pass   9: suminf.    0.78862 (97) obj. 29.7446 iterations 26
Cbc0038I Pass  10: suminf.    0.63415 (78) obj. 50.6696 iterations 19
Cbc0038I Pass  11: suminf.    0.41463 (51) obj. 80.4052 iterations 27
Cbc0038I Pass  12: suminf.    0.20325 (25) obj. 109.039 iterations 26
Cbc0038I Pass  13: suminf.    0.10569 (13) obj. 122.255 iterations 12
Cbc0038I Pass  14: suminf.    0.39513 (13) obj. 123.026 iterations 22
Cbc0038I Pass  15: suminf.    0.39513 (13) obj. 123.026 iterations 0
Cbc0038I Pass  16: suminf.    0.39513 (13) obj. 123.026 iterations 1
Cbc0038I Pass  17: suminf.    0.39513 (13) obj. 123.026 iterations 0
Cbc0038I Pass  18: suminf.    0.39513 (13) obj. 123.026 iterations 1
Cbc0038I Pass  19: suminf.    0.40392 (14) obj. 123.026 iterations 43
Cbc0038I Pass  20: suminf.    0.13081 (12) obj. 123.026 iterations 6
Cbc0038I Pass  21: suminf.    0.13081 (12) obj. 123.026 iterations 4
Cbc0038I Pass  22: suminf.    0.13081 (12) obj. 123.026 iterations 0
Cbc0038I Pass  23: suminf.    0.13081 (12) obj. 123.026 iterations 5
Cbc0038I Pass  24: suminf.    0.13081 (12) obj. 123.026 iterations 0
Cbc0038I Pass  25: suminf.    0.13081 (12) obj. 123.026 iterations 5
Cbc0038I Pass  26: suminf.    0.35980 (11) obj. 123.026 iterations 89
Cbc0038I Pass  27: suminf.    0.13179 (10) obj. 123.026 iterations 55
Cbc0038I Pass  28: suminf.    0.09927 (9) obj. 123.026 iterations 25
Cbc0038I Pass  29: suminf.    0.09927 (9) obj. 123.026 iterations 0
Cbc0038I Pass  30: suminf.    0.08301 (8) obj. 123.026 iterations 22
Cbc0038I Pass  31: suminf.    0.08301 (8) obj. 123.026 iterations 0
Cbc0038I Pass  32: suminf.    0.08301 (8) obj. 123.026 iterations 21
Cbc0038I Pass  33: suminf.    0.08301 (8) obj. 123.026 iterations 0
Cbc0038I Pass  34: suminf.    0.08301 (8) obj. 123.026 iterations 23
Cbc0038I Pass  35: suminf.    0.47012 (10) obj. 123.026 iterations 86
Cbc0038I Pass  36: suminf.    0.10204 (9) obj. 123.026 iterations 80
Cbc0038I Pass  37: suminf.    0.10204 (9) obj. 123.026 iterations 34
Cbc0038I Rounding solution of 98.5314 is better than previous of 136.572

Cbc0038I Before mini branch and bound, 14999 integers at bound fixed and 0 continuous
Cbc0038I Full problem 246 rows 15252 columns, reduced to 59 rows 119 columns
Cbc0038I Mini branch and bound improved solution from 98.5314 to 89.4471 (0.40 seconds)
Cbc0038I Round again with cutoff of 71.7798
Cbc0038I Pass  37: suminf.    1.00000 (123) obj. 1.11034 iterations 0
Cbc0038I Pass  38: suminf.    0.88618 (109) obj. 16.5288 iterations 14
Cbc0038I Pass  39: suminf.    0.73984 (91) obj. 36.3525 iterations 18
Cbc0038I Pass  40: suminf.    0.60163 (74) obj. 55.0749 iterations 17
Cbc0038I Pass  41: suminf.    0.64637 (59) obj. 71.7798 iterations 17
Cbc0038I Pass  42: suminf.    0.47967 (59) obj. 71.5947 iterations 1
Cbc0038I Pass  43: suminf.    0.64637 (59) obj. 71.7798 iterations 13
Cbc0038I Pass  44: suminf.    0.47967 (59) obj. 71.5947 iterations 1
Cbc0038I Pass  45: suminf.    0.64637 (59) obj. 71.7798 iterations 22
Cbc0038I Pass  46: suminf.    0.47967 (59) obj. 71.5947 iterations 1
Cbc0038I Pass  47: suminf.    0.64637 (59) obj. 71.7798 iterations 1
Cbc0038I Pass  48: suminf.    0.49862 (57) obj. 71.7798 iterations 7
Cbc0038I Pass  49: suminf.    0.46341 (57) obj. 71.7407 iterations 11
Cbc0038I Pass  50: suminf.    0.49862 (57) obj. 71.7798 iterations 13
Cbc0038I Pass  51: suminf.    0.88632 (51) obj. 71.7798 iterations 70
Cbc0038I Pass  52: suminf.    0.43089 (51) obj. 71.2741 iterations 37
Cbc0038I Pass  53: suminf.    0.88632 (50) obj. 71.7798 iterations 40
Cbc0038I Pass  54: suminf.    0.42276 (50) obj. 71.2651 iterations 25
Cbc0038I Pass  55: suminf.    0.88632 (50) obj. 71.7798 iterations 31
Cbc0038I Pass  56: suminf.    0.89311 (49) obj. 71.7798 iterations 26
Cbc0038I Pass  57: suminf.    0.89311 (49) obj. 71.7798 iterations 32
Cbc0038I Pass  58: suminf.    0.86059 (49) obj. 71.7798 iterations 18
Cbc0038I Pass  59: suminf.    0.86059 (49) obj. 71.7798 iterations 2
Cbc0038I Pass  60: suminf.    0.86059 (49) obj. 71.7798 iterations 16
Cbc0038I Pass  61: suminf.    0.86059 (49) obj. 71.7798 iterations 2
Cbc0038I Pass  62: suminf.    0.84433 (49) obj. 71.7798 iterations 15
Cbc0038I Pass  63: suminf.    0.84433 (49) obj. 71.7798 iterations 2
Cbc0038I Pass  64: suminf.    0.86059 (49) obj. 71.7798 iterations 18
Cbc0038I Pass  65: suminf.    0.64392 (47) obj. 71.7798 iterations 79
Cbc0038I Pass  66: suminf.    0.64392 (47) obj. 71.7798 iterations 63
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15061 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.57 seconds)
Cbc0038I After 0.57 seconds - Feasibility pump exiting with objective of 89.4471 - took 0.42 seconds
Cbc0012I Integer solution of 89.447125 found by feasibility pump after 0 iterations and 0 nodes (0.57 seconds)
Cbc0012I Integer solution of 12.756266 found by DiveCoefficient after 72889 iterations and 0 nodes (48.14 seconds)
Cbc0031I 1793 added rows had average density of 12.075851
Cbc0013I At root node, 1793 cuts changed objective from 1.1103448 to 12.756264 in 50 passes
Cbc0014I Cut generator 0 (Probing) - 2968 row cuts average 3.1 elements, 0 column cuts (446 active)  in 2.501 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 307 row cuts average 221.5 elements, 0 column cuts (0 active)  in 1.661 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 6927 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.369 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.113 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2134 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.355 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 306 row cuts average 159.2 elements, 0 column cuts (0 active)  in 0.241 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1400 row cuts average 279.8 elements, 0 column cuts (0 active)  in 8.897 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 0.73115492, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.67235899, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.61445403, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.55522895, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.49241996, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.42842078, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.36353993, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.2995491, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.23410606, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.17009592, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.10637593, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.041811943, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 1.2874603e-05 locked, 1.1920929e-06 waiting for locks
Cbc0001I Search completed - best objective 12.75626558173676, took 72889 iterations and 0 nodes (49.20 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.11034 to 12.7563
Probing was tried 650 times and created 38584 cuts of which 5798 were active after adding rounds of cuts (32.517 seconds)
Gomory was tried 650 times and created 3991 cuts of which 0 were active after adding rounds of cuts (21.593 seconds)
Knapsack was tried 650 times and created 90051 cuts of which 0 were active after adding rounds of cuts (4.796 seconds)
Clique was tried 650 times and created 0 cuts of which 0 were active after adding rounds of cuts (1.474 seconds)
MixedIntegerRounding2 was tried 650 times and created 27742 cuts of which 0 were active after adding rounds of cuts (4.613 seconds)
FlowCover was tried 650 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.262 seconds)
TwoMirCuts was tried 650 times and created 3978 cuts of which 0 were active after adding rounds of cuts (3.138 seconds)
ZeroHalf was tried 650 times and created 18200 cuts of which 0 were active after adding rounds of cuts (115.658 seconds)

Result - Optimal solution found

Objective value:                12.75626558
Enumerated nodes:               0
Total iterations:               72889
Time (CPU seconds):             48.94
Time (Wallclock seconds):       49.25

Option for printingOptions changed from normal to all
Total time (CPU seconds):       48.98   (Wallclock seconds):       49.29

