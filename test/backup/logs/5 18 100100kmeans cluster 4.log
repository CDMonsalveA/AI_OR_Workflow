Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/tesis/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/4e5f407a931141329a16545d39bae27f-pulp.mps -sec 3600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/4e5f407a931141329a16545d39bae27f-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 24653 COLUMNS
At line 146646 RHS
At line 171295 BOUNDS
At line 195788 ENDATA
Problem MODEL has 24648 rows, 24492 columns and 97344 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 6.84166e+07 - 0.27 seconds
Cgl0004I processed model has 24648 rows, 24492 columns (156 integer (156 of which binary)) and 97344 elements
Cbc0038I Initial state - 25 integers unsatisfied sum - 5.73994
Cbc0038I Pass   1: (8.52 seconds) suminf.    0.85441 (12) obj. 3.43208e+08 iterations 25213
Cbc0038I Solution found of 3.89925e+08
Cbc0038I Relaxing continuous gives 1.10361e+08
Cbc0038I Before mini branch and bound, 120 integers at bound fixed and 21663 continuous
Cbc0038I Full problem 24648 rows 24492 columns, reduced to 2772 rows 2709 columns
Cbc0038I Mini branch and bound did not improve solution (16.01 seconds)
Cbc0038I Freeing continuous variables gives a solution of 1.10361e+08
Cbc0038I Round again with cutoff of 1.06198e+08
Cbc0038I Pass   2: (31.75 seconds) suminf.    1.43012 (17) obj. 1.06198e+08 iterations 15470
Cbc0038I Pass   3: (35.17 seconds) suminf.    0.51105 (7) obj. 1.06198e+08 iterations 12731
Cbc0038I Pass   4: (36.18 seconds) suminf.    1.00000 (4) obj. 1.06198e+08 iterations 6279
Cbc0038I Pass   5: (36.49 seconds) suminf.    0.60341 (6) obj. 1.06198e+08 iterations 2589
Cbc0038I Pass   6: (37.10 seconds) suminf.    1.93698 (8) obj. 1.06198e+08 iterations 3915
Cbc0038I Pass   7: (37.16 seconds) suminf.    1.35027 (5) obj. 1.06198e+08 iterations 400
Cbc0038I Pass   8: (37.47 seconds) suminf.    0.15838 (6) obj. 1.06198e+08 iterations 3008
Cbc0038I Pass   9: (38.89 seconds) suminf.    0.00881 (1) obj. 1.06198e+08 iterations 9822
Cbc0038I Pass  10: (39.61 seconds) suminf.    0.10526 (1) obj. 1.06198e+08 iterations 7055
Cbc0038I Pass  11: (39.86 seconds) suminf.    4.36981 (15) obj. 1.06198e+08 iterations 1616
Cbc0038I Pass  12: (40.12 seconds) suminf.    0.85430 (6) obj. 1.06198e+08 iterations 1905
Cbc0038I Pass  13: (41.45 seconds) suminf.    0.05639 (1) obj. 1.06198e+08 iterations 7333
Cbc0038I Pass  14: (42.25 seconds) suminf.    0.21052 (1) obj. 1.06198e+08 iterations 6199
Cbc0038I Rounding solution of 1.0718e+08 is better than previous of 1.10361e+08

Cbc0038I After 42.25 seconds - Feasibility pump exiting with objective of 1.0718e+08 - took 41.24 seconds
Cbc0012I Integer solution of 1.0712736e+08 found by feasibility pump after 0 iterations and 0 nodes (44.30 seconds)
Cbc0038I Full problem 24648 rows 24492 columns, reduced to 5497 rows 5806 columns
Cbc0031I 496 added rows had average density of 19.534274
Cbc0013I At root node, 496 cuts changed objective from 68729696 to 84452800 in 50 passes
Cbc0014I Cut generator 0 (Probing) - 331 row cuts average 2.0 elements, 0 column cuts (363 active)  in 0.301 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 54 row cuts average 256.7 elements, 0 column cuts (0 active)  in 0.414 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.386 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 887 row cuts average 24.1 elements, 0 column cuts (0 active)  in 0.278 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 22 row cuts average 17.3 elements, 0 column cuts (0 active)  in 0.241 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 12 row cuts average 106.2 elements, 0 column cuts (0 active)  in 0.287 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1.0712736e+08 best solution, best possible 84452800 (78.85 seconds)
Cbc0010I After 100 nodes, 53 on tree, 1.0712736e+08 best solution, best possible 84848376 (210.36 seconds)
Cbc0010I After 200 nodes, 107 on tree, 1.0712736e+08 best solution, best possible 84848376 (298.36 seconds)
Cbc0010I After 300 nodes, 158 on tree, 1.0712736e+08 best solution, best possible 84848376 (358.10 seconds)
Cbc0010I After 400 nodes, 209 on tree, 1.0712736e+08 best solution, best possible 84848376 (405.74 seconds)
Cbc0010I After 500 nodes, 258 on tree, 1.0712736e+08 best solution, best possible 84848376 (439.43 seconds)
Cbc0010I After 600 nodes, 309 on tree, 1.0712736e+08 best solution, best possible 84848376 (481.20 seconds)
Cbc0012I Integer solution of 1.0258642e+08 found by heuristic after 853564 iterations and 685 nodes (504.80 seconds)
Cbc0010I After 700 nodes, 359 on tree, 1.0258642e+08 best solution, best possible 84848376 (509.59 seconds)
Cbc0010I After 800 nodes, 408 on tree, 1.0258642e+08 best solution, best possible 84848376 (570.57 seconds)
Cbc0010I After 900 nodes, 459 on tree, 1.0258642e+08 best solution, best possible 84848376 (620.31 seconds)
Cbc0010I After 1000 nodes, 507 on tree, 1.0258642e+08 best solution, best possible 84848376 (678.72 seconds)
Cbc0010I After 1100 nodes, 556 on tree, 1.0258642e+08 best solution, best possible 84848376 (705.75 seconds)
Cbc0010I After 1200 nodes, 608 on tree, 1.0258642e+08 best solution, best possible 84848376 (768.93 seconds)
Cbc0010I After 1300 nodes, 657 on tree, 1.0258642e+08 best solution, best possible 84848376 (820.77 seconds)
Cbc0010I After 1400 nodes, 708 on tree, 1.0258642e+08 best solution, best possible 84848376 (871.61 seconds)
Cbc0010I After 1500 nodes, 756 on tree, 1.0258642e+08 best solution, best possible 84848376 (919.28 seconds)
Cbc0010I After 1600 nodes, 805 on tree, 1.0258642e+08 best solution, best possible 84848376 (964.05 seconds)
Cbc0010I After 1700 nodes, 858 on tree, 1.0258642e+08 best solution, best possible 84848376 (996.49 seconds)
Cbc0010I After 1800 nodes, 908 on tree, 1.0258642e+08 best solution, best possible 84848376 (1040.07 seconds)
Cbc0010I After 1900 nodes, 958 on tree, 1.0258642e+08 best solution, best possible 84848376 (1078.06 seconds)
Cbc0010I After 2000 nodes, 1006 on tree, 1.0258642e+08 best solution, best possible 84848376 (1116.07 seconds)
Cbc0010I After 2100 nodes, 1057 on tree, 1.0258642e+08 best solution, best possible 84848376 (1153.05 seconds)
Cbc0010I After 2200 nodes, 1108 on tree, 1.0258642e+08 best solution, best possible 84848376 (1214.52 seconds)
Cbc0010I After 2300 nodes, 1161 on tree, 1.0258642e+08 best solution, best possible 84848376 (1251.29 seconds)
Cbc0010I After 2400 nodes, 1211 on tree, 1.0258642e+08 best solution, best possible 84848376 (1282.37 seconds)
Cbc0010I After 2500 nodes, 1260 on tree, 1.0258642e+08 best solution, best possible 84848376 (1316.56 seconds)
Cbc0010I After 2600 nodes, 1309 on tree, 1.0258642e+08 best solution, best possible 84848376 (1344.02 seconds)
Cbc0010I After 2700 nodes, 1358 on tree, 1.0258642e+08 best solution, best possible 84848376 (1379.65 seconds)
Cbc0010I After 2800 nodes, 1410 on tree, 1.0258642e+08 best solution, best possible 84848376 (1421.99 seconds)
Cbc0010I After 2900 nodes, 1459 on tree, 1.0258642e+08 best solution, best possible 84848376 (1460.57 seconds)
Cbc0010I After 3000 nodes, 1510 on tree, 1.0258642e+08 best solution, best possible 84848376 (1500.13 seconds)
Cbc0010I After 3100 nodes, 1559 on tree, 1.0258642e+08 best solution, best possible 84848376 (1534.32 seconds)
Cbc0010I After 3200 nodes, 1608 on tree, 1.0258642e+08 best solution, best possible 84848376 (1566.75 seconds)
Cbc0010I After 3300 nodes, 1658 on tree, 1.0258642e+08 best solution, best possible 84848376 (1599.65 seconds)
Cbc0010I After 3400 nodes, 1708 on tree, 1.0258642e+08 best solution, best possible 84848376 (1634.30 seconds)
Cbc0010I After 3500 nodes, 1757 on tree, 1.0258642e+08 best solution, best possible 84848376 (1661.89 seconds)
Cbc0010I After 3600 nodes, 1808 on tree, 1.0258642e+08 best solution, best possible 84848376 (1692.59 seconds)
Cbc0010I After 3700 nodes, 1859 on tree, 1.0258642e+08 best solution, best possible 84848376 (1723.57 seconds)
Cbc0010I After 3800 nodes, 1909 on tree, 1.0258642e+08 best solution, best possible 84848376 (1753.69 seconds)
Cbc0010I After 3900 nodes, 1957 on tree, 1.0258642e+08 best solution, best possible 84848376 (1786.57 seconds)
Cbc0010I After 4000 nodes, 2008 on tree, 1.0258642e+08 best solution, best possible 84848376 (1829.46 seconds)
Cbc0010I After 4100 nodes, 2059 on tree, 1.0258642e+08 best solution, best possible 84848376 (1866.36 seconds)
Cbc0010I After 4200 nodes, 2110 on tree, 1.0258642e+08 best solution, best possible 84848376 (1894.02 seconds)
Cbc0010I After 4300 nodes, 2165 on tree, 1.0258642e+08 best solution, best possible 84848376 (1913.75 seconds)
Cbc0010I After 4400 nodes, 2212 on tree, 1.0258642e+08 best solution, best possible 84848376 (1932.65 seconds)
Cbc0010I After 4500 nodes, 2263 on tree, 1.0258642e+08 best solution, best possible 84848376 (1951.59 seconds)
Cbc0012I Integer solution of 99913535 found by heuristic after 4518804 iterations and 4507 nodes (1953.27 seconds)
Cbc0010I After 4600 nodes, 2314 on tree, 99913535 best solution, best possible 84848376 (2024.98 seconds)
Cbc0010I After 4700 nodes, 2363 on tree, 99913535 best solution, best possible 84848376 (2083.29 seconds)
Cbc0010I After 4800 nodes, 2414 on tree, 99913535 best solution, best possible 84848376 (2134.70 seconds)
Cbc0010I After 4900 nodes, 2464 on tree, 99913535 best solution, best possible 84848376 (2190.13 seconds)
Cbc0010I After 5000 nodes, 2513 on tree, 99913535 best solution, best possible 84848376 (2250.80 seconds)
Cbc0010I After 5100 nodes, 2563 on tree, 99913535 best solution, best possible 84848376 (2317.67 seconds)
Cbc0010I After 5200 nodes, 2614 on tree, 99913535 best solution, best possible 84848376 (2395.23 seconds)
Cbc0010I After 5300 nodes, 2662 on tree, 99913535 best solution, best possible 84848376 (2449.38 seconds)
Cbc0010I After 5400 nodes, 2715 on tree, 99913535 best solution, best possible 84848376 (2504.48 seconds)
Cbc0010I After 5500 nodes, 2764 on tree, 99913535 best solution, best possible 84848376 (2560.09 seconds)
Cbc0010I After 5600 nodes, 2812 on tree, 99913535 best solution, best possible 84848376 (2611.47 seconds)
Cbc0010I After 5700 nodes, 2864 on tree, 99913535 best solution, best possible 84848376 (2673.40 seconds)
Cbc0010I After 5800 nodes, 2912 on tree, 99913535 best solution, best possible 84848376 (2722.36 seconds)
Cbc0010I After 5900 nodes, 2964 on tree, 99913535 best solution, best possible 84848376 (2776.44 seconds)
Cbc0010I After 6000 nodes, 3012 on tree, 99913535 best solution, best possible 84848376 (2839.36 seconds)
Cbc0010I After 6100 nodes, 3063 on tree, 99913535 best solution, best possible 84848376 (2897.34 seconds)
Cbc0010I After 6200 nodes, 3112 on tree, 99913535 best solution, best possible 84848376 (2955.01 seconds)
Cbc0010I After 6300 nodes, 3162 on tree, 99913535 best solution, best possible 84848376 (3017.41 seconds)
Cbc0010I After 6400 nodes, 3212 on tree, 99913535 best solution, best possible 84848376 (3098.88 seconds)
Cbc0010I After 6500 nodes, 3262 on tree, 99913535 best solution, best possible 84848376 (3170.47 seconds)
Cbc0010I After 6600 nodes, 3312 on tree, 99913535 best solution, best possible 84848376 (3221.98 seconds)
Cbc0010I After 6700 nodes, 3361 on tree, 99913535 best solution, best possible 84848376 (3289.82 seconds)
Cbc0010I After 6800 nodes, 3412 on tree, 99913535 best solution, best possible 84848376 (3368.36 seconds)
Cbc0010I After 6900 nodes, 3462 on tree, 99913535 best solution, best possible 84848376 (3453.44 seconds)
Cbc0010I After 7000 nodes, 3512 on tree, 99913535 best solution, best possible 84848376 (3531.70 seconds)
Cbc0030I Thread 0 used 585 times,  waiting to start 0.44344163,  5617 locks, 2.6814616 locked, 0.093285084 waiting for locks
Cbc0030I Thread 1 used 556 times,  waiting to start 3.3009708,  5337 locks, 2.7784011 locked, 0.16160893 waiting for locks
Cbc0030I Thread 2 used 612 times,  waiting to start 6.8883562,  5860 locks, 2.907728 locked, 0.12944531 waiting for locks
Cbc0030I Thread 3 used 590 times,  waiting to start 9.9919057,  5620 locks, 2.8827875 locked, 0.10701251 waiting for locks
Cbc0030I Thread 4 used 626 times,  waiting to start 13.339773,  5996 locks, 2.9799583 locked, 0.10641193 waiting for locks
Cbc0030I Thread 5 used 626 times,  waiting to start 13.829665,  5931 locks, 3.0548053 locked, 0.097096205 waiting for locks
Cbc0030I Thread 6 used 566 times,  waiting to start 17.339322,  5427 locks, 2.7827518 locked, 0.1181066 waiting for locks
Cbc0030I Thread 7 used 574 times,  waiting to start 19.002242,  5464 locks, 2.8735714 locked, 0.13394308 waiting for locks
Cbc0030I Thread 8 used 608 times,  waiting to start 18.956162,  5783 locks, 2.7396052 locked, 0.12429452 waiting for locks
Cbc0030I Thread 9 used 601 times,  waiting to start 21.331906,  5689 locks, 2.8462939 locked, 0.1064539 waiting for locks
Cbc0030I Thread 10 used 581 times,  waiting to start 24.791749,  5561 locks, 2.8002408 locked, 0.062890053 waiting for locks
Cbc0030I Thread 11 used 576 times,  waiting to start 28.628226,  5482 locks, 2.8201432 locked, 0.093010426 waiting for locks
Cbc0030I Main thread 3511.8905 waiting for threads,  14285 locks, 0.059113026 locked, 0.033400297 waiting for locks
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 99913535 (best possible 84848376), took 8369724 iterations and 7090 nodes (3601.52 seconds)
Cbc0032I Strong branching done 3598 times (295087 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 63, 0 variables fixed on reduced cost
Cuts at root node changed objective from 6.87297e+07 to 8.44528e+07
Probing was tried 25878 times and created 12969 cuts of which 4719 were active after adding rounds of cuts (2576.961 seconds)
Gomory was tried 25878 times and created 702 cuts of which 0 were active after adding rounds of cuts (5401.690 seconds)
Knapsack was tried 650 times and created 0 cuts of which 0 were active after adding rounds of cuts (5.019 seconds)
Clique was tried 650 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.130 seconds)
MixedIntegerRounding2 was tried 25878 times and created 167720 cuts of which 0 were active after adding rounds of cuts (6106.347 seconds)
FlowCover was tried 650 times and created 286 cuts of which 0 were active after adding rounds of cuts (3.128 seconds)
TwoMirCuts was tried 650 times and created 156 cuts of which 0 were active after adding rounds of cuts (3.731 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Stopped on time limit

Objective value:                99913534.65623735
Lower bound:                    84848375.868
Gap:                            0.18
Enumerated nodes:               7090
Total iterations:               8369724
Time (CPU seconds):             41164.58
Time (Wallclock seconds):       3602.56

Option for printingOptions changed from normal to all
Total time (CPU seconds):       41164.69   (Wallclock seconds):       3602.69

