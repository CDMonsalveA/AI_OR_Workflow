Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/86a38f09263f44a29313c9c96ce0a062-pulp.mps -sec 60 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/86a38f09263f44a29313c9c96ce0a062-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 291 COLUMNS
At line 102966 RHS
At line 103253 BOUNDS
At line 123846 ENDATA
Problem MODEL has 286 rows, 20592 columns and 41041 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 60
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.12759 - 0.01 seconds
Cgl0004I processed model has 286 rows, 20592 columns (20592 integer (20592 of which binary)) and 41041 elements
Cbc0038I Initial state - 143 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (143) obj. 1.12759 iterations 0
Cbc0038I Pass   2: suminf.    0.83916 (120) obj. 26.8807 iterations 23
Cbc0038I Pass   3: suminf.    0.66434 (95) obj. 54.8732 iterations 25
Cbc0038I Pass   4: suminf.    0.53147 (76) obj. 76.1476 iterations 19
Cbc0038I Pass   5: suminf.    0.41958 (60) obj. 94.0628 iterations 16
Cbc0038I Pass   6: suminf.    0.34266 (49) obj. 106.379 iterations 11
Cbc0038I Pass   7: suminf.    0.23776 (34) obj. 123.175 iterations 15
Cbc0038I Pass   8: suminf.    0.13986 (20) obj. 138.851 iterations 14
Cbc0038I Solution found of 161.245
Cbc0038I Before mini branch and bound, 20449 integers at bound fixed and 0 continuous
Cbc0038I Full problem 286 rows 20592 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.33 seconds)
Cbc0038I Round again with cutoff of 145.233
Cbc0038I Pass   9: suminf.    1.00000 (143) obj. 1.12759 iterations 0
Cbc0038I Pass  10: suminf.    0.85315 (122) obj. 24.6413 iterations 21
Cbc0038I Pass  11: suminf.    0.74825 (107) obj. 41.4368 iterations 15
Cbc0038I Pass  12: suminf.    0.65734 (94) obj. 55.9929 iterations 13
Cbc0038I Pass  13: suminf.    0.57343 (82) obj. 69.4293 iterations 12
Cbc0038I Pass  14: suminf.    0.38462 (55) obj. 99.6613 iterations 27
Cbc0038I Pass  15: suminf.    0.31469 (45) obj. 110.858 iterations 10
Cbc0038I Pass  16: suminf.    0.18881 (27) obj. 131.013 iterations 18
Cbc0038I Pass  17: suminf.    0.39581 (15) obj. 145.233 iterations 33
Cbc0038I Pass  18: suminf.    0.39581 (15) obj. 145.233 iterations 0
Cbc0038I Pass  19: suminf.    0.39581 (15) obj. 145.233 iterations 1
Cbc0038I Pass  20: suminf.    0.39581 (15) obj. 145.233 iterations 0
Cbc0038I Pass  21: suminf.    0.39581 (15) obj. 145.233 iterations 1
Cbc0038I Pass  22: suminf.    0.39581 (15) obj. 145.233 iterations 0
Cbc0038I Pass  23: suminf.    0.39581 (15) obj. 145.233 iterations 1
Cbc0038I Pass  24: suminf.    0.39581 (15) obj. 145.233 iterations 0
Cbc0038I Pass  25: suminf.    0.39581 (15) obj. 145.233 iterations 1
Cbc0038I Pass  26: suminf.    0.39581 (15) obj. 145.233 iterations 0
Cbc0038I Pass  27: suminf.    0.39581 (15) obj. 145.233 iterations 1
Cbc0038I Pass  28: suminf.    0.73501 (16) obj. 145.233 iterations 69
Cbc0038I Pass  29: suminf.    0.17034 (15) obj. 145.233 iterations 27
Cbc0038I Pass  30: suminf.    0.15635 (14) obj. 145.233 iterations 44
Cbc0038I Pass  31: suminf.    0.15635 (14) obj. 145.233 iterations 2
Cbc0038I Pass  32: suminf.    0.15635 (14) obj. 145.233 iterations 16
Cbc0038I Pass  33: suminf.    0.15635 (14) obj. 145.233 iterations 1
Cbc0038I Pass  34: suminf.    0.15635 (14) obj. 145.233 iterations 20
Cbc0038I Pass  35: suminf.    1.10498 (17) obj. 145.233 iterations 100
Cbc0038I Pass  36: suminf.    0.19177 (16) obj. 145.233 iterations 75
Cbc0038I Pass  37: suminf.    0.19177 (16) obj. 145.233 iterations 23
Cbc0038I Pass  38: suminf.    0.19177 (16) obj. 145.233 iterations 7
Cbc0038I Rounding solution of 116.976 is better than previous of 161.245

Cbc0038I Before mini branch and bound, 20316 integers at bound fixed and 0 continuous
Cbc0038I Full problem 286 rows 20592 columns, reduced to 56 rows 112 columns
Cbc0038I Mini branch and bound improved solution from 116.976 to 111.848 (0.56 seconds)
Cbc0038I Round again with cutoff of 89.7037
Cbc0038I Pass  38: suminf.    1.00000 (143) obj. 1.12759 iterations 0
Cbc0038I Pass  39: suminf.    0.89510 (128) obj. 17.9231 iterations 15
Cbc0038I Pass  40: suminf.    0.76923 (110) obj. 38.0777 iterations 18
Cbc0038I Pass  41: suminf.    0.67832 (97) obj. 52.6338 iterations 13
Cbc0038I Pass  42: suminf.    0.59441 (85) obj. 66.0702 iterations 12
Cbc0038I Pass  43: suminf.    0.55378 (64) obj. 89.7037 iterations 31
Cbc0038I Pass  44: suminf.    0.44755 (64) obj. 89.584 iterations 1
Cbc0038I Pass  45: suminf.    0.55378 (64) obj. 89.7037 iterations 16
Cbc0038I Pass  46: suminf.    0.44755 (64) obj. 89.584 iterations 1
Cbc0038I Pass  47: suminf.    0.55378 (64) obj. 89.7037 iterations 6
Cbc0038I Pass  48: suminf.    0.44755 (64) obj. 89.584 iterations 1
Cbc0038I Pass  49: suminf.    0.55378 (64) obj. 89.7037 iterations 1
Cbc0038I Pass  50: suminf.    0.78320 (61) obj. 89.7037 iterations 60
Cbc0038I Pass  51: suminf.    0.78320 (61) obj. 89.7037 iterations 12
Cbc0038I Pass  52: suminf.    0.79719 (61) obj. 89.7037 iterations 5
Cbc0038I Pass  53: suminf.    0.79719 (61) obj. 89.7037 iterations 0
Cbc0038I Pass  54: suminf.    0.78320 (61) obj. 89.7037 iterations 1
Cbc0038I Pass  55: suminf.    0.78320 (61) obj. 89.7037 iterations 0
Cbc0038I Pass  56: suminf.    0.79719 (61) obj. 89.7037 iterations 1
Cbc0038I Pass  57: suminf.    0.54122 (57) obj. 89.7037 iterations 25
Cbc0038I Pass  58: suminf.    0.43357 (57) obj. 89.5824 iterations 44
Cbc0038I Pass  59: suminf.    0.54122 (57) obj. 89.7037 iterations 27
Cbc0038I Pass  60: suminf.    0.41958 (56) obj. 89.5666 iterations 26
Cbc0038I Pass  61: suminf.    0.54122 (56) obj. 89.7037 iterations 24
Cbc0038I Pass  62: suminf.    0.64178 (56) obj. 89.7037 iterations 40
Cbc0038I Pass  63: suminf.    0.64178 (56) obj. 89.7037 iterations 56
Cbc0038I Pass  64: suminf.    0.62779 (56) obj. 89.7037 iterations 19
Cbc0038I Pass  65: suminf.    0.62779 (56) obj. 89.7037 iterations 2
Cbc0038I Pass  66: suminf.    0.64178 (56) obj. 89.7037 iterations 20
Cbc0038I Pass  67: suminf.    0.64178 (56) obj. 89.7037 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20394 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.79 seconds)
Cbc0038I After 0.79 seconds - Feasibility pump exiting with objective of 111.848 - took 0.58 seconds
Cbc0012I Integer solution of 111.84779 found by feasibility pump after 0 iterations and 0 nodes (0.80 seconds)
Cbc0012I Integer solution of 14.226557 found by DiveCoefficient after 77364 iterations and 0 nodes (57.75 seconds)
Cbc0031I 2279 added rows had average density of 13.448004
Cbc0013I At root node, 2279 cuts changed objective from 1.1275862 to 14.226557 in 41 passes
Cbc0014I Cut generator 0 (Probing) - 3279 row cuts average 2.9 elements, 0 column cuts (421 active)  in 2.893 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 354 row cuts average 252.0 elements, 0 column cuts (0 active)  in 2.086 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 7548 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.411 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.123 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2602 row cuts average 14.4 elements, 0 column cuts (0 active)  in 0.391 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 249 row cuts average 135.2 elements, 0 column cuts (0 active)  in 0.312 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 474 row cuts average 75.6 elements, 0 column cuts (0 active)  in 6.748 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 0.46474504, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.42538285, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.38610411, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.34588099, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.30709505, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.26830792, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.229527, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.19046402, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.14881992, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.10503602, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.062504053, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.019570827, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 9.059906e-06 locked, 0 waiting for locks
Cbc0001I Search completed - best objective 14.22655685518073, took 77364 iterations and 0 nodes (58.38 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.12759 to 14.2266
Probing was tried 533 times and created 42627 cuts of which 5473 were active after adding rounds of cuts (37.611 seconds)
Gomory was tried 533 times and created 4602 cuts of which 0 were active after adding rounds of cuts (27.120 seconds)
Knapsack was tried 533 times and created 98124 cuts of which 0 were active after adding rounds of cuts (5.342 seconds)
Clique was tried 533 times and created 0 cuts of which 0 were active after adding rounds of cuts (1.596 seconds)
MixedIntegerRounding2 was tried 533 times and created 33826 cuts of which 0 were active after adding rounds of cuts (5.083 seconds)
FlowCover was tried 533 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.280 seconds)
TwoMirCuts was tried 533 times and created 3237 cuts of which 0 were active after adding rounds of cuts (4.061 seconds)
ZeroHalf was tried 533 times and created 6162 cuts of which 0 were active after adding rounds of cuts (87.718 seconds)

Result - Optimal solution found

Objective value:                14.22655686
Enumerated nodes:               0
Total iterations:               77364
Time (CPU seconds):             58.16
Time (Wallclock seconds):       58.41

Option for printingOptions changed from normal to all
Total time (CPU seconds):       58.20   (Wallclock seconds):       58.47

