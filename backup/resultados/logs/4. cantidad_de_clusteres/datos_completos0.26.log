Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/f220d60fe8684fd1aa2c36620d4cc535-pulp.mps -sec 600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/f220d60fe8684fd1aa2c36620d4cc535-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 233 COLUMNS
At line 65556 RHS
At line 65785 BOUNDS
At line 78896 ENDATA
Problem MODEL has 228 rows, 13110 columns and 26106 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.26364 - 0.12 seconds
Cgl0004I processed model has 228 rows, 13110 columns (13110 integer (13110 of which binary)) and 26106 elements
Cbc0038I Initial state - 114 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (114) obj. 1.26364 iterations 41
Cbc0038I Pass   2: suminf.    0.75439 (86) obj. 36.3351 iterations 64
Cbc0038I Pass   3: suminf.    0.64912 (74) obj. 51.3657 iterations 32
Cbc0038I Pass   4: suminf.    0.43860 (50) obj. 81.427 iterations 40
Cbc0038I Pass   5: suminf.    0.19298 (22) obj. 116.498 iterations 39
Cbc0038I Solution found of 144.055
Cbc0038I Before mini branch and bound, 12996 integers at bound fixed and 0 continuous
Cbc0038I Full problem 228 rows 13110 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.28 seconds)
Cbc0038I Round again with cutoff of 129.775
Cbc0038I Pass   6: suminf.    1.00000 (114) obj. 1.26364 iterations 0
Cbc0038I Pass   7: suminf.    0.84211 (96) obj. 23.8096 iterations 62
Cbc0038I Pass   8: suminf.    0.72807 (83) obj. 40.0927 iterations 26
Cbc0038I Pass   9: suminf.    0.57895 (66) obj. 61.3861 iterations 35
Cbc0038I Pass  10: suminf.    0.40351 (46) obj. 86.4372 iterations 38
Cbc0038I Pass  11: suminf.    0.29825 (34) obj. 101.468 iterations 17
Cbc0038I Pass  12: suminf.    0.14912 (17) obj. 122.761 iterations 19
Cbc0038I Pass  13: suminf.    0.49299 (12) obj. 129.775 iterations 106
Cbc0038I Pass  14: suminf.    0.49299 (12) obj. 129.775 iterations 0
Cbc0038I Pass  15: suminf.    0.49299 (12) obj. 129.775 iterations 21
Cbc0038I Pass  16: suminf.    0.49299 (12) obj. 129.775 iterations 0
Cbc0038I Pass  17: suminf.    0.49299 (12) obj. 129.775 iterations 14
Cbc0038I Pass  18: suminf.    0.58311 (14) obj. 129.775 iterations 82
Cbc0038I Pass  19: suminf.    0.18482 (12) obj. 129.775 iterations 55
Cbc0038I Pass  20: suminf.    0.16727 (12) obj. 129.775 iterations 29
Cbc0038I Pass  21: suminf.    0.16727 (12) obj. 129.775 iterations 2
Cbc0038I Pass  22: suminf.    0.16727 (12) obj. 129.775 iterations 15
Cbc0038I Pass  23: suminf.    0.16727 (12) obj. 129.775 iterations 0
Cbc0038I Pass  24: suminf.    0.16727 (12) obj. 129.775 iterations 10
Cbc0038I Pass  25: suminf.    1.03034 (15) obj. 129.775 iterations 89
Cbc0038I Pass  26: suminf.    0.13158 (13) obj. 129.405 iterations 89
Cbc0038I Pass  27: suminf.    0.42444 (13) obj. 129.775 iterations 143
Cbc0038I Pass  28: suminf.    0.14035 (13) obj. 129.416 iterations 131
Cbc0038I Pass  29: suminf.    0.51782 (16) obj. 129.775 iterations 113
Cbc0038I Pass  30: suminf.    0.20032 (15) obj. 129.775 iterations 85
Cbc0038I Pass  31: suminf.    0.18278 (14) obj. 129.775 iterations 30
Cbc0038I Pass  32: suminf.    0.18278 (14) obj. 129.775 iterations 4
Cbc0038I Pass  33: suminf.    0.16523 (13) obj. 129.775 iterations 26
Cbc0038I Pass  34: suminf.    0.16523 (13) obj. 129.775 iterations 3
Cbc0038I Pass  35: suminf.    0.16523 (13) obj. 129.775 iterations 24
Cbc0038I Rounding solution of 119.565 is better than previous of 144.055

Cbc0038I Before mini branch and bound, 12881 integers at bound fixed and 0 continuous
Cbc0038I Full problem 228 rows 13110 columns, reduced to 57 rows 114 columns
Cbc0038I Mini branch and bound improved solution from 119.565 to 103.933 (0.46 seconds)
Cbc0038I Round again with cutoff of 83.3995
Cbc0038I Pass  35: suminf.    1.00000 (114) obj. 1.26364 iterations 0
Cbc0038I Pass  36: suminf.    0.74561 (85) obj. 37.5876 iterations 78
Cbc0038I Pass  37: suminf.    0.50000 (57) obj. 72.6591 iterations 53
Cbc0038I Pass  38: suminf.    0.84253 (49) obj. 83.3995 iterations 81
Cbc0038I Pass  39: suminf.    0.84253 (49) obj. 83.3995 iterations 0
Cbc0038I Pass  40: suminf.    0.84253 (49) obj. 83.3995 iterations 51
Cbc0038I Pass  41: suminf.    0.84253 (49) obj. 83.3995 iterations 3
Cbc0038I Pass  42: suminf.    0.84253 (49) obj. 83.3995 iterations 29
Cbc0038I Pass  43: suminf.    0.84253 (49) obj. 83.3995 iterations 5
Cbc0038I Pass  44: suminf.    0.84253 (49) obj. 83.3995 iterations 31
Cbc0038I Pass  45: suminf.    0.84253 (49) obj. 83.3995 iterations 5
Cbc0038I Pass  46: suminf.    0.84253 (49) obj. 83.3995 iterations 34
Cbc0038I Pass  47: suminf.    0.84253 (49) obj. 83.3995 iterations 5
Cbc0038I Pass  48: suminf.    0.84253 (49) obj. 83.3995 iterations 46
Cbc0038I Pass  49: suminf.    0.53214 (49) obj. 83.3995 iterations 51
Cbc0038I Pass  50: suminf.    0.53214 (49) obj. 83.3995 iterations 101
Cbc0038I Pass  51: suminf.    0.53214 (49) obj. 83.3995 iterations 40
Cbc0038I Pass  52: suminf.    0.53214 (49) obj. 83.3995 iterations 4
Cbc0038I Pass  53: suminf.    0.53214 (49) obj. 83.3995 iterations 30
Cbc0038I Pass  54: suminf.    0.53214 (49) obj. 83.3995 iterations 4
Cbc0038I Pass  55: suminf.    0.53214 (49) obj. 83.3995 iterations 34
Cbc0038I Pass  56: suminf.    0.66000 (47) obj. 83.3995 iterations 56
Cbc0038I Pass  57: suminf.    0.41228 (47) obj. 83.0864 iterations 95
Cbc0038I Pass  58: suminf.    0.66000 (47) obj. 83.3995 iterations 87
Cbc0038I Pass  59: suminf.    0.81292 (46) obj. 83.3995 iterations 69
Cbc0038I Pass  60: suminf.    0.42105 (45) obj. 82.9043 iterations 113
Cbc0038I Pass  61: suminf.    0.81292 (45) obj. 83.3995 iterations 96
Cbc0038I Pass  62: suminf.    0.42105 (45) obj. 82.9043 iterations 89
Cbc0038I Pass  63: suminf.    0.81541 (40) obj. 83.3995 iterations 80
Cbc0038I Pass  64: suminf.    0.46786 (38) obj. 83.3995 iterations 72
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12943 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.62 seconds)
Cbc0038I After 0.62 seconds - Feasibility pump exiting with objective of 103.933 - took 0.38 seconds
Cbc0012I Integer solution of 103.93342 found by feasibility pump after 0 iterations and 0 nodes (0.62 seconds)
Cbc0012I Integer solution of 21.395771 found by DiveCoefficient after 11646 iterations and 0 nodes (5.30 seconds)
Cbc0031I 949 added rows had average density of 10.17176
Cbc0013I At root node, 949 cuts changed objective from 1.2636364 to 21.395771 in 21 passes
Cbc0014I Cut generator 0 (Probing) - 956 row cuts average 3.0 elements, 0 column cuts (416 active)  in 0.816 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 244 row cuts average 165.1 elements, 0 column cuts (0 active)  in 0.494 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1704 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1152 row cuts average 13.2 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 241 row cuts average 131.6 elements, 0 column cuts (0 active)  in 0.163 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 0.22460794, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.20648003, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.18822098, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.16795897, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.14891696, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.12886596, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.10996294, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.088940859, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.069109201, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.049095869, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.02927804, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.0087089539, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 8.1062317e-06 locked, 0 waiting for locks
Cbc0001I Search completed - best objective 21.395770502756, took 11646 iterations and 0 nodes (5.60 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.26364 to 21.3958
Probing was tried 273 times and created 12428 cuts of which 5408 were active after adding rounds of cuts (10.613 seconds)
Gomory was tried 273 times and created 3172 cuts of which 0 were active after adding rounds of cuts (6.420 seconds)
Knapsack was tried 273 times and created 22152 cuts of which 0 were active after adding rounds of cuts (0.848 seconds)
Clique was tried 273 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.178 seconds)
MixedIntegerRounding2 was tried 273 times and created 14976 cuts of which 0 were active after adding rounds of cuts (0.919 seconds)
FlowCover was tried 273 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.070 seconds)
TwoMirCuts was tried 273 times and created 3133 cuts of which 0 were active after adding rounds of cuts (2.124 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Optimal solution found

Objective value:                21.39577050
Enumerated nodes:               0
Total iterations:               11646
Time (CPU seconds):             5.49
Time (Wallclock seconds):       5.62

Option for printingOptions changed from normal to all
Total time (CPU seconds):       5.53   (Wallclock seconds):       5.65

