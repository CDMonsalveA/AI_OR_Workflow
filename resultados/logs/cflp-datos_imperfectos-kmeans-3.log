Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/8ec243ada68b44d993db1512593d3f3e-pulp.mps -sec 3600 -timeMode elapsed -branch -printingOptions all -solution /tmp/8ec243ada68b44d993db1512593d3f3e-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 139 COLUMNS
At line 13808 RHS
At line 13943 BOUNDS
At line 14011 ENDATA
Problem MODEL has 134 rows, 4556 columns and 9045 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
Option for timeMode changed from cpu to elapsed
Continuous objective value is 6.5812e+07 - 0.00 seconds
Cgl0004I processed model has 134 rows, 4556 columns (67 integer (67 of which binary)) and 9045 elements
Cbc0038I Initial state - 67 integers unsatisfied sum - 12.2568
Cbc0038I Pass   1: suminf.    0.03069 (1) obj. 7.4437e+08 iterations 67
Cbc0038I Solution found of 7.46187e+08
Cbc0038I Relaxing continuous gives 5.13785e+08
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 4356 continuous
Cbc0038I Full problem 134 rows 4556 columns, reduced to 129 rows 190 columns
Cbc0038I Mini branch and bound improved solution from 5.13785e+08 to 2.41038e+08 (0.04 seconds)
Cbc0038I Freeing continuous variables gives a solution of 2.27298e+08
Cbc0038I Round again with cutoff of 2.1115e+08
Cbc0038I Pass   2: suminf.    3.23243 (24) obj. 2.1115e+08 iterations 135
Cbc0038I Pass   3: suminf.    2.85656 (24) obj. 2.1115e+08 iterations 5
Cbc0038I Pass   4: suminf.    0.44940 (5) obj. 2.1115e+08 iterations 86
Cbc0038I Pass   5: suminf.    0.39802 (3) obj. 2.1115e+08 iterations 26
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 2.1115e+08 iterations 21
Cbc0038I Solution found of 2.1115e+08
Cbc0038I Relaxing continuous gives 2.10592e+08
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 4347 continuous
Cbc0038I Full problem 134 rows 4556 columns, reduced to 98 rows 163 columns
Cbc0038I Mini branch and bound improved solution from 2.10592e+08 to 2.01493e+08 (0.11 seconds)
Cbc0038I Freeing continuous variables gives a solution of 1.99292e+08
Cbc0038I Round again with cutoff of 1.72596e+08
Cbc0038I Pass   7: suminf.    4.43884 (30) obj. 1.72596e+08 iterations 8
Cbc0038I Pass   8: suminf.    4.02385 (31) obj. 1.72596e+08 iterations 7
Cbc0038I Pass   9: suminf.    1.86219 (15) obj. 1.72596e+08 iterations 72
Cbc0038I Pass  10: suminf.    2.14697 (10) obj. 1.72596e+08 iterations 52
Cbc0038I Pass  11: suminf.    2.14498 (10) obj. 1.72596e+08 iterations 1
Cbc0038I Pass  12: suminf.    2.71604 (13) obj. 1.72596e+08 iterations 26
Cbc0038I Pass  13: suminf.    2.70530 (12) obj. 1.72596e+08 iterations 1
Cbc0038I Pass  14: suminf.    4.43797 (19) obj. 1.72596e+08 iterations 36
Cbc0038I Pass  15: suminf.    4.18744 (18) obj. 1.72596e+08 iterations 4
Cbc0038I Pass  16: suminf.    4.75696 (21) obj. 1.72596e+08 iterations 30
Cbc0038I Pass  17: suminf.    4.41483 (21) obj. 1.72596e+08 iterations 5
Cbc0038I Pass  18: suminf.    4.80269 (22) obj. 1.72596e+08 iterations 10
Cbc0038I Pass  19: suminf.    4.76036 (22) obj. 1.72596e+08 iterations 1
Cbc0038I Pass  20: suminf.    4.76036 (22) obj. 1.72596e+08 iterations 0
Cbc0038I Pass  21: suminf.    4.76046 (21) obj. 1.72596e+08 iterations 48
Cbc0038I Pass  22: suminf.    4.52071 (20) obj. 1.72596e+08 iterations 1
Cbc0038I Pass  23: suminf.    4.29918 (20) obj. 1.72596e+08 iterations 2
Cbc0038I Pass  24: suminf.    4.12632 (20) obj. 1.72596e+08 iterations 20
Cbc0038I Pass  25: suminf.    3.96983 (19) obj. 1.72596e+08 iterations 3
Cbc0038I Pass  26: suminf.    4.84875 (20) obj. 1.72596e+08 iterations 5
Cbc0038I Pass  27: suminf.    4.26028 (20) obj. 1.72596e+08 iterations 8
Cbc0038I Pass  28: suminf.    4.84875 (20) obj. 1.72596e+08 iterations 1
Cbc0038I Pass  29: suminf.    4.79081 (22) obj. 1.72596e+08 iterations 28
Cbc0038I Pass  30: suminf.    4.64872 (22) obj. 1.72596e+08 iterations 2
Cbc0038I Pass  31: suminf.    4.12121 (21) obj. 1.72596e+08 iterations 3
Cbc0038I Pass  32: suminf.    4.69393 (21) obj. 1.72596e+08 iterations 14
Cbc0038I Pass  33: suminf.    4.61865 (22) obj. 1.72596e+08 iterations 1
Cbc0038I Pass  34: suminf.    4.69393 (21) obj. 1.72596e+08 iterations 1
Cbc0038I Pass  35: suminf.    3.64297 (19) obj. 1.72596e+08 iterations 48
Cbc0038I Pass  36: suminf.    3.38892 (18) obj. 1.72596e+08 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 4339 continuous
Cbc0038I Full problem 134 rows 4556 columns, reduced to 103 rows 179 columns
Cbc0038I Mini branch and bound improved solution from 1.99292e+08 to 1.96863e+08 (0.21 seconds)
Cbc0038I Freeing continuous variables gives a solution of 1.90076e+08
Cbc0038I Round again with cutoff of 1.40561e+08
Cbc0038I Pass  36: suminf.    5.64360 (40) obj. 1.40561e+08 iterations 10
Cbc0038I Pass  37: suminf.    5.27200 (40) obj. 1.40561e+08 iterations 11
Cbc0038I Pass  38: suminf.    4.11200 (24) obj. 1.40561e+08 iterations 75
Cbc0038I Pass  39: suminf.    4.11200 (24) obj. 1.40561e+08 iterations 0
Cbc0038I Pass  40: suminf.    6.06207 (32) obj. 1.40561e+08 iterations 53
Cbc0038I Pass  41: suminf.    5.86301 (32) obj. 1.40561e+08 iterations 5
Cbc0038I Pass  42: suminf.    5.88118 (32) obj. 1.40561e+08 iterations 22
Cbc0038I Pass  43: suminf.    5.41490 (34) obj. 1.40561e+08 iterations 10
Cbc0038I Pass  44: suminf.    5.98181 (34) obj. 1.40561e+08 iterations 1
Cbc0038I Pass  45: suminf.    5.82212 (30) obj. 1.40561e+08 iterations 41
Cbc0038I Pass  46: suminf.    5.82212 (30) obj. 1.40561e+08 iterations 0
Cbc0038I Pass  47: suminf.    6.17131 (30) obj. 1.40561e+08 iterations 15
Cbc0038I Pass  48: suminf.    6.01522 (32) obj. 1.40561e+08 iterations 9
Cbc0038I Pass  49: suminf.    6.30106 (32) obj. 1.40561e+08 iterations 7
Cbc0038I Pass  50: suminf.    6.09702 (33) obj. 1.40561e+08 iterations 45
Cbc0038I Pass  51: suminf.    5.97181 (33) obj. 1.40561e+08 iterations 2
Cbc0038I Pass  52: suminf.    6.22258 (32) obj. 1.40561e+08 iterations 18
Cbc0038I Pass  53: suminf.    6.18025 (32) obj. 1.40561e+08 iterations 1
Cbc0038I Pass  54: suminf.    5.80565 (31) obj. 1.40561e+08 iterations 15
Cbc0038I Pass  55: suminf.    5.56100 (31) obj. 1.40561e+08 iterations 4
Cbc0038I Pass  56: suminf.    6.40848 (32) obj. 1.40561e+08 iterations 11
Cbc0038I Pass  57: suminf.    6.36615 (32) obj. 1.40561e+08 iterations 1
Cbc0038I Pass  58: suminf.    6.24768 (32) obj. 1.40561e+08 iterations 15
Cbc0038I Pass  59: suminf.    6.24768 (32) obj. 1.40561e+08 iterations 0
Cbc0038I Pass  60: suminf.    6.14659 (32) obj. 1.40561e+08 iterations 14
Cbc0038I Pass  61: suminf.    6.14659 (32) obj. 1.40561e+08 iterations 0
Cbc0038I Pass  62: suminf.    5.80565 (31) obj. 1.40561e+08 iterations 15
Cbc0038I Pass  63: suminf.    5.63300 (31) obj. 1.40561e+08 iterations 4
Cbc0038I Pass  64: suminf.    6.29001 (32) obj. 1.40561e+08 iterations 5
Cbc0038I Pass  65: suminf.    6.24768 (32) obj. 1.40561e+08 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 4374 continuous
Cbc0038I Full problem 134 rows 4556 columns, reduced to 76 rows 116 columns
Cbc0038I Mini branch and bound did not improve solution (0.26 seconds)
Cbc0038I After 0.26 seconds - Feasibility pump exiting with objective of 1.90076e+08 - took 0.22 seconds
Cbc0012I Integer solution of 1.9007582e+08 found by feasibility pump after 0 iterations and 0 nodes (0.27 seconds)
Cbc0012I Integer solution of 1.8985569e+08 found by DiveCoefficient after 836 iterations and 0 nodes (1.44 seconds)
Cbc0031I 96 added rows had average density of 121.04167
Cbc0013I At root node, 96 cuts changed objective from 65811983 to 1.7576811e+08 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 67.0 elements, 0 column cuts (0 active)  in 0.222 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 291 row cuts average 169.6 elements, 0 column cuts (0 active)  in 0.105 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 3 row cuts average 201.7 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.352 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 133 row cuts average 136.3 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1.8985569e+08 best solution, best possible 1.7576811e+08 (1.46 seconds)
Cbc0012I Integer solution of 1.8952958e+08 found by DiveCoefficient after 838 iterations and 1 nodes (1.47 seconds)
Cbc0012I Integer solution of 1.8949065e+08 found by DiveCoefficient after 891 iterations and 3 nodes (1.60 seconds)
Cbc0012I Integer solution of 1.8891527e+08 found by DiveCoefficient after 904 iterations and 4 nodes (1.63 seconds)
Cbc0012I Integer solution of 1.8889445e+08 found by DiveCoefficient after 911 iterations and 5 nodes (1.68 seconds)
Cbc0012I Integer solution of 1.8843951e+08 found by DiveCoefficient after 932 iterations and 7 nodes (1.73 seconds)
Cbc0012I Integer solution of 1.8755816e+08 found by DiveCoefficient after 935 iterations and 8 nodes (1.78 seconds)
Cbc0012I Integer solution of 1.841319e+08 found by rounding after 1017 iterations and 24 nodes (1.89 seconds)
Cbc0004I Integer solution of 1.8293322e+08 found after 1018 iterations and 25 nodes (1.90 seconds)
Cbc0038I Full problem 134 rows 4556 columns, reduced to 108 rows 2764 columns - 1 fixed gives 108, 2763 - still too large
Cbc0038I Full problem 134 rows 4556 columns, reduced to 108 rows 2763 columns - too large
Cbc0012I Integer solution of 1.8280026e+08 found by DiveCoefficient after 1283 iterations and 57 nodes (2.13 seconds)
Cbc0004I Integer solution of 1.8277074e+08 found after 1431 iterations and 80 nodes (2.22 seconds)
Cbc0038I Full problem 134 rows 4556 columns, reduced to 98 rows 2080 columns - 1 fixed gives 98, 2079 - still too large
Cbc0038I Full problem 134 rows 4556 columns, reduced to 98 rows 2079 columns - too large
Cbc0010I After 100 nodes, 8 on tree, 1.8277074e+08 best solution, best possible 1.7576811e+08 (2.31 seconds)
Cbc0016I Integer solution of 1.821992e+08 found by strong branching after 1721 iterations and 124 nodes (2.48 seconds)
Cbc0012I Integer solution of 1.8206623e+08 found by DiveCoefficient after 1779 iterations and 134 nodes (2.54 seconds)
Cbc0004I Integer solution of 1.8203671e+08 found after 1857 iterations and 141 nodes (2.60 seconds)
Cbc0012I Integer solution of 1.8196599e+08 found by DiveCoefficient after 2158 iterations and 174 nodes (2.90 seconds)
Cbc0012I Integer solution of 1.818149e+08 found by DiveCoefficient after 2188 iterations and 179 nodes (2.96 seconds)
Cbc0004I Integer solution of 1.8155507e+08 found after 2207 iterations and 186 nodes (2.98 seconds)
Cbc0038I Full problem 134 rows 4556 columns, reduced to 108 rows 2121 columns - 1 fixed gives 108, 2120 - still too large
Cbc0038I Full problem 134 rows 4556 columns, reduced to 108 rows 2120 columns - too large
Cbc0010I After 200 nodes, 9 on tree, 1.8155507e+08 best solution, best possible 1.7576811e+08 (3.07 seconds)
Cbc0012I Integer solution of 1.8139259e+08 found by rounding after 2641 iterations and 233 nodes (3.27 seconds)
Cbc0012I Integer solution of 1.8136225e+08 found by DiveCoefficient after 2792 iterations and 252 nodes (3.36 seconds)
Cbc0004I Integer solution of 1.8046285e+08 found after 2858 iterations and 268 nodes (3.44 seconds)
Cbc0012I Integer solution of 1.8032989e+08 found by DiveCoefficient after 2974 iterations and 283 nodes (3.50 seconds)
Cbc0004I Integer solution of 1.8030037e+08 found after 2991 iterations and 287 nodes (3.51 seconds)
Cbc0010I After 300 nodes, 4 on tree, 1.8030037e+08 best solution, best possible 1.7576811e+08 (3.56 seconds)
Cbc0001I Search completed - best objective 180300365.8360473, took 3785 iterations and 348 nodes (4.08 seconds)
Cbc0032I Strong branching done 1646 times (9143 iterations), fathomed 33 nodes and fixed 185 variables
Cbc0035I Maximum depth 19, 55 variables fixed on reduced cost
Cuts at root node changed objective from 6.5812e+07 to 1.75768e+08
Probing was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.222 seconds)
Gomory was tried 100 times and created 291 cuts of which 0 were active after adding rounds of cuts (0.105 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
MixedIntegerRounding2 was tried 100 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.080 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.352 seconds)
TwoMirCuts was tried 350 times and created 145 cuts of which 0 were active after adding rounds of cuts (0.063 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                180300365.83604729
Enumerated nodes:               348
Total iterations:               3785
Time (CPU seconds):             3.83
Time (Wallclock seconds):       4.09

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.84   (Wallclock seconds):       4.10

