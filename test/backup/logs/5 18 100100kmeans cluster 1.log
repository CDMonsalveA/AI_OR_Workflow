Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/tesis/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/d3fe9a349cb34aa783dc5c28aa3b0f0a-pulp.mps -sec 3600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/d3fe9a349cb34aa783dc5c28aa3b0f0a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 25925 COLUMNS
At line 154246 RHS
At line 180167 BOUNDS
At line 205928 ENDATA
Problem MODEL has 25920 rows, 25760 columns and 102400 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 5.20145e+07 - 1.12 seconds
Cgl0004I processed model has 25920 rows, 25760 columns (160 integer (160 of which binary)) and 102400 elements
Cbc0038I Initial state - 51 integers unsatisfied sum - 10.2621
Cbc0038I Pass   1: (23.59 seconds) suminf.    1.04347 (10) obj. 1.59508e+08 iterations 34125
Cbc0038I Pass   2: (23.62 seconds) suminf.    0.73960 (9) obj. 1.71188e+08 iterations 1
Cbc0038I Solution found of 2.40481e+08
Cbc0038I Relaxing continuous gives 1.48635e+08
Cbc0038I Before mini branch and bound, 103 integers at bound fixed and 23146 continuous
Cbc0038I Full problem 25920 rows 25760 columns, reduced to 2671 rows 2511 columns
Cbc0038I Mini branch and bound did not improve solution (37.43 seconds)
Cbc0038I Round again with cutoff of 1.39758e+08
Cbc0038I Pass   3: (46.89 seconds) suminf.    1.07761 (10) obj. 1.39758e+08 iterations 3975
Cbc0038I Pass   4: (48.16 seconds) suminf.    0.80658 (14) obj. 1.39758e+08 iterations 3065
Cbc0038I Pass   5: (55.10 seconds) suminf.    0.60973 (6) obj. 1.39758e+08 iterations 23169
Cbc0038I Pass   6: (55.57 seconds) suminf.    0.52770 (9) obj. 1.39758e+08 iterations 3097
Cbc0038I Pass   7: (56.61 seconds) suminf.    1.15275 (9) obj. 1.39758e+08 iterations 4155
Cbc0038I Pass   8: (56.62 seconds) suminf.    1.15275 (9) obj. 1.39758e+08 iterations 0
Cbc0038I Pass   9: (57.34 seconds) suminf.    0.35045 (6) obj. 1.39758e+08 iterations 3756
Cbc0038I Pass  10: (57.93 seconds) suminf.    0.76447 (4) obj. 1.39758e+08 iterations 4031
Cbc0038I Pass  11: (58.79 seconds) suminf.    0.32375 (3) obj. 1.39758e+08 iterations 6523
Cbc0038I Pass  12: (59.44 seconds) suminf.    0.76447 (4) obj. 1.39758e+08 iterations 4659
Cbc0038I Pass  13: (60.59 seconds) suminf.    6.19688 (22) obj. 1.39758e+08 iterations 4346
Cbc0038I Pass  14: (61.44 seconds) suminf.    0.44241 (4) obj. 1.39758e+08 iterations 4473
Cbc0038I Pass  15: (61.59 seconds) suminf.    0.68918 (5) obj. 1.39758e+08 iterations 1060
Cbc0038I Pass  16: (62.48 seconds) suminf.    7.57088 (26) obj. 1.39758e+08 iterations 3710
Cbc0038I Pass  17: (62.96 seconds) suminf.    0.67692 (12) obj. 1.39758e+08 iterations 2200
Cbc0038I Pass  18: (63.48 seconds) suminf.    3.27070 (14) obj. 1.39758e+08 iterations 2006
Cbc0038I Pass  19: (63.80 seconds) suminf.    0.73102 (9) obj. 1.39758e+08 iterations 1679
Cbc0038I Pass  20: (64.23 seconds) suminf.    2.82288 (14) obj. 1.39758e+08 iterations 1631
Cbc0038I Pass  21: (64.47 seconds) suminf.    0.70980 (9) obj. 1.39758e+08 iterations 777
Cbc0038I Pass  22: (65.00 seconds) suminf.    2.83825 (14) obj. 1.39758e+08 iterations 2494
Cbc0038I Pass  23: (66.02 seconds) suminf.    6.16976 (24) obj. 1.39758e+08 iterations 3789
Cbc0038I Pass  24: (66.50 seconds) suminf.    0.60261 (8) obj. 1.39758e+08 iterations 2236
Cbc0038I Pass  25: (66.77 seconds) suminf.    3.41557 (15) obj. 1.39758e+08 iterations 1502
Cbc0038I Pass  26: (67.07 seconds) suminf.    1.35490 (14) obj. 1.39758e+08 iterations 1288
Cbc0038I Pass  27: (67.85 seconds) suminf.    0.93417 (10) obj. 1.39758e+08 iterations 3276
Cbc0038I Pass  28: (68.17 seconds) suminf.    0.43992 (7) obj. 1.39758e+08 iterations 1663
Cbc0038I Pass  29: (68.43 seconds) suminf.    2.24203 (8) obj. 1.39758e+08 iterations 1078
Cbc0038I Pass  30: (68.61 seconds) suminf.    0.73645 (9) obj. 1.39758e+08 iterations 805
Cbc0038I Pass  31: (69.06 seconds) suminf.    2.97994 (14) obj. 1.39758e+08 iterations 1730
Cbc0038I Pass  32: (69.27 seconds) suminf.    0.65428 (9) obj. 1.39758e+08 iterations 661
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 21385 continuous
Cbc0038I Full problem 25920 rows 25760 columns, reduced to 4487 rows 4327 columns
Cbc0038I Mini branch and bound did not improve solution (72.59 seconds)
Cbc0038I After 72.59 seconds - Feasibility pump exiting with objective of 1.48635e+08 - took 65.84 seconds
Cbc0012I Integer solution of 1.4863498e+08 found by feasibility pump after 0 iterations and 0 nodes (72.60 seconds)
Cbc0038I Full problem 25920 rows 25760 columns, reduced to 9337 rows 9177 columns
Cbc0031I 891 added rows had average density of 20.338945
Cbc0013I At root node, 891 cuts changed objective from 59863063 to 98194306 in 50 passes
Cbc0014I Cut generator 0 (Probing) - 1329 row cuts average 2.0 elements, 0 column cuts (472 active)  in 0.323 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 201 row cuts average 160.3 elements, 0 column cuts (0 active)  in 0.492 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.391 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1548 row cuts average 26.5 elements, 0 column cuts (0 active)  in 0.308 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 39 row cuts average 17.6 elements, 0 column cuts (0 active)  in 0.338 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 39 row cuts average 48.6 elements, 0 column cuts (0 active)  in 0.362 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1.4863498e+08 best solution, best possible 98194306 (151.99 seconds)
Cbc0010I After 100 nodes, 52 on tree, 1.4863498e+08 best solution, best possible 99236746 (434.87 seconds)
Cbc0010I After 200 nodes, 98 on tree, 1.4863498e+08 best solution, best possible 99236746 (710.09 seconds)
Cbc0010I After 300 nodes, 149 on tree, 1.4863498e+08 best solution, best possible 99236746 (997.76 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1.4863498e+08 best solution, best possible 99236746 (1251.99 seconds)
Cbc0010I After 500 nodes, 249 on tree, 1.4863498e+08 best solution, best possible 99236746 (1466.98 seconds)
Cbc0010I After 600 nodes, 298 on tree, 1.4863498e+08 best solution, best possible 99236746 (1620.33 seconds)
Cbc0010I After 700 nodes, 349 on tree, 1.4863498e+08 best solution, best possible 99236746 (1771.80 seconds)
Cbc0010I After 800 nodes, 399 on tree, 1.4863498e+08 best solution, best possible 99236746 (1997.18 seconds)
Cbc0010I After 900 nodes, 449 on tree, 1.4863498e+08 best solution, best possible 99236746 (2219.96 seconds)
Cbc0010I After 1000 nodes, 498 on tree, 1.4863498e+08 best solution, best possible 99236746 (2490.74 seconds)
Cbc0010I After 1100 nodes, 549 on tree, 1.4863498e+08 best solution, best possible 99236746 (2725.71 seconds)
Cbc0010I After 1200 nodes, 599 on tree, 1.4863498e+08 best solution, best possible 99236746 (2935.17 seconds)
Cbc0010I After 1300 nodes, 649 on tree, 1.4863498e+08 best solution, best possible 99236746 (3125.62 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 1.4863498e+08 best solution, best possible 99236746 (3317.47 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 1.4863498e+08 best solution, best possible 99236746 (3472.44 seconds)
Cbc0030I Thread 0 used 128 times,  waiting to start 1.4828877,  1249 locks, 0.72713542 locked, 0.054863214 waiting for locks
Cbc0030I Thread 1 used 125 times,  waiting to start 3.8752379,  1223 locks, 0.77490449 locked, 0.043714523 waiting for locks
Cbc0030I Thread 2 used 124 times,  waiting to start 7.7520378,  1202 locks, 0.78598905 locked, 0.022153854 waiting for locks
Cbc0030I Thread 3 used 126 times,  waiting to start 12.278966,  1223 locks, 0.7192502 locked, 0.015887737 waiting for locks
Cbc0030I Thread 4 used 141 times,  waiting to start 18.182556,  1367 locks, 0.79701924 locked, 0.0032360554 waiting for locks
Cbc0030I Thread 5 used 125 times,  waiting to start 18.471318,  1236 locks, 0.75061798 locked, 0.0030477047 waiting for locks
Cbc0030I Thread 6 used 131 times,  waiting to start 18.039408,  1258 locks, 0.7831502 locked, 0.011305809 waiting for locks
Cbc0030I Thread 7 used 123 times,  waiting to start 24.968013,  1220 locks, 0.73778915 locked, 0.018675804 waiting for locks
Cbc0030I Thread 8 used 138 times,  waiting to start 28.693511,  1343 locks, 0.82549548 locked, 0.0091397762 waiting for locks
Cbc0030I Thread 9 used 131 times,  waiting to start 31.030849,  1271 locks, 0.74581313 locked, 0.0071828365 waiting for locks
Cbc0030I Thread 10 used 135 times,  waiting to start 34.217475,  1312 locks, 0.75841975 locked, 0.02473712 waiting for locks
Cbc0030I Thread 11 used 134 times,  waiting to start 36.240546,  1297 locks, 0.78847098 locked, 0.039940119 waiting for locks
Cbc0030I Main thread 3434.4912 waiting for threads,  3142 locks, 0.0087430477 locked, 0.011654377 waiting for locks
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1.4863498e+08 (best possible 99236746), took 6947685 iterations and 1550 nodes (3596.14 seconds)
Cbc0032I Strong branching done 4038 times (332516 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 37, 0 variables fixed on reduced cost
Cuts at root node changed objective from 5.98631e+07 to 9.81943e+07
Probing was tried 6518 times and created 22832 cuts of which 6136 were active after adding rounds of cuts (1087.033 seconds)
Gomory was tried 6518 times and created 2613 cuts of which 0 were active after adding rounds of cuts (1886.117 seconds)
Knapsack was tried 650 times and created 0 cuts of which 0 were active after adding rounds of cuts (5.085 seconds)
Clique was tried 650 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.153 seconds)
MixedIntegerRounding2 was tried 6518 times and created 132520 cuts of which 0 were active after adding rounds of cuts (1779.844 seconds)
FlowCover was tried 650 times and created 507 cuts of which 0 were active after adding rounds of cuts (4.393 seconds)
TwoMirCuts was tried 650 times and created 507 cuts of which 0 were active after adding rounds of cuts (4.704 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Stopped on time limit

Objective value:                148634981.04811385
Lower bound:                    99236746.121
Gap:                            0.50
Enumerated nodes:               1550
Total iterations:               6947685
Time (CPU seconds):             38151.52
Time (Wallclock seconds):       3597.39

Option for printingOptions changed from normal to all
Total time (CPU seconds):       38151.66   (Wallclock seconds):       3597.54

