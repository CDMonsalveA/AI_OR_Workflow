Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/tesis/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/c0340571478f48519aae0aa832981b87-pulp.mps -sec 3600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/c0340571478f48519aae0aa832981b87-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 44948 COLUMNS
At line 267976 RHS
At line 312920 BOUNDS
At line 357653 ENDATA
Problem MODEL has 44943 rows, 44732 columns and 178084 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 7.26042e+07 - 2.41 seconds
Cgl0004I processed model has 44943 rows, 44732 columns (211 integer (211 of which binary)) and 178084 elements
Cbc0038I Initial state - 87 integers unsatisfied sum - 18.5541
Cbc0038I Pass   1: (78.65 seconds) suminf.    0.36021 (1) obj. 3.17811e+08 iterations 64318
Cbc0038I Solution found of 3.62812e+08
Cbc0038I Relaxing continuous gives 2.49064e+08
Cbc0038I Before mini branch and bound, 123 integers at bound fixed and 43160 continuous
Cbc0038I Full problem 44943 rows 44732 columns, reduced to 1660 rows 1449 columns
Cbc0038I Mini branch and bound improved solution from 2.49064e+08 to 2.34658e+08 (87.91 seconds)
Cbc0038I Freeing continuous variables gives a solution of 2.34347e+08
Cbc0038I Round again with cutoff of 2.24025e+08
Cbc0038I Pass   2: (132.72 seconds) suminf.    0.29659 (1) obj. 2.24025e+08 iterations 25605
Cbc0038I Pass   3: (137.89 seconds) suminf.    0.21335 (1) obj. 2.24025e+08 iterations 13958
Cbc0038I Pass   4: (151.75 seconds) suminf.    0.48510 (3) obj. 2.24025e+08 iterations 19686
Cbc0038I Pass   5: (152.42 seconds) suminf.    0.45882 (3) obj. 2.24025e+08 iterations 3417
Cbc0038I Pass   6: (153.94 seconds) suminf.    0.35518 (5) obj. 2.24025e+08 iterations 4295
Cbc0038I Pass   7: (154.37 seconds) suminf.    0.34111 (6) obj. 2.24025e+08 iterations 1953
Cbc0038I Pass   8: (155.76 seconds) suminf.    0.48165 (5) obj. 2.24025e+08 iterations 3882
Cbc0038I Pass   9: (155.79 seconds) suminf.    0.48165 (5) obj. 2.24025e+08 iterations 0
Cbc0038I Pass  10: (156.48 seconds) suminf.    0.55364 (3) obj. 2.24025e+08 iterations 2281
Cbc0038I Pass  11: (157.52 seconds) suminf.    0.26421 (2) obj. 2.24025e+08 iterations 5126
Cbc0038I Pass  12: (159.32 seconds) suminf.    0.65451 (2) obj. 2.24025e+08 iterations 6650
Cbc0038I Pass  13: (160.72 seconds) suminf.    7.30578 (23) obj. 2.24025e+08 iterations 3789
Cbc0038I Pass  14: (161.85 seconds) suminf.    0.45690 (3) obj. 2.24025e+08 iterations 4362
Cbc0038I Pass  15: (162.22 seconds) suminf.    0.79638 (3) obj. 2.24025e+08 iterations 1786
Cbc0038I Pass  16: (164.85 seconds) suminf.    6.62279 (23) obj. 2.24025e+08 iterations 5420
Cbc0038I Pass  17: (165.55 seconds) suminf.    1.21327 (12) obj. 2.24025e+08 iterations 2694
Cbc0038I Pass  18: (166.55 seconds) suminf.    3.85899 (15) obj. 2.24025e+08 iterations 2940
Cbc0038I Pass  19: (166.86 seconds) suminf.    1.92255 (15) obj. 2.24025e+08 iterations 1050
Cbc0038I Pass  20: (167.96 seconds) suminf.    2.67789 (16) obj. 2.24025e+08 iterations 4435
Cbc0038I Pass  21: (168.03 seconds) suminf.    2.57976 (17) obj. 2.24025e+08 iterations 85
Cbc0038I Pass  22: (170.07 seconds) suminf.    0.36063 (2) obj. 2.24025e+08 iterations 6053
Cbc0038I Pass  23: (170.87 seconds) suminf.    0.78749 (2) obj. 2.24025e+08 iterations 4847
Cbc0038I Pass  24: (171.08 seconds) suminf.    0.68646 (3) obj. 2.24025e+08 iterations 1657
Cbc0038I Pass  25: (171.59 seconds) suminf.    0.83347 (3) obj. 2.24025e+08 iterations 2264
Cbc0038I Pass  26: (176.04 seconds) suminf.    6.95756 (22) obj. 2.24025e+08 iterations 7977
Cbc0038I Pass  27: (177.01 seconds) suminf.    0.62874 (6) obj. 2.24025e+08 iterations 3924
Cbc0038I Pass  28: (177.30 seconds) suminf.    1.98826 (10) obj. 2.24025e+08 iterations 1058
Cbc0038I Pass  29: (177.54 seconds) suminf.    1.16572 (10) obj. 2.24025e+08 iterations 977
Cbc0038I Pass  30: (178.06 seconds) suminf.    3.74227 (15) obj. 2.24025e+08 iterations 1845
Cbc0038I Pass  31: (178.42 seconds) suminf.    1.16348 (13) obj. 2.24025e+08 iterations 716
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 42195 continuous
Cbc0038I Full problem 44943 rows 44732 columns, reduced to 2703 rows 2492 columns
Cbc0038I Mini branch and bound improved solution from 2.34347e+08 to 2.33466e+08 (180.52 seconds)
Cbc0038I Freeing continuous variables gives a solution of 2.3339e+08
Cbc0038I Round again with cutoff of 2.05445e+08
Cbc0038I Pass  31: (186.08 seconds) suminf.    0.85111 (11) obj. 2.05445e+08 iterations 4002
Cbc0038I Pass  32: (187.36 seconds) suminf.    0.80588 (9) obj. 2.05445e+08 iterations 3270
Cbc0038I Pass  33: (191.08 seconds) suminf.    0.91292 (11) obj. 2.05445e+08 iterations 8003
Cbc0038I Pass  34: (194.36 seconds) suminf.    1.00945 (14) obj. 2.05445e+08 iterations 5490
Cbc0038I Pass  35: (194.94 seconds) suminf.    0.96140 (14) obj. 2.05445e+08 iterations 1998
Cbc0038I Pass  36: (197.82 seconds) suminf.    1.34365 (14) obj. 2.05445e+08 iterations 5395
Cbc0038I Pass  37: (197.96 seconds) suminf.    1.34365 (14) obj. 2.05445e+08 iterations 0
Cbc0038I Pass  38: (199.57 seconds) suminf.    1.72998 (10) obj. 2.05445e+08 iterations 5313
Cbc0038I Pass  39: (199.78 seconds) suminf.    1.37572 (10) obj. 2.05445e+08 iterations 780
Cbc0038I Pass  40: (201.08 seconds) suminf.    1.43927 (9) obj. 2.05445e+08 iterations 4270
Cbc0038I Pass  41: (201.18 seconds) suminf.    1.33371 (8) obj. 2.05445e+08 iterations 241
Cbc0038I Pass  42: (201.90 seconds) suminf.    2.42970 (14) obj. 2.05445e+08 iterations 2631
Cbc0038I Pass  43: (202.30 seconds) suminf.    1.09156 (7) obj. 2.05445e+08 iterations 1424
Cbc0038I Pass  44: (202.65 seconds) suminf.    2.50092 (12) obj. 2.05445e+08 iterations 978
Cbc0038I Pass  45: (206.50 seconds) suminf.   11.01364 (36) obj. 2.05445e+08 iterations 6806
Cbc0038I Pass  46: (208.44 seconds) suminf.    0.99102 (8) obj. 2.05445e+08 iterations 5365
Cbc0038I Pass  47: (208.78 seconds) suminf.    2.47376 (10) obj. 2.05445e+08 iterations 945
Cbc0038I Pass  48: (211.56 seconds) suminf.   12.92214 (40) obj. 2.05445e+08 iterations 5256
Cbc0038I Pass  49: (212.59 seconds) suminf.    3.94614 (26) obj. 2.05445e+08 iterations 2559
Cbc0038I Pass  50: (212.81 seconds) suminf.    2.85911 (22) obj. 2.05445e+08 iterations 435
Cbc0038I Pass  51: (214.35 seconds) suminf.    3.41063 (19) obj. 2.05445e+08 iterations 3631
Cbc0038I Pass  52: (215.35 seconds) suminf.    1.08219 (10) obj. 2.05445e+08 iterations 2622
Cbc0038I Pass  53: (215.90 seconds) suminf.    4.08684 (14) obj. 2.05445e+08 iterations 987
Cbc0038I Pass  54: (219.03 seconds) suminf.   10.01762 (32) obj. 2.05445e+08 iterations 5151
Cbc0038I Pass  55: (220.37 seconds) suminf.    1.49233 (15) obj. 2.05445e+08 iterations 3357
Cbc0038I Pass  56: (220.70 seconds) suminf.    6.12786 (23) obj. 2.05445e+08 iterations 781
Cbc0038I Pass  57: (221.28 seconds) suminf.    2.08532 (18) obj. 2.05445e+08 iterations 1255
Cbc0038I Pass  58: (222.07 seconds) suminf.    6.55271 (28) obj. 2.05445e+08 iterations 1277
Cbc0038I Pass  59: (222.76 seconds) suminf.    2.08589 (22) obj. 2.05445e+08 iterations 1371
Cbc0038I Pass  60: (224.16 seconds) suminf.    5.79280 (24) obj. 2.05445e+08 iterations 2494
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 40375 continuous
Cbc0038I Full problem 44943 rows 44732 columns, reduced to 4517 rows 4306 columns
Cbc0038I Mini branch and bound did not improve solution (227.83 seconds)
Cbc0038I After 227.84 seconds - Feasibility pump exiting with objective of 2.3339e+08 - took 208.71 seconds
Cbc0012I Integer solution of 2.3338952e+08 found by feasibility pump after 0 iterations and 0 nodes (227.85 seconds)
Cbc0038I Full problem 44943 rows 44732 columns, reduced to 22683 rows 22472 columns - 9 fixed gives 20784, 22463 - still too large
Cbc0038I Full problem 44943 rows 44732 columns, reduced to 20784 rows 22463 columns - too large
Cbc0031I 1421 added rows had average density of 20.040113
Cbc0013I At root node, 1421 cuts changed objective from 1.3112518e+08 to 1.7318267e+08 in 50 passes
Cbc0014I Cut generator 0 (Probing) - 1102 row cuts average 2.0 elements, 0 column cuts (734 active)  in 0.554 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 248 row cuts average 232.6 elements, 0 column cuts (0 active)  in 0.899 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.591 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2081 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.519 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 221 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.781 seconds - new frequency is 1
Cbc0014I Cut generator 6 (TwoMirCuts) - 40 row cuts average 33.3 elements, 0 column cuts (0 active)  in 0.720 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 2.3338952e+08 best solution, best possible 1.7318267e+08 (387.63 seconds)
Cbc0010I After 100 nodes, 52 on tree, 2.3338952e+08 best solution, best possible 1.7355275e+08 (707.73 seconds)
Cbc0010I After 200 nodes, 101 on tree, 2.3338952e+08 best solution, best possible 1.7355275e+08 (1038.94 seconds)
Cbc0010I After 300 nodes, 151 on tree, 2.3338952e+08 best solution, best possible 1.7355275e+08 (1344.72 seconds)
Cbc0010I After 400 nodes, 202 on tree, 2.3338952e+08 best solution, best possible 1.7355275e+08 (1628.69 seconds)
Cbc0010I After 500 nodes, 254 on tree, 2.3338952e+08 best solution, best possible 1.7355275e+08 (1929.60 seconds)
Cbc0010I After 600 nodes, 306 on tree, 2.3338952e+08 best solution, best possible 1.7355275e+08 (2262.58 seconds)
Cbc0010I After 700 nodes, 361 on tree, 2.3338952e+08 best solution, best possible 1.7355275e+08 (2564.63 seconds)
Cbc0010I After 800 nodes, 418 on tree, 2.3338952e+08 best solution, best possible 1.7355275e+08 (2878.67 seconds)
Cbc0010I After 900 nodes, 470 on tree, 2.3338952e+08 best solution, best possible 1.7355275e+08 (3114.89 seconds)
Cbc0010I After 1000 nodes, 521 on tree, 2.3338952e+08 best solution, best possible 1.7355275e+08 (3324.76 seconds)
Cbc0010I After 1100 nodes, 572 on tree, 2.3338952e+08 best solution, best possible 1.7355275e+08 (3493.19 seconds)
Cbc0030I Thread 0 used 102 times,  waiting to start 1.881417,  949 locks, 1.0994902 locked, 0.029682159 waiting for locks
Cbc0030I Thread 1 used 84 times,  waiting to start 5.2875476,  804 locks, 0.93771482 locked, 0.032296419 waiting for locks
Cbc0030I Thread 2 used 97 times,  waiting to start 9.6995273,  891 locks, 1.1103473 locked, 0.045495749 waiting for locks
Cbc0030I Thread 3 used 98 times,  waiting to start 16.94594,  922 locks, 1.1182177 locked, 0.040750265 waiting for locks
Cbc0030I Thread 4 used 104 times,  waiting to start 25.132134,  963 locks, 1.1286783 locked, 0.014271736 waiting for locks
Cbc0030I Thread 5 used 96 times,  waiting to start 28.14967,  910 locks, 1.0436285 locked, 0.012124538 waiting for locks
Cbc0030I Thread 6 used 96 times,  waiting to start 31.823403,  897 locks, 1.0336399 locked, 0.017624855 waiting for locks
Cbc0030I Thread 7 used 101 times,  waiting to start 50.031241,  934 locks, 1.1461873 locked, 0.041957617 waiting for locks
Cbc0030I Thread 8 used 89 times,  waiting to start 50.237114,  828 locks, 1.0334849 locked, 0.029326439 waiting for locks
Cbc0030I Thread 9 used 99 times,  waiting to start 53.289501,  909 locks, 1.0883837 locked, 0.0128901 waiting for locks
Cbc0030I Thread 10 used 102 times,  waiting to start 65.79213,  951 locks, 1.0720353 locked, 0.028505802 waiting for locks
Cbc0030I Thread 11 used 90 times,  waiting to start 77.881581,  825 locks, 1.0525081 locked, 0.016692638 waiting for locks
Cbc0030I Main thread 3187.7228 waiting for threads,  2332 locks, 0.012764454 locked, 0.025967836 waiting for locks
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 2.3338952e+08 (best possible 1.7355275e+08), took 3375048 iterations and 1147 nodes (3585.59 seconds)
Cbc0032I Strong branching done 5834 times (502328 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 94, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.31125e+08 to 1.73183e+08
Probing was tried 4523 times and created 14326 cuts of which 9542 were active after adding rounds of cuts (1160.335 seconds)
Gomory was tried 4523 times and created 3224 cuts of which 0 were active after adding rounds of cuts (2341.075 seconds)
Knapsack was tried 650 times and created 0 cuts of which 0 were active after adding rounds of cuts (7.687 seconds)
Clique was tried 650 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.256 seconds)
MixedIntegerRounding2 was tried 4523 times and created 92401 cuts of which 0 were active after adding rounds of cuts (2414.515 seconds)
FlowCover was tried 4523 times and created 2874 cuts of which 0 were active after adding rounds of cuts (1884.573 seconds)
TwoMirCuts was tried 650 times and created 520 cuts of which 0 were active after adding rounds of cuts (9.364 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Stopped on time limit

Objective value:                233389519.21610197
Lower bound:                    173552751.711
Gap:                            0.34
Enumerated nodes:               1147
Total iterations:               3375048
Time (CPU seconds):             36538.78
Time (Wallclock seconds):       3586.78

Option for printingOptions changed from normal to all
Total time (CPU seconds):       36538.96   (Wallclock seconds):       3586.99

