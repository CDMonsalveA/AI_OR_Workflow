Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/tesis/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/eac8059ebd1a4011b7ad0bb94057a8c9-pulp.mps -sec 3600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/eac8059ebd1a4011b7ad0bb94057a8c9-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 6893 COLUMNS
At line 40678 RHS
At line 47567 BOUNDS
At line 54374 ENDATA
Problem MODEL has 6888 rows, 6806 columns and 26896 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 4.44007e+07 - 0.10 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 391 strengthened rows, 0 substitutions
Cgl0004I processed model has 6888 rows, 6806 columns (82 integer (82 of which binary)) and 26978 elements
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.01376
Cbc0038I Pass   1: (2.71 seconds) suminf.    0.00000 (0) obj. 7.25941e+07 iterations 453
Cbc0038I Solution found of 7.25941e+07
Cbc0038I Relaxing continuous gives 7.18621e+07
Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 6646 continuous
Cbc0038I Full problem 6888 rows 6806 columns, reduced to 56 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (2.77 seconds)
Cbc0038I Round again with cutoff of 7.14234e+07
Cbc0038I Pass   2: (2.97 seconds) suminf.    0.04173 (1) obj. 7.14234e+07 iterations 649
Cbc0038I Pass   3: (2.99 seconds) suminf.    0.37376 (1) obj. 7.14234e+07 iterations 302
Cbc0038I Pass   4: (3.29 seconds) suminf.    0.71003 (2) obj. 7.14234e+07 iterations 2082
Cbc0038I Pass   5: (3.36 seconds) suminf.    0.07124 (1) obj. 7.14234e+07 iterations 576
Cbc0038I Pass   6: (3.40 seconds) suminf.    0.10515 (1) obj. 7.14234e+07 iterations 861
Cbc0038I Pass   7: (3.53 seconds) suminf.    1.60306 (4) obj. 7.14234e+07 iterations 1152
Cbc0038I Pass   8: (3.57 seconds) suminf.    0.17263 (1) obj. 7.14234e+07 iterations 518
Cbc0038I Pass   9: (3.61 seconds) suminf.    0.52239 (2) obj. 7.14234e+07 iterations 418
Cbc0038I Pass  10: (3.66 seconds) suminf.    0.12283 (1) obj. 7.14234e+07 iterations 808
Cbc0038I Pass  11: (3.66 seconds) suminf.    0.12283 (1) obj. 7.14234e+07 iterations 0
Cbc0038I Pass  12: (3.77 seconds) suminf.    1.92835 (10) obj. 7.14234e+07 iterations 1029
Cbc0038I Pass  13: (3.80 seconds) suminf.    0.65417 (5) obj. 7.14234e+07 iterations 238
Cbc0038I Pass  14: (3.86 seconds) suminf.    0.33675 (1) obj. 7.14234e+07 iterations 990
Cbc0038I Pass  15: (3.86 seconds) suminf.    0.33675 (1) obj. 7.14234e+07 iterations 0
Cbc0038I Pass  16: (3.89 seconds) suminf.    0.07124 (1) obj. 7.14234e+07 iterations 253
Cbc0038I Pass  17: (3.93 seconds) suminf.    0.18776 (1) obj. 7.14234e+07 iterations 827
Cbc0038I Pass  18: (3.99 seconds) suminf.    1.24729 (8) obj. 7.14234e+07 iterations 757
Cbc0038I Pass  19: (4.03 seconds) suminf.    0.07124 (1) obj. 7.14234e+07 iterations 297
Cbc0038I Pass  20: (4.06 seconds) suminf.    0.11832 (1) obj. 7.14234e+07 iterations 728
Cbc0038I Pass  21: (4.14 seconds) suminf.    0.38742 (2) obj. 7.14234e+07 iterations 821
Cbc0038I Pass  22: (4.15 seconds) suminf.    0.38742 (2) obj. 7.14234e+07 iterations 16
Cbc0038I Pass  23: (4.20 seconds) suminf.    0.71219 (2) obj. 7.14234e+07 iterations 519
Cbc0038I Pass  24: (4.30 seconds) suminf.    0.07124 (1) obj. 7.14234e+07 iterations 724
Cbc0038I Pass  25: (4.35 seconds) suminf.    0.10867 (1) obj. 7.14234e+07 iterations 961
Cbc0038I Pass  26: (4.46 seconds) suminf.    1.31420 (6) obj. 7.14234e+07 iterations 1066
Cbc0038I Pass  27: (4.51 seconds) suminf.    0.49664 (1) obj. 7.14234e+07 iterations 487
Cbc0038I Pass  28: (4.56 seconds) suminf.    0.07124 (1) obj. 7.14234e+07 iterations 362
Cbc0038I Pass  29: (4.60 seconds) suminf.    0.09301 (1) obj. 7.14234e+07 iterations 644
Cbc0038I Pass  30: (4.69 seconds) suminf.    0.99168 (4) obj. 7.14234e+07 iterations 830
Cbc0038I Pass  31: (4.70 seconds) suminf.    0.99168 (4) obj. 7.14234e+07 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 6302 continuous
Cbc0038I Full problem 6888 rows 6806 columns, reduced to 525 rows 459 columns
Cbc0038I Mini branch and bound improved solution from 7.18621e+07 to 6.95535e+07 (5.04 seconds)
Cbc0038I Freeing continuous variables gives a solution of 6.93604e+07
Cbc0038I Round again with cutoff of 6.89833e+07
Cbc0038I Pass  31: (5.10 seconds) suminf.    0.28506 (1) obj. 6.89833e+07 iterations 114
Cbc0038I Pass  32: (5.11 seconds) suminf.    0.37376 (1) obj. 6.89833e+07 iterations 51
Cbc0038I Pass  33: (5.33 seconds) suminf.    2.55757 (11) obj. 6.89833e+07 iterations 1498
Cbc0038I Pass  34: (5.39 seconds) suminf.    0.45980 (3) obj. 6.89833e+07 iterations 353
Cbc0038I Pass  35: (5.86 seconds) suminf.    0.80932 (3) obj. 6.89833e+07 iterations 2982
Cbc0038I Pass  36: (6.32 seconds) suminf.    0.45025 (1) obj. 6.89833e+07 iterations 3996
Cbc0038I Pass  37: (6.32 seconds) suminf.    0.45025 (1) obj. 6.89833e+07 iterations 0
Cbc0038I Pass  38: (6.37 seconds) suminf.    0.33013 (1) obj. 6.89833e+07 iterations 713
Cbc0038I Pass  39: (6.40 seconds) suminf.    0.35101 (1) obj. 6.89833e+07 iterations 414
Cbc0038I Pass  40: (6.49 seconds) suminf.    0.91491 (3) obj. 6.89833e+07 iterations 683
Cbc0038I Pass  41: (6.59 seconds) suminf.    0.79378 (3) obj. 6.89833e+07 iterations 1027
Cbc0038I Pass  42: (6.94 seconds) suminf.    0.37376 (1) obj. 6.89833e+07 iterations 2069
Cbc0038I Pass  43: (7.01 seconds) suminf.    0.35132 (1) obj. 6.89833e+07 iterations 1358
Cbc0038I Pass  44: (7.17 seconds) suminf.    0.82520 (8) obj. 6.89833e+07 iterations 1257
Cbc0038I Pass  45: (7.23 seconds) suminf.    0.49508 (2) obj. 6.89833e+07 iterations 481
Cbc0038I Pass  46: (7.31 seconds) suminf.    0.02099 (1) obj. 6.89833e+07 iterations 907
Cbc0038I Pass  47: (7.32 seconds) suminf.    0.07764 (1) obj. 6.89833e+07 iterations 64
Cbc0038I Pass  48: (7.61 seconds) suminf.    2.01268 (8) obj. 6.89833e+07 iterations 1914
Cbc0038I Pass  49: (7.64 seconds) suminf.    1.01816 (4) obj. 6.89833e+07 iterations 257
Cbc0038I Pass  50: (7.76 seconds) suminf.    0.37376 (1) obj. 6.89833e+07 iterations 1088
Cbc0038I Pass  51: (7.78 seconds) suminf.    0.36161 (1) obj. 6.89833e+07 iterations 334
Cbc0038I Pass  52: (7.87 seconds) suminf.    1.13699 (5) obj. 6.89833e+07 iterations 670
Cbc0038I Pass  53: (7.90 seconds) suminf.    0.86479 (3) obj. 6.89833e+07 iterations 164
Cbc0038I Pass  54: (8.11 seconds) suminf.    0.16403 (1) obj. 6.89833e+07 iterations 1769
Cbc0038I Pass  55: (8.14 seconds) suminf.    0.47819 (1) obj. 6.89833e+07 iterations 441
Cbc0038I Pass  56: (8.17 seconds) suminf.    0.46203 (1) obj. 6.89833e+07 iterations 430
Cbc0038I Pass  57: (8.23 seconds) suminf.    0.78097 (2) obj. 6.89833e+07 iterations 611
Cbc0038I Pass  58: (8.27 seconds) suminf.    0.33013 (1) obj. 6.89833e+07 iterations 279
Cbc0038I Pass  59: (8.29 seconds) suminf.    0.34927 (1) obj. 6.89833e+07 iterations 405
Cbc0038I Pass  60: (8.38 seconds) suminf.    1.28056 (6) obj. 6.89833e+07 iterations 666
Cbc0038I Rounding solution of 6.92858e+07 is better than previous of 6.93604e+07

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 6345 continuous
Cbc0038I Full problem 6888 rows 6806 columns, reduced to 482 rows 408 columns
Cbc0038I Mini branch and bound improved solution from 6.92858e+07 to 6.81814e+07 (8.62 seconds)
Cbc0038I Freeing continuous variables gives a solution of 6.81455e+07
Cbc0038I Round again with cutoff of 6.79443e+07
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  60: (8.66 seconds) suminf.    0.57878 (2) obj. 6.79443e+07 iterations 120
Cbc0038I Pass  61: (8.81 seconds) suminf.    0.47819 (1) obj. 6.79443e+07 iterations 1335
Cbc0038I Pass  62: (8.83 seconds) suminf.    0.48691 (1) obj. 6.79443e+07 iterations 299
Cbc0038I Pass  63: (8.94 seconds) suminf.    1.38273 (4) obj. 6.79443e+07 iterations 739
Cbc0038I Pass  64: (8.95 seconds) suminf.    1.32684 (4) obj. 6.79443e+07 iterations 111
Cbc0038I Pass  65: (9.13 seconds) suminf.    0.76292 (2) obj. 6.79443e+07 iterations 1411
Cbc0038I Pass  66: (9.14 seconds) suminf.    0.76292 (2) obj. 6.79443e+07 iterations 8
Cbc0038I Pass  67: (9.27 seconds) suminf.    0.29511 (2) obj. 6.79443e+07 iterations 1011
Cbc0038I Pass  68: (9.32 seconds) suminf.    0.28250 (1) obj. 6.79443e+07 iterations 514
Cbc0038I Pass  69: (9.39 seconds) suminf.    1.23536 (5) obj. 6.79443e+07 iterations 438
Cbc0038I Pass  70: (9.40 seconds) suminf.    1.23536 (5) obj. 6.79443e+07 iterations 37
Cbc0038I Pass  71: (9.77 seconds) suminf.    0.75825 (3) obj. 6.79443e+07 iterations 2343
Cbc0038I Pass  72: (9.96 seconds) suminf.    1.25742 (4) obj. 6.79443e+07 iterations 1528
Cbc0038I Pass  73: (10.02 seconds) suminf.    0.51055 (2) obj. 6.79443e+07 iterations 329
Cbc0038I Pass  74: (10.06 seconds) suminf.    0.27804 (1) obj. 6.79443e+07 iterations 437
Cbc0038I Pass  75: (10.13 seconds) suminf.    0.59968 (4) obj. 6.79443e+07 iterations 501
Cbc0038I Pass  76: (10.14 seconds) suminf.    0.59968 (4) obj. 6.79443e+07 iterations 17
Cbc0038I Pass  77: (10.20 seconds) suminf.    0.43089 (2) obj. 6.79443e+07 iterations 505
Cbc0038I Pass  78: (10.26 seconds) suminf.    1.10107 (3) obj. 6.79443e+07 iterations 558
Cbc0038I Pass  79: (10.32 seconds) suminf.    0.43089 (2) obj. 6.79443e+07 iterations 442
Cbc0038I Pass  80: (10.68 seconds) suminf.    1.78120 (7) obj. 6.79443e+07 iterations 2291
Cbc0038I Pass  81: (10.72 seconds) suminf.    0.82020 (2) obj. 6.79443e+07 iterations 371
Cbc0038I Pass  82: (11.24 seconds) suminf.    0.65593 (3) obj. 6.79443e+07 iterations 3255
Cbc0038I Pass  83: (11.35 seconds) suminf.    0.82020 (2) obj. 6.79443e+07 iterations 790
Cbc0038I Pass  84: (11.46 seconds) suminf.    0.83071 (3) obj. 6.79443e+07 iterations 741
Cbc0038I Pass  85: (11.92 seconds) suminf.    0.66959 (3) obj. 6.79443e+07 iterations 2710
Cbc0038I Pass  86: (12.06 seconds) suminf.    0.81270 (2) obj. 6.79443e+07 iterations 1020
Cbc0038I Pass  87: (12.73 seconds) suminf.    0.66133 (3) obj. 6.79443e+07 iterations 3853
Cbc0038I Pass  88: (12.81 seconds) suminf.    0.90010 (6) obj. 6.79443e+07 iterations 411
Cbc0038I Pass  89: (13.12 seconds) suminf.    0.73784 (3) obj. 6.79443e+07 iterations 1970
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 6455 continuous
Cbc0038I Full problem 6888 rows 6806 columns, reduced to 328 rows 283 columns
Cbc0038I Mini branch and bound did not improve solution (13.15 seconds)
Cbc0038I After 13.15 seconds - Feasibility pump exiting with objective of 6.81455e+07 - took 10.47 seconds
Cbc0012I Integer solution of 68145485 found by feasibility pump after 0 iterations and 0 nodes (13.15 seconds)
Cbc0038I Full problem 6888 rows 6806 columns, reduced to 589 rows 1236 columns
Cbc0031I 2 added rows had average density of 70
Cbc0013I At root node, 2 cuts changed objective from 67474937 to 67486470 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 3 row cuts average 137.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 68145485 best solution, best possible 67486470 (14.04 seconds)
Cbc0012I Integer solution of 67995856 found by DiveCoefficient after 2357 iterations and 14 nodes (15.81 seconds)
Cbc0012I Integer solution of 67995856 found by heuristic after 2191 iterations and 13 nodes (15.96 seconds)
Cbc0030I Thread 0 used 18 times,  waiting to start 0.23604608, 6.120624 cpu time, 85 locks, 0.0015842915 locked, 0.0005698204 waiting for locks
Cbc0030I Thread 1 used 12 times,  waiting to start 0.93140912, 5.341594 cpu time, 61 locks, 0.0013852119 locked, 0.00044608116 waiting for locks
Cbc0030I Thread 2 used 5 times,  waiting to start 1.6602404, 3.836676 cpu time, 24 locks, 0.00042510033 locked, 0.00029754639 waiting for locks
Cbc0030I Thread 3 used 2 times,  waiting to start 2.7672293, 0.913303 cpu time, 9 locks, 0.0003452301 locked, 9.4890594e-05 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 3.0684202, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 3.0637262, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 3.05917, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 3.0545878, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 3.049407, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 3.0432451, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 3.0372, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 3.0309589, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 2.1510777 waiting for threads,  81 locks, 0.00016546249 locked, 0.0013391972 waiting for locks
Cbc0001I Search completed - best objective 67995856.41817735, took 4453 iterations and 37 nodes (17.06 seconds)
Cbc0032I Strong branching done 358 times (22694 iterations), fathomed 6 nodes and fixed 0 variables
Cbc0035I Maximum depth 7, 13 variables fixed on reduced cost
Cuts at root node changed objective from 6.74749e+07 to 6.74865e+07
Probing was tried 39 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.072 seconds)
Gomory was tried 39 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.058 seconds)
Knapsack was tried 39 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.085 seconds)
Clique was tried 39 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
MixedIntegerRounding2 was tried 59 times and created 40 cuts of which 0 were active after adding rounds of cuts (0.088 seconds)
FlowCover was tried 59 times and created 14 cuts of which 0 were active after adding rounds of cuts (0.035 seconds)
TwoMirCuts was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                67995856.41817735
Enumerated nodes:               37
Total iterations:               4453
Time (CPU seconds):             20.60
Time (Wallclock seconds):       17.25

Option for printingOptions changed from normal to all
Total time (CPU seconds):       20.63   (Wallclock seconds):       17.28

