Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/1905654163cd4782957fdc2f40cd0342-pulp.mps -sec 60 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/1905654163cd4782957fdc2f40cd0342-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 93 COLUMNS
At line 9906 RHS
At line 9995 BOUNDS
At line 11976 ENDATA
Problem MODEL has 88 rows, 1980 columns and 3916 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 60
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.10172 - 0.00 seconds
Cgl0004I processed model has 88 rows, 1980 columns (1980 integer (1980 of which binary)) and 3916 elements
Cbc0038I Initial state - 44 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (44) obj. 1.10172 iterations 0
Cbc0038I Pass   2: suminf.    0.45455 (20) obj. 26.9422 iterations 24
Cbc0038I Solution found of 48.4759
Cbc0038I Before mini branch and bound, 1936 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 1980 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of 43.7384
Cbc0038I Pass   3: suminf.    1.00000 (44) obj. 1.10172 iterations 0
Cbc0038I Pass   4: suminf.    0.65909 (29) obj. 17.252 iterations 15
Cbc0038I Pass   5: suminf.    0.20455 (9) obj. 38.7857 iterations 20
Cbc0038I Pass   6: suminf.    0.48183 (5) obj. 43.7384 iterations 14
Cbc0038I Pass   7: suminf.    0.48183 (5) obj. 43.7384 iterations 0
Cbc0038I Pass   8: suminf.    0.48183 (5) obj. 43.7384 iterations 1
Cbc0038I Pass   9: suminf.    0.48183 (5) obj. 43.7384 iterations 0
Cbc0038I Pass  10: suminf.    0.48183 (5) obj. 43.7384 iterations 1
Cbc0038I Pass  11: suminf.    0.20982 (7) obj. 43.7384 iterations 30
Cbc0038I Pass  12: suminf.    0.20982 (7) obj. 43.7384 iterations 8
Cbc0038I Pass  13: suminf.    0.20982 (7) obj. 43.7384 iterations 4
Cbc0038I Pass  14: suminf.    0.20982 (7) obj. 43.7384 iterations 0
Cbc0038I Pass  15: suminf.    0.20982 (7) obj. 43.7384 iterations 1
Cbc0038I Pass  16: suminf.    0.20982 (7) obj. 43.7384 iterations 0
Cbc0038I Pass  17: suminf.    0.20982 (7) obj. 43.7384 iterations 1
Cbc0038I Pass  18: suminf.    0.16855 (6) obj. 43.7384 iterations 50
Cbc0038I Pass  19: suminf.    0.08268 (4) obj. 43.7384 iterations 26
Cbc0038I Pass  20: suminf.    0.08268 (4) obj. 43.7384 iterations 56
Cbc0038I Pass  21: suminf.    0.08268 (4) obj. 43.7384 iterations 0
Cbc0038I Pass  22: suminf.    0.12813 (4) obj. 43.7384 iterations 4
Cbc0038I Pass  23: suminf.    0.12813 (4) obj. 43.7384 iterations 0
Cbc0038I Pass  24: suminf.    0.08268 (4) obj. 43.7384 iterations 1
Cbc0038I Pass  25: suminf.    0.63580 (3) obj. 43.7384 iterations 90
Cbc0038I Pass  26: suminf.    0.02273 (1) obj. 43.5579 iterations 68
Cbc0038I Pass  27: suminf.    0.18663 (1) obj. 43.7384 iterations 34
Cbc0038I Pass  28: suminf.    0.02273 (1) obj. 43.5579 iterations 66
Cbc0038I Pass  29: suminf.    0.61059 (4) obj. 43.7384 iterations 102
Cbc0038I Pass  30: suminf.    0.04545 (2) obj. 43.6471 iterations 85
Cbc0038I Pass  31: suminf.    0.12837 (2) obj. 43.7384 iterations 47
Cbc0038I Pass  32: suminf.    0.09091 (2) obj. 43.6972 iterations 85
Cbc0038I Rounding solution of 34.719 is better than previous of 48.4759

Cbc0038I Before mini branch and bound, 1836 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 1980 columns, reduced to 55 rows 116 columns
Cbc0038I Mini branch and bound improved solution from 34.719 to 24.9548 (0.07 seconds)
Cbc0038I Round again with cutoff of 20.1842
Cbc0038I Pass  32: suminf.    1.00000 (44) obj. 1.10172 iterations 0
Cbc0038I Pass  33: suminf.    0.72727 (32) obj. 14.0219 iterations 12
Cbc0038I Pass  34: suminf.    0.86126 (27) obj. 20.1842 iterations 20
Cbc0038I Pass  35: suminf.    0.86126 (27) obj. 20.1842 iterations 0
Cbc0038I Pass  36: suminf.    0.86126 (27) obj. 20.1842 iterations 1
Cbc0038I Pass  37: suminf.    0.86126 (27) obj. 20.1842 iterations 0
Cbc0038I Pass  38: suminf.    0.86126 (27) obj. 20.1842 iterations 2
Cbc0038I Pass  39: suminf.    0.86126 (27) obj. 20.1842 iterations 0
Cbc0038I Pass  40: suminf.    0.86126 (27) obj. 20.1842 iterations 1
Cbc0038I Pass  41: suminf.    0.86126 (27) obj. 20.1842 iterations 0
Cbc0038I Pass  42: suminf.    0.86126 (27) obj. 20.1842 iterations 1
Cbc0038I Pass  43: suminf.    0.72264 (26) obj. 20.1842 iterations 40
Cbc0038I Pass  44: suminf.    0.72264 (26) obj. 20.1842 iterations 17
Cbc0038I Pass  45: suminf.    0.67719 (25) obj. 20.1842 iterations 7
Cbc0038I Pass  46: suminf.    0.67719 (25) obj. 20.1842 iterations 1
Cbc0038I Pass  47: suminf.    0.63174 (25) obj. 20.1842 iterations 8
Cbc0038I Pass  48: suminf.    0.63174 (25) obj. 20.1842 iterations 1
Cbc0038I Pass  49: suminf.    0.67719 (25) obj. 20.1842 iterations 6
Cbc0038I Pass  50: suminf.    0.53001 (19) obj. 20.1842 iterations 37
Cbc0038I Pass  51: suminf.    0.52273 (18) obj. 20.1762 iterations 29
Cbc0038I Pass  52: suminf.    0.53001 (18) obj. 20.1842 iterations 27
Cbc0038I Pass  53: suminf.    0.73826 (20) obj. 20.1842 iterations 44
Cbc0038I Pass  54: suminf.    0.56818 (19) obj. 19.9968 iterations 35
Cbc0038I Pass  55: suminf.    0.73826 (19) obj. 20.1842 iterations 35
Cbc0038I Pass  56: suminf.    0.78667 (20) obj. 20.1842 iterations 74
Cbc0038I Pass  57: suminf.    0.56818 (18) obj. 20.1626 iterations 39
Cbc0038I Pass  58: suminf.    0.58777 (17) obj. 20.1842 iterations 45
Cbc0038I Pass  59: suminf.    0.54545 (17) obj. 20.1376 iterations 42
Cbc0038I Pass  60: suminf.    0.58777 (17) obj. 20.1842 iterations 43
Cbc0038I Pass  61: suminf.    0.81186 (21) obj. 20.1842 iterations 88
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1850 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 1980 columns, reduced to 48 rows 100 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of 24.9548 - took 0.07 seconds
Cbc0012I Integer solution of 24.954833 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0012I Integer solution of 11.61672 found by DiveCoefficient after 1520 iterations and 0 nodes (0.45 seconds)
Cbc0031I 254 added rows had average density of 16.503937
Cbc0013I At root node, 254 cuts changed objective from 1.1017241 to 11.61672 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 465 row cuts average 2.5 elements, 0 column cuts (203 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 153 row cuts average 142.1 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 414 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 330 row cuts average 49.7 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 224 row cuts average 148.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 0.087257147, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.079628944, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.072139025, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.064297915, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.056343794, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.048082113, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.040508032, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.032776117, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.025409937, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.01782608, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.010472059, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.002972126, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 7.1525574e-06 locked, 0 waiting for locks
Cbc0001I Search completed - best objective 11.61672038770677, took 1520 iterations and 0 nodes (0.58 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.10172 to 11.6167
Probing was tried 156 times and created 6045 cuts of which 2639 were active after adding rounds of cuts (0.786 seconds)
Gomory was tried 156 times and created 1989 cuts of which 0 were active after adding rounds of cuts (0.597 seconds)
Knapsack was tried 156 times and created 5382 cuts of which 0 were active after adding rounds of cuts (0.257 seconds)
Clique was tried 156 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
MixedIntegerRounding2 was tried 156 times and created 4290 cuts of which 0 were active after adding rounds of cuts (0.250 seconds)
FlowCover was tried 156 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
TwoMirCuts was tried 156 times and created 2912 cuts of which 0 were active after adding rounds of cuts (0.371 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                11.61672039
Enumerated nodes:               0
Total iterations:               1520
Time (CPU seconds):             0.52
Time (Wallclock seconds):       0.59

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.52   (Wallclock seconds):       0.59

