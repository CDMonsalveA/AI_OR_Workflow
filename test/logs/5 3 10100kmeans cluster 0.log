Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/tesis/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/9b9a1d48ea29423cbbe22e9ddd9fd037-pulp.mps -sec 3600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/9b9a1d48ea29423cbbe22e9ddd9fd037-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 328 COLUMNS
At line 1808 RHS
At line 2132 BOUNDS
At line 2439 ENDATA
Problem MODEL has 323 rows, 306 columns and 1156 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.55617e+07 - 0.00 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0004I processed model has 323 rows, 306 columns (17 integer (17 of which binary)) and 1173 elements
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.348429
Cbc0038I Pass   1: suminf.    0.07465 (1) obj. 1.768e+07 iterations 22
Cbc0038I Solution found of 2.21263e+07
Cbc0038I Relaxing continuous gives 2.02712e+07
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 260 continuous
Cbc0038I Full problem 323 rows 306 columns, reduced to 34 rows 29 columns
Cbc0038I Mini branch and bound improved solution from 2.02712e+07 to 1.84433e+07 (0.01 seconds)
Cbc0038I Round again with cutoff of 1.83265e+07
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.16807 (1) obj. 1.78208e+07 iterations 16
Cbc0038I Pass   3: suminf.    0.37489 (1) obj. 1.83265e+07 iterations 50
Cbc0038I Pass   4: suminf.    0.83094 (3) obj. 1.83265e+07 iterations 65
Cbc0038I Pass   5: suminf.    0.65461 (3) obj. 1.83265e+07 iterations 51
Cbc0038I Pass   6: suminf.    0.28967 (1) obj. 1.83265e+07 iterations 24
Cbc0038I Pass   7: suminf.    0.16807 (1) obj. 1.83265e+07 iterations 20
Cbc0038I Pass   8: suminf.    0.57467 (2) obj. 1.83265e+07 iterations 52
Cbc0038I Pass   9: suminf.    0.57467 (2) obj. 1.83265e+07 iterations 1
Cbc0038I Pass  10: suminf.    0.16807 (1) obj. 1.83265e+07 iterations 41
Cbc0038I Pass  11: suminf.    0.37489 (1) obj. 1.83265e+07 iterations 69
Cbc0038I Pass  12: suminf.    0.14625 (1) obj. 1.83265e+07 iterations 47
Cbc0038I Pass  13: suminf.    1.60983 (6) obj. 1.83265e+07 iterations 43
Cbc0038I Pass  14: suminf.    1.15828 (3) obj. 1.83265e+07 iterations 56
Cbc0038I Pass  15: suminf.    0.29078 (1) obj. 1.83265e+07 iterations 43
Cbc0038I Pass  16: suminf.    0.33985 (1) obj. 1.83265e+07 iterations 38
Cbc0038I Pass  17: suminf.    0.16807 (1) obj. 1.83265e+07 iterations 67
Cbc0038I Pass  18: suminf.    0.40918 (1) obj. 1.83265e+07 iterations 70
Cbc0038I Pass  19: suminf.    0.16807 (1) obj. 1.83265e+07 iterations 40
Cbc0038I Pass  20: suminf.    0.40918 (1) obj. 1.83265e+07 iterations 55
Cbc0038I Pass  21: suminf.    0.37489 (1) obj. 1.83265e+07 iterations 71
Cbc0038I Pass  22: suminf.    0.16807 (1) obj. 1.77095e+07 iterations 25
Cbc0038I Pass  23: suminf.    0.37489 (1) obj. 1.83265e+07 iterations 39
Cbc0038I Pass  24: suminf.    0.37730 (1) obj. 1.83265e+07 iterations 73
Cbc0038I Pass  25: suminf.    0.38972 (1) obj. 1.83265e+07 iterations 41
Cbc0038I Pass  26: suminf.    0.16807 (1) obj. 1.79308e+07 iterations 73
Cbc0038I Pass  27: suminf.    0.49259 (1) obj. 1.83265e+07 iterations 64
Cbc0038I Pass  28: suminf.    0.46555 (1) obj. 1.83265e+07 iterations 20
Cbc0038I Pass  29: suminf.    0.46555 (1) obj. 1.83265e+07 iterations 1
Cbc0038I Pass  30: suminf.    0.16807 (1) obj. 1.83265e+07 iterations 62
Cbc0038I Pass  31: suminf.    0.40918 (1) obj. 1.83265e+07 iterations 66
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 198 continuous
Cbc0038I Full problem 323 rows 306 columns, reduced to 118 rows 101 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of 1.84433e+07 - took 0.07 seconds
Cbc0012I Integer solution of 18443272 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 323 rows 306 columns, reduced to 73 rows 88 columns
Cbc0031I 10 added rows had average density of 303.9
Cbc0013I At root node, 10 cuts changed objective from 17275855 to 17356076 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 585 row cuts average 305.3 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 29 row cuts average 73.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 42 row cuts average 263.2 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 18443272 best solution, best possible 17356076 (0.76 seconds)
Cbc0030I Thread 0 used 34 times,  waiting to start 0.24605823,  157 locks, 0.0011539459 locked, 0.0020470619 waiting for locks
Cbc0030I Thread 1 used 26 times,  waiting to start 0.2733891,  126 locks, 0.0009226799 locked, 0.0007891655 waiting for locks
Cbc0030I Thread 2 used 29 times,  waiting to start 0.31773734,  144 locks, 0.0010478497 locked, 0.0026345253 waiting for locks
Cbc0030I Thread 3 used 21 times,  waiting to start 0.33515811,  100 locks, 0.00078225136 locked, 0.00043082237 waiting for locks
Cbc0030I Thread 4 used 17 times,  waiting to start 0.33287048,  80 locks, 0.00056815147 locked, 0.00022768974 waiting for locks
Cbc0030I Thread 5 used 16 times,  waiting to start 0.31114125,  78 locks, 0.00067305565 locked, 0.0005877018 waiting for locks
Cbc0030I Thread 6 used 15 times,  waiting to start 0.31941772,  73 locks, 0.00065517426 locked, 0.00052213669 waiting for locks
Cbc0030I Thread 7 used 10 times,  waiting to start 0.31270123,  47 locks, 0.00034213066 locked, 0.0002155304 waiting for locks
Cbc0030I Thread 8 used 12 times,  waiting to start 0.29384398,  56 locks, 0.00047874451 locked, 0.00023818016 waiting for locks
Cbc0030I Thread 9 used 6 times,  waiting to start 0.26963902,  29 locks, 0.00044679642 locked, 0.0001642704 waiting for locks
Cbc0030I Thread 10 used 10 times,  waiting to start 0.25490165,  47 locks, 0.00032734871 locked, 0.00022721291 waiting for locks
Cbc0030I Thread 11 used 4 times,  waiting to start 0.23470187,  22 locks, 0.00035738945 locked, 0.00015211105 waiting for locks
Cbc0030I Main thread 0.16793084 waiting for threads,  410 locks, 0.00047254562 locked, 0.0075838566 waiting for locks
Cbc0001I Search completed - best objective 18443271.94199561, took 6342 iterations and 200 nodes (1.14 seconds)
Cbc0032I Strong branching done 576 times (13655 iterations), fathomed 36 nodes and fixed 15 variables
Cbc0035I Maximum depth 13, 52 variables fixed on reduced cost
Cuts at root node changed objective from 1.72759e+07 to 1.73561e+07
Probing was tried 1300 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.241 seconds)
Gomory was tried 1300 times and created 7605 cuts of which 0 were active after adding rounds of cuts (0.650 seconds)
Knapsack was tried 1300 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.262 seconds)
Clique was tried 1300 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
MixedIntegerRounding2 was tried 1300 times and created 377 cuts of which 0 were active after adding rounds of cuts (0.362 seconds)
FlowCover was tried 1300 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.716 seconds)
TwoMirCuts was tried 1300 times and created 546 cuts of which 0 were active after adding rounds of cuts (0.162 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                18443271.94199561
Enumerated nodes:               200
Total iterations:               6342
Time (CPU seconds):             1.77
Time (Wallclock seconds):       1.16

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.77   (Wallclock seconds):       1.16

