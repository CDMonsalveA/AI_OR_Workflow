Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/801ffd360fb34b8a9bc7e0a6f46e9f9d-pulp.mps -sec 3600 -timeMode elapsed -branch -printingOptions all -solution /tmp/801ffd360fb34b8a9bc7e0a6f46e9f9d-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 33 COLUMNS
At line 664 RHS
At line 693 BOUNDS
At line 708 ENDATA
Problem MODEL has 28 rows, 210 columns and 406 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.85338e+06 - 0.00 seconds
Cgl0004I processed model has 28 rows, 210 columns (14 integer (14 of which binary)) and 406 elements
Cbc0038I Initial state - 14 integers unsatisfied sum - 0.595713
Cbc0038I Pass   1: suminf.    0.40429 (1) obj. 3.55964e+08 iterations 13
Cbc0038I Solution found of 3.57222e+08
Cbc0038I Relaxing continuous gives 3.57222e+08
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 169 continuous
Cbc0038I Full problem 28 rows 210 columns, reduced to 27 rows 39 columns
Cbc0038I Mini branch and bound improved solution from 3.57222e+08 to 4.102e+07 (0.01 seconds)
Cbc0038I Freeing continuous variables gives a solution of 3.56735e+07
Cbc0038I Round again with cutoff of 3.22915e+07
Cbc0038I Pass   2: suminf.    0.59571 (4) obj. 3.22915e+07 iterations 8
Cbc0038I Pass   3: suminf.    0.03208 (3) obj. 3.22915e+07 iterations 8
Cbc0038I Pass   4: suminf.    0.05710 (1) obj. 3.22915e+07 iterations 8
Cbc0038I Pass   5: suminf.    0.01862 (1) obj. 3.22915e+07 iterations 3
Cbc0038I Pass   6: suminf.    0.03897 (3) obj. 3.22915e+07 iterations 5
Cbc0038I Pass   7: suminf.    0.37909 (4) obj. 3.22915e+07 iterations 12
Cbc0038I Pass   8: suminf.    0.34484 (3) obj. 3.22915e+07 iterations 2
Cbc0038I Pass   9: suminf.    0.37909 (4) obj. 3.22915e+07 iterations 4
Cbc0038I Pass  10: suminf.    0.33869 (3) obj. 3.22915e+07 iterations 2
Cbc0038I Pass  11: suminf.    0.20404 (7) obj. 3.22915e+07 iterations 7
Cbc0038I Pass  12: suminf.    0.37909 (4) obj. 3.22915e+07 iterations 19
Cbc0038I Pass  13: suminf.    0.35144 (4) obj. 3.22915e+07 iterations 1
Cbc0038I Pass  14: suminf.    0.30169 (3) obj. 3.22915e+07 iterations 3
Cbc0038I Pass  15: suminf.    0.34528 (4) obj. 3.22915e+07 iterations 8
Cbc0038I Pass  16: suminf.    0.02765 (3) obj. 3.22915e+07 iterations 12
Cbc0038I Pass  17: suminf.    0.03024 (3) obj. 3.22915e+07 iterations 13
Cbc0038I Pass  18: suminf.    0.03256 (2) obj. 3.22915e+07 iterations 8
Cbc0038I Pass  19: suminf.    0.06435 (3) obj. 3.22915e+07 iterations 8
Cbc0038I Pass  20: suminf.    0.37909 (4) obj. 3.22915e+07 iterations 8
Cbc0038I Pass  21: suminf.    0.33869 (3) obj. 3.22915e+07 iterations 2
Cbc0038I Pass  22: suminf.    0.36506 (4) obj. 3.22915e+07 iterations 9
Cbc0038I Pass  23: suminf.    0.02403 (1) obj. 3.22915e+07 iterations 10
Cbc0038I Pass  24: suminf.    0.37909 (4) obj. 3.22915e+07 iterations 8
Cbc0038I Pass  25: suminf.    0.32394 (3) obj. 3.22915e+07 iterations 2
Cbc0038I Pass  26: suminf.    0.37909 (4) obj. 3.22915e+07 iterations 4
Cbc0038I Pass  27: suminf.    0.33869 (3) obj. 3.22915e+07 iterations 2
Cbc0038I Pass  28: suminf.    0.25247 (4) obj. 3.22915e+07 iterations 7
Cbc0038I Pass  29: suminf.    0.37909 (4) obj. 3.22915e+07 iterations 8
Cbc0038I Pass  30: suminf.    0.36954 (4) obj. 3.22915e+07 iterations 1
Cbc0038I Pass  31: suminf.    0.37909 (4) obj. 3.22915e+07 iterations 6
Cbc0038I Rounding solution of 3.5225e+07 is better than previous of 3.56735e+07

Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 155 continuous
Cbc0038I Full problem 28 rows 210 columns, reduced to 28 rows 55 columns
Cbc0038I Mini branch and bound improved solution from 3.5225e+07 to 2.96822e+07 (0.03 seconds)
Cbc0038I Freeing continuous variables gives a solution of 2.90439e+07
Cbc0038I Round again with cutoff of 2.36058e+07
Cbc0038I Pass  31: suminf.    0.59571 (5) obj. 2.36058e+07 iterations 6
Cbc0038I Pass  32: suminf.    0.11126 (4) obj. 2.36058e+07 iterations 9
Cbc0038I Pass  33: suminf.    0.58735 (7) obj. 2.36058e+07 iterations 17
Cbc0038I Pass  34: suminf.    0.43461 (6) obj. 2.36058e+07 iterations 2
Cbc0038I Pass  35: suminf.    0.58735 (7) obj. 2.36058e+07 iterations 7
Cbc0038I Pass  36: suminf.    0.37312 (6) obj. 2.36058e+07 iterations 2
Cbc0038I Pass  37: suminf.    0.58735 (7) obj. 2.36058e+07 iterations 5
Cbc0038I Pass  38: suminf.    0.37718 (7) obj. 2.36058e+07 iterations 1
Cbc0038I Pass  39: suminf.    0.32311 (4) obj. 2.36058e+07 iterations 5
Cbc0038I Pass  40: suminf.    0.58735 (7) obj. 2.36058e+07 iterations 9
Cbc0038I Pass  41: suminf.    0.58735 (7) obj. 2.36058e+07 iterations 5
Cbc0038I Pass  42: suminf.    0.43776 (7) obj. 2.36058e+07 iterations 1
Cbc0038I Pass  43: suminf.    0.58735 (7) obj. 2.36058e+07 iterations 5
Cbc0038I Pass  44: suminf.    0.42829 (7) obj. 2.36058e+07 iterations 3
Cbc0038I Pass  45: suminf.    0.58735 (7) obj. 2.36058e+07 iterations 3
Cbc0038I Pass  46: suminf.    0.37718 (7) obj. 2.36058e+07 iterations 1
Cbc0038I Pass  47: suminf.    0.58735 (7) obj. 2.36058e+07 iterations 2
Cbc0038I Pass  48: suminf.    0.08137 (6) obj. 2.36058e+07 iterations 11
Cbc0038I Pass  49: suminf.    0.58735 (7) obj. 2.36058e+07 iterations 12
Cbc0038I Pass  50: suminf.    0.41441 (6) obj. 2.36058e+07 iterations 2
Cbc0038I Pass  51: suminf.    0.58735 (7) obj. 2.36058e+07 iterations 7
Cbc0038I Pass  52: suminf.    0.37965 (6) obj. 2.36058e+07 iterations 2
Cbc0038I Pass  53: suminf.    0.58735 (7) obj. 2.36058e+07 iterations 3
Cbc0038I Pass  54: suminf.    0.37718 (7) obj. 2.36058e+07 iterations 1
Cbc0038I Pass  55: suminf.    0.58735 (7) obj. 2.36058e+07 iterations 2
Cbc0038I Pass  56: suminf.    0.58735 (7) obj. 2.36058e+07 iterations 0
Cbc0038I Pass  57: suminf.    0.34097 (5) obj. 2.36058e+07 iterations 7
Cbc0038I Pass  58: suminf.    0.58735 (7) obj. 2.36058e+07 iterations 7
Cbc0038I Pass  59: suminf.    0.33000 (5) obj. 2.36058e+07 iterations 5
Cbc0038I Pass  60: suminf.    0.58735 (7) obj. 2.36058e+07 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 164 continuous
Cbc0038I Full problem 28 rows 210 columns, reduced to 23 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of 2.90439e+07 - took 0.04 seconds
Cbc0012I Integer solution of 29043890 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0012I Integer solution of 27860925 found by DiveCoefficient after 905 iterations and 0 nodes (0.15 seconds)
Cbc0031I 27 added rows had average density of 34.962963
Cbc0013I At root node, 27 cuts changed objective from 1853384.6 to 26271772 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 58 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 205 row cuts average 53.9 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 39 row cuts average 39.7 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 29 row cuts average 32.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 27860925 best solution, best possible 27816656 (0.15 seconds)
Cbc0001I Search completed - best objective 27860924.88767978, took 982 iterations and 4 nodes (0.16 seconds)
Cbc0032I Strong branching done 16 times (145 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 1, 1 variables fixed on reduced cost
Cuts at root node changed objective from 1.85338e+06 to 2.78167e+07
Probing was tried 105 times and created 62 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
Gomory was tried 105 times and created 205 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 105 times and created 43 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
TwoMirCuts was tried 105 times and created 36 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                27860924.88767978
Enumerated nodes:               4
Total iterations:               982
Time (CPU seconds):             0.16
Time (Wallclock seconds):       0.16

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.16

