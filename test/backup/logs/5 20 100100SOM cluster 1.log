Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/tesis/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/b00df5cd56f64a70a8b0d77c8ac29887-pulp.mps -sec 3600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/b00df5cd56f64a70a8b0d77c8ac29887-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 2920 COLUMNS
At line 17072 RHS
At line 19988 BOUNDS
At line 22851 ENDATA
Problem MODEL has 2915 rows, 2862 columns and 11236 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 3.88861e+07 - 0.02 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 105 strengthened rows, 0 substitutions
Cgl0004I processed model has 2915 rows, 2862 columns (53 integer (53 of which binary)) and 11289 elements
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.7861
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.16549e+08 iterations 201
Cbc0038I Solution found of 1.16549e+08
Cbc0038I Relaxing continuous gives 4.74137e+07
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 2746 continuous
Cbc0038I Full problem 2915 rows 2862 columns, reduced to 73 rows 68 columns
Cbc0038I Mini branch and bound improved solution from 4.74137e+07 to 4.50357e+07 (0.30 seconds)
Cbc0038I Freeing continuous variables gives a solution of 4.34701e+07
Cbc0038I Round again with cutoff of 4.34283e+07
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.80934 (2) obj. 4.34283e+07 iterations 638
Cbc0038I Pass   3: suminf.    0.10654 (1) obj. 4.34283e+07 iterations 207
Cbc0038I Pass   4: suminf.    0.76911 (2) obj. 4.34283e+07 iterations 303
Cbc0038I Pass   5: suminf.    0.70238 (2) obj. 4.34283e+07 iterations 487
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 4.34283e+07 iterations 122
Cbc0038I Solution found of 4.34283e+07
Cbc0038I Relaxing continuous gives 4.33615e+07
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 2736 continuous
Cbc0038I Full problem 2915 rows 2862 columns, reduced to 90 rows 79 columns
Cbc0038I Mini branch and bound did not improve solution (0.46 seconds)
Cbc0038I Round again with cutoff of 4.32997e+07
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass   7: suminf.    0.84487 (3) obj. 4.32997e+07 iterations 41
Cbc0038I Pass   8: suminf.    0.21710 (3) obj. 4.32997e+07 iterations 599
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. 4.32997e+07 iterations 269
Cbc0038I Solution found of 4.32997e+07
Cbc0038I Relaxing continuous gives 4.3238e+07
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 2733 continuous
Cbc0038I Full problem 2915 rows 2862 columns, reduced to 94 rows 83 columns
Cbc0038I Mini branch and bound did not improve solution (0.59 seconds)
Cbc0038I Round again with cutoff of 4.31822e+07
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  10: suminf.    1.06003 (6) obj. 4.31822e+07 iterations 38
Cbc0038I Pass  11: suminf.    0.74784 (4) obj. 4.31822e+07 iterations 347
Cbc0038I Pass  12: suminf.    0.08966 (1) obj. 4.31822e+07 iterations 55
Cbc0038I Pass  13: suminf.    0.83884 (2) obj. 4.31822e+07 iterations 571
Cbc0038I Pass  14: suminf.    0.86207 (2) obj. 4.31822e+07 iterations 787
Cbc0038I Pass  15: suminf.    0.56199 (2) obj. 4.31822e+07 iterations 484
Cbc0038I Pass  16: suminf.    2.24688 (6) obj. 4.31822e+07 iterations 155
Cbc0038I Pass  17: suminf.    0.07546 (1) obj. 4.31822e+07 iterations 551
Cbc0038I Pass  18: suminf.    0.07546 (1) obj. 4.31822e+07 iterations 21
Cbc0038I Pass  19: suminf.    0.07546 (1) obj. 4.31822e+07 iterations 2
Cbc0038I Pass  20: suminf.    0.07546 (1) obj. 4.31822e+07 iterations 6
Cbc0038I Pass  21: suminf.    0.83884 (2) obj. 4.31822e+07 iterations 762
Cbc0038I Pass  22: suminf.    0.86207 (2) obj. 4.31822e+07 iterations 383
Cbc0038I Pass  23: suminf.    0.56199 (2) obj. 4.31822e+07 iterations 464
Cbc0038I Pass  24: suminf.    0.08966 (1) obj. 4.31822e+07 iterations 338
Cbc0038I Pass  25: suminf.    1.15531 (5) obj. 4.31822e+07 iterations 162
Cbc0038I Pass  26: suminf.    0.08966 (1) obj. 4.31822e+07 iterations 219
Cbc0038I Pass  27: suminf.    0.83884 (2) obj. 4.31822e+07 iterations 657
Cbc0038I Pass  28: suminf.    0.86207 (2) obj. 4.31822e+07 iterations 605
Cbc0038I Pass  29: suminf.    0.56199 (2) obj. 4.31822e+07 iterations 512
Cbc0038I Pass  30: suminf.    1.83206 (4) obj. 4.31822e+07 iterations 200
Cbc0038I Pass  31: suminf.    0.58675 (3) obj. 4.31822e+07 iterations 430
Cbc0038I Pass  32: suminf.    0.24201 (3) obj. 4.31822e+07 iterations 642
Cbc0038I Pass  33: suminf.    0.08966 (1) obj. 4.31822e+07 iterations 22
Cbc0038I Pass  34: suminf.    0.83884 (2) obj. 4.31822e+07 iterations 743
Cbc0038I Pass  35: suminf.    0.86207 (2) obj. 4.31822e+07 iterations 687
Cbc0038I Pass  36: suminf.    0.56199 (2) obj. 4.31822e+07 iterations 524
Cbc0038I Pass  37: suminf.    0.78304 (4) obj. 4.31822e+07 iterations 217
Cbc0038I Pass  38: suminf.    0.20208 (2) obj. 4.31822e+07 iterations 132
Cbc0038I Pass  39: suminf.    0.54355 (5) obj. 4.31822e+07 iterations 115
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 2658 continuous
Cbc0038I Full problem 2915 rows 2862 columns, reduced to 185 rows 162 columns
Cbc0038I Mini branch and bound improved solution from 4.3238e+07 to 4.3235e+07 (1.45 seconds)
Cbc0038I Round again with cutoff of 4.31432e+07
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 5
Cbc0038I Pass  39: suminf.    1.15991 (7) obj. 4.31432e+07 iterations 70
Cbc0038I Pass  40: suminf.    1.63339 (5) obj. 4.31432e+07 iterations 473
Cbc0038I Pass  41: suminf.    0.23628 (2) obj. 4.31432e+07 iterations 142
Cbc0038I Pass  42: suminf.    0.71791 (2) obj. 4.31432e+07 iterations 229
Cbc0038I Pass  43: suminf.    0.71791 (2) obj. 4.31432e+07 iterations 64
Cbc0038I Pass  44: suminf.    0.71791 (2) obj. 4.31432e+07 iterations 23
Cbc0038I Pass  45: suminf.    0.85226 (4) obj. 4.31432e+07 iterations 95
Cbc0038I Pass  46: suminf.    0.85226 (4) obj. 4.31432e+07 iterations 7
Cbc0038I Pass  47: suminf.    1.78977 (6) obj. 4.31432e+07 iterations 105
Cbc0038I Pass  48: suminf.    0.85226 (4) obj. 4.31432e+07 iterations 431
Cbc0038I Pass  49: suminf.    0.23628 (2) obj. 4.31432e+07 iterations 280
Cbc0038I Pass  50: suminf.    0.90118 (4) obj. 4.31432e+07 iterations 109
Cbc0038I Pass  51: suminf.    0.82288 (2) obj. 4.31432e+07 iterations 513
Cbc0038I Pass  52: suminf.    0.71791 (2) obj. 4.31432e+07 iterations 284
Cbc0038I Pass  53: suminf.    2.42335 (7) obj. 4.31432e+07 iterations 81
Cbc0038I Pass  54: suminf.    2.12401 (7) obj. 4.31432e+07 iterations 22
Cbc0038I Pass  55: suminf.    1.41893 (4) obj. 4.31432e+07 iterations 205
Cbc0038I Pass  56: suminf.    1.32601 (4) obj. 4.31432e+07 iterations 33
Cbc0038I Pass  57: suminf.    1.20333 (6) obj. 4.31432e+07 iterations 147
Cbc0038I Pass  58: suminf.    1.15991 (7) obj. 4.31432e+07 iterations 54
Cbc0038I Pass  59: suminf.    1.63339 (5) obj. 4.31432e+07 iterations 492
Cbc0038I Pass  60: suminf.    0.23628 (2) obj. 4.31432e+07 iterations 150
Cbc0038I Pass  61: suminf.    0.71791 (2) obj. 4.31432e+07 iterations 475
Cbc0038I Pass  62: suminf.    0.13107 (1) obj. 4.31432e+07 iterations 148
Cbc0038I Pass  63: suminf.    0.13107 (1) obj. 4.31432e+07 iterations 35
Cbc0038I Pass  64: suminf.    0.82288 (2) obj. 4.31432e+07 iterations 673
Cbc0038I Pass  65: suminf.    1.28517 (6) obj. 4.31432e+07 iterations 347
Cbc0038I Pass  66: suminf.    1.15991 (7) obj. 4.31432e+07 iterations 91
Cbc0038I Pass  67: suminf.    1.63339 (5) obj. 4.31432e+07 iterations 433
Cbc0038I Pass  68: suminf.    0.23628 (2) obj. 4.31432e+07 iterations 158
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 2670 continuous
Cbc0038I Full problem 2915 rows 2862 columns, reduced to 153 rows 137 columns
Cbc0038I Mini branch and bound did not improve solution (2.01 seconds)
Cbc0038I After 2.01 seconds - Feasibility pump exiting with objective of 4.3235e+07 - took 1.75 seconds
Cbc0012I Integer solution of 43235004 found by feasibility pump after 0 iterations and 0 nodes (2.01 seconds)
Cbc0038I Full problem 2915 rows 2862 columns, reduced to 330 rows 641 columns
Cbc0013I At root node, 0 cuts changed objective from 43052175 to 43052175 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 43235004 best solution, best possible 43052175 (2.27 seconds)
Cbc0030I Thread 0 used 9 times,  waiting to start 0.026149035, 0.950337 cpu time, 43 locks, 0.00024724007 locked, 5.6743622e-05 waiting for locks
Cbc0030I Thread 1 used 3 times,  waiting to start 0.78702068, 0.193972 cpu time, 14 locks, 8.9883804e-05 locked, 5.2452087e-06 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.89038396, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.88842297, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.88659215, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.88407493, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.88186717, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.879987, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.87802601, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.87617683, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.8742559, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.87232804, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0.54708147 waiting for threads,  28 locks, 4.1246414e-05 locked, 4.9829483e-05 waiting for locks
Cbc0001I Search completed - best objective 43235004.10923125, took 958 iterations and 12 nodes (3.15 seconds)
Cbc0032I Strong branching done 186 times (8989 iterations), fathomed 4 nodes and fixed 1 variables
Cbc0035I Maximum depth 5, 5 variables fixed on reduced cost
Cuts at root node changed objective from 4.30522e+07 to 4.30522e+07
Probing was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
Gomory was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Knapsack was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
Clique was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
FlowCover was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
TwoMirCuts was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                43235004.10923125
Enumerated nodes:               12
Total iterations:               958
Time (CPU seconds):             3.23
Time (Wallclock seconds):       3.21

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.25   (Wallclock seconds):       3.23

