Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/tesis/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/48f04fe8bce34b338503f45789384f46-pulp.mps -sec 3600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/48f04fe8bce34b338503f45789384f46-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1373 COLUMNS
At line 7926 RHS
At line 9295 BOUNDS
At line 10628 ENDATA
Problem MODEL has 1368 rows, 1332 columns and 5184 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 3.21405e+07 - 0.01 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 102 strengthened rows, 0 substitutions
Cgl0004I processed model has 1368 rows, 1332 columns (36 integer (36 of which binary)) and 5220 elements
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.398921
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 4.32902e+07 iterations 46
Cbc0038I Solution found of 4.32902e+07
Cbc0038I Relaxing continuous gives 3.91062e+07
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 1280 continuous
Cbc0038I Full problem 1368 rows 1332 columns, reduced to 10 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I Round again with cutoff of 3.90196e+07
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.03381 (1) obj. 3.90196e+07 iterations 88
Cbc0038I Pass   3: suminf.    0.17062 (1) obj. 3.90196e+07 iterations 127
Cbc0038I Pass   4: suminf.    0.78869 (4) obj. 3.90196e+07 iterations 107
Cbc0038I Pass   5: suminf.    0.16515 (1) obj. 3.90196e+07 iterations 285
Cbc0038I Pass   6: suminf.    0.29335 (1) obj. 3.90196e+07 iterations 54
Cbc0038I Pass   7: suminf.    1.03590 (3) obj. 3.90196e+07 iterations 196
Cbc0038I Pass   8: suminf.    1.03902 (3) obj. 3.90196e+07 iterations 41
Cbc0038I Pass   9: suminf.    0.05552 (1) obj. 3.90196e+07 iterations 102
Cbc0038I Pass  10: suminf.    0.05552 (1) obj. 3.90196e+07 iterations 0
Cbc0038I Pass  11: suminf.    0.16856 (1) obj. 3.90196e+07 iterations 179
Cbc0038I Pass  12: suminf.    0.90829 (3) obj. 3.90196e+07 iterations 181
Cbc0038I Pass  13: suminf.    0.60435 (2) obj. 3.90196e+07 iterations 32
Cbc0038I Pass  14: suminf.    0.03477 (1) obj. 3.90196e+07 iterations 168
Cbc0038I Pass  15: suminf.    0.03381 (1) obj. 3.90196e+07 iterations 144
Cbc0038I Pass  16: suminf.    0.17062 (1) obj. 3.90196e+07 iterations 396
Cbc0038I Pass  17: suminf.    0.45182 (1) obj. 3.90196e+07 iterations 5
Cbc0038I Pass  18: suminf.    0.03477 (1) obj. 3.90196e+07 iterations 44
Cbc0038I Pass  19: suminf.    0.60534 (3) obj. 3.90196e+07 iterations 14
Cbc0038I Pass  20: suminf.    0.92965 (3) obj. 3.90196e+07 iterations 243
Cbc0038I Pass  21: suminf.    0.22449 (1) obj. 3.90196e+07 iterations 139
Cbc0038I Pass  22: suminf.    0.96057 (3) obj. 3.90196e+07 iterations 151
Cbc0038I Pass  23: suminf.    0.18157 (1) obj. 3.90196e+07 iterations 201
Cbc0038I Pass  24: suminf.    0.19271 (1) obj. 3.90196e+07 iterations 113
Cbc0038I Pass  25: suminf.    0.19271 (1) obj. 3.90196e+07 iterations 6
Cbc0038I Pass  26: suminf.    0.03449 (1) obj. 3.90196e+07 iterations 149
Cbc0038I Pass  27: suminf.    0.16968 (1) obj. 3.90196e+07 iterations 318
Cbc0038I Pass  28: suminf.    0.64449 (2) obj. 3.90196e+07 iterations 433
Cbc0038I Pass  29: suminf.    0.15398 (1) obj. 3.90196e+07 iterations 11
Cbc0038I Pass  30: suminf.    1.06290 (4) obj. 3.90196e+07 iterations 106
Cbc0038I Pass  31: suminf.    0.15398 (1) obj. 3.90196e+07 iterations 340
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 1183 continuous
Cbc0038I Full problem 1368 rows 1332 columns, reduced to 145 rows 127 columns
Cbc0038I Mini branch and bound improved solution from 3.91062e+07 to 3.90728e+07 (0.28 seconds)
Cbc0038I Round again with cutoff of 3.88638e+07
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.09468 (1) obj. 3.88638e+07 iterations 0
Cbc0038I Pass  32: suminf.    0.14751 (1) obj. 3.88638e+07 iterations 99
Cbc0038I Pass  33: suminf.    0.73544 (3) obj. 3.88638e+07 iterations 192
Cbc0038I Pass  34: suminf.    0.37552 (1) obj. 3.88638e+07 iterations 80
Cbc0038I Pass  35: suminf.    0.14875 (1) obj. 3.88638e+07 iterations 208
Cbc0038I Pass  36: suminf.    0.29843 (1) obj. 3.88638e+07 iterations 82
Cbc0038I Pass  37: suminf.    1.49507 (4) obj. 3.88638e+07 iterations 245
Cbc0038I Pass  38: suminf.    1.49507 (4) obj. 3.88638e+07 iterations 2
Cbc0038I Pass  39: suminf.    0.20755 (3) obj. 3.88638e+07 iterations 127
Cbc0038I Pass  40: suminf.    0.10164 (1) obj. 3.88638e+07 iterations 63
Cbc0038I Pass  41: suminf.    0.14582 (1) obj. 3.88638e+07 iterations 168
Cbc0038I Pass  42: suminf.    0.71877 (5) obj. 3.88638e+07 iterations 200
Cbc0038I Pass  43: suminf.    0.47820 (1) obj. 3.88638e+07 iterations 143
Cbc0038I Pass  44: suminf.    0.32250 (2) obj. 3.88638e+07 iterations 178
Cbc0038I Pass  45: suminf.    0.35448 (1) obj. 3.88638e+07 iterations 310
Cbc0038I Pass  46: suminf.    0.35448 (1) obj. 3.88638e+07 iterations 0
Cbc0038I Pass  47: suminf.    0.16039 (2) obj. 3.88638e+07 iterations 111
Cbc0038I Pass  48: suminf.    0.16430 (1) obj. 3.88638e+07 iterations 182
Cbc0038I Pass  49: suminf.    0.16430 (1) obj. 3.88638e+07 iterations 0
Cbc0038I Pass  50: suminf.    0.52521 (3) obj. 3.88638e+07 iterations 16
Cbc0038I Pass  51: suminf.    0.16430 (1) obj. 3.88638e+07 iterations 13
Cbc0038I Pass  52: suminf.    0.98040 (3) obj. 3.88638e+07 iterations 135
Cbc0038I Pass  53: suminf.    0.40735 (2) obj. 3.88638e+07 iterations 219
Cbc0038I Pass  54: suminf.    0.40735 (2) obj. 3.88638e+07 iterations 48
Cbc0038I Pass  55: suminf.    0.16039 (2) obj. 3.88638e+07 iterations 136
Cbc0038I Pass  56: suminf.    0.16039 (2) obj. 3.88638e+07 iterations 0
Cbc0038I Pass  57: suminf.    0.16430 (1) obj. 3.88638e+07 iterations 273
Cbc0038I Pass  58: suminf.    0.16430 (1) obj. 3.88638e+07 iterations 0
Cbc0038I Pass  59: suminf.    1.20353 (3) obj. 3.88638e+07 iterations 130
Cbc0038I Pass  60: suminf.    0.48597 (3) obj. 3.88638e+07 iterations 25
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 1177 continuous
Cbc0038I Full problem 1368 rows 1332 columns, reduced to 153 rows 132 columns
Cbc0038I Mini branch and bound did not improve solution (0.45 seconds)
Cbc0038I After 0.45 seconds - Feasibility pump exiting with objective of 3.90728e+07 - took 0.38 seconds
Cbc0012I Integer solution of 39072772 found by feasibility pump after 0 iterations and 0 nodes (0.45 seconds)
Cbc0038I Full problem 1368 rows 1332 columns, reduced to 80 rows 289 columns
Cbc0031I 1 added rows had average density of 125
Cbc0013I At root node, 1 cuts changed objective from 38240247 to 38267408 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 1 row cuts average 125.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 39072772 best solution, best possible 38267408 (0.50 seconds)
Cbc0030I Thread 0 used 24 times,  waiting to start 0.39825773,  112 locks, 0.00067305565 locked, 0.00019693375 waiting for locks
Cbc0030I Thread 1 used 24 times,  waiting to start 0.67914343,  117 locks, 0.00051569939 locked, 0.00050425529 waiting for locks
Cbc0030I Thread 2 used 18 times,  waiting to start 0.47992468,  89 locks, 0.00044322014 locked, 6.9141388e-05 waiting for locks
Cbc0030I Thread 3 used 8 times,  waiting to start 0.78023195,  37 locks, 0.00016450882 locked, 4.2915344e-06 waiting for locks
Cbc0030I Thread 4 used 5 times,  waiting to start 0.64275026,  23 locks, 9.8228455e-05 locked, 3.8146973e-06 waiting for locks
Cbc0030I Thread 5 used 9 times,  waiting to start 0.98615599,  45 locks, 0.00024294853 locked, 7.1048737e-05 waiting for locks
Cbc0030I Thread 6 used 6 times,  waiting to start 1.0125351,  29 locks, 0.00010538101 locked, 2.8610229e-06 waiting for locks
Cbc0030I Thread 7 used 2 times,  waiting to start 1.0831308,  9 locks, 0.0001039505 locked, 3.8862228e-05 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 1.0941811,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 1.093406,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 1.092531,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 1.0913639,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0.27408648 waiting for threads,  206 locks, 0.00015854836 locked, 0.00091195107 waiting for locks
Cbc0001I Search completed - best objective 39072771.66639841, took 4057 iterations and 96 nodes (1.59 seconds)
Cbc0032I Strong branching done 278 times (8146 iterations), fathomed 30 nodes and fixed 11 variables
Cbc0035I Maximum depth 13, 45 variables fixed on reduced cost
Cuts at root node changed objective from 3.82402e+07 to 3.82674e+07
Probing was tried 26 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Gomory was tried 26 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Knapsack was tried 26 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
Clique was tried 26 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 26 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
FlowCover was tried 26 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
TwoMirCuts was tried 26 times and created 13 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                39072771.66639841
Enumerated nodes:               96
Total iterations:               4057
Time (CPU seconds):             3.09
Time (Wallclock seconds):       1.61

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.10   (Wallclock seconds):       1.62

