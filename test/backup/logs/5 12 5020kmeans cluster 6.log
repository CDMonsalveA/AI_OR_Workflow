Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/tesis/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/da6aa30a4b7944249f69f6f9f7a15287-pulp.mps -sec 3600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/da6aa30a4b7944249f69f6f9f7a15287-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 6245 COLUMNS
At line 36822 RHS
At line 43063 BOUNDS
At line 49226 ENDATA
Problem MODEL has 6240 rows, 6162 columns and 24336 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2.74872e+07 - 0.05 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 78 strengthened rows, 0 substitutions
Cgl0004I processed model has 6240 rows, 6162 columns (78 integer (78 of which binary)) and 24414 elements
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.83671
Cbc0038I Pass   1: (0.90 seconds) suminf.    0.25927 (1) obj. 3.69954e+07 iterations 751
Cbc0038I Solution found of 3.82412e+07
Cbc0038I Relaxing continuous gives 3.45246e+07
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 5901 continuous
Cbc0038I Full problem 6240 rows 6162 columns, reduced to 186 rows 165 columns
Cbc0038I Mini branch and bound improved solution from 3.45246e+07 to 3.01125e+07 (1.07 seconds)
Cbc0038I Freeing continuous variables gives a solution of 3.0101e+07
Cbc0038I Round again with cutoff of 3.00494e+07
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: (1.34 seconds) suminf.    0.34429 (2) obj. 3.00494e+07 iterations 1213
Cbc0038I Pass   3: (1.39 seconds) suminf.    0.29656 (1) obj. 3.00494e+07 iterations 411
Cbc0038I Pass   4: (1.44 seconds) suminf.    0.33678 (1) obj. 3.00494e+07 iterations 986
Cbc0038I Pass   5: (1.61 seconds) suminf.    4.34271 (11) obj. 3.00494e+07 iterations 1136
Cbc0038I Pass   6: (1.73 seconds) suminf.    1.77631 (5) obj. 3.00494e+07 iterations 720
Cbc0038I Pass   7: (1.86 seconds) suminf.    0.55551 (2) obj. 3.00494e+07 iterations 832
Cbc0038I Pass   8: (2.48 seconds) suminf.    0.27328 (1) obj. 3.00494e+07 iterations 5496
Cbc0038I Pass   9: (2.49 seconds) suminf.    0.27328 (1) obj. 3.00494e+07 iterations 8
Cbc0038I Pass  10: (2.56 seconds) suminf.    0.32301 (5) obj. 3.00494e+07 iterations 633
Cbc0038I Pass  11: (2.59 seconds) suminf.    0.05758 (1) obj. 3.00494e+07 iterations 205
Cbc0038I Pass  12: (3.04 seconds) suminf.    0.29656 (1) obj. 3.00494e+07 iterations 3541
Cbc0038I Pass  13: (3.08 seconds) suminf.    0.29818 (1) obj. 3.00494e+07 iterations 574
Cbc0038I Pass  14: (3.23 seconds) suminf.    1.54102 (7) obj. 3.00494e+07 iterations 1246
Cbc0038I Pass  15: (3.35 seconds) suminf.    0.31323 (1) obj. 3.00494e+07 iterations 1067
Cbc0038I Pass  16: (3.56 seconds) suminf.    0.46733 (2) obj. 3.00494e+07 iterations 1570
Cbc0038I Pass  17: (3.82 seconds) suminf.    0.31323 (1) obj. 3.00494e+07 iterations 2294
Cbc0038I No solution found this major pass
Cbc0038I After 3.82 seconds - Feasibility pump exiting with objective of 3.0101e+07 - took 3.12 seconds
Cbc0012I Integer solution of 30100964 found by feasibility pump after 0 iterations and 0 nodes (3.83 seconds)
Cbc0038I Full problem 6240 rows 6162 columns, reduced to 633 rows 709 columns
Cbc0013I At root node, 0 cuts changed objective from 29584999 to 29584999 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 30100964 best solution, best possible 29584999 (4.54 seconds)
Cbc0010I After 100 nodes, 2 on tree, 30100964 best solution, best possible 30019226 (23.49 seconds)
Cbc0030I Thread 0 used 37 times,  waiting to start 4.8873138,  167 locks, 0.0023596287 locked, 0.0011737347 waiting for locks
Cbc0030I Thread 1 used 32 times,  waiting to start 6.3614552,  149 locks, 0.0019407272 locked, 0.0016169548 waiting for locks
Cbc0030I Thread 2 used 17 times,  waiting to start 11.233258,  77 locks, 0.00087213516 locked, 0.00031304359 waiting for locks
Cbc0030I Thread 3 used 16 times,  waiting to start 14.097868,  74 locks, 0.00065040588 locked, 0.00018692017 waiting for locks
Cbc0030I Thread 4 used 4 times,  waiting to start 17.406547,  18 locks, 0.00021195412 locked, 6.1035156e-05 waiting for locks
Cbc0030I Thread 5 used 5 times,  waiting to start 16.125723,  23 locks, 0.00023317337 locked, 0.00010418892 waiting for locks
Cbc0030I Thread 6 used 1 times,  waiting to start 19.182039,  4 locks, 5.865097e-05 locked, 9.5367432e-07 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 19.268018,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 19.264063,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 19.259921,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 19.255953,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 19.252127,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 8.517813 waiting for threads,  238 locks, 0.00038838387 locked, 0.0033633709 waiting for locks
Cbc0001I Search completed - best objective 30100964.41270715, took 18339 iterations and 112 nodes (23.79 seconds)
Cbc0032I Strong branching done 542 times (41719 iterations), fathomed 9 nodes and fixed 4 variables
Cbc0035I Maximum depth 24, 135 variables fixed on reduced cost
Cuts at root node changed objective from 2.9585e+07 to 2.9585e+07
Probing was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
Gomory was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
Knapsack was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
Clique was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
FlowCover was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
TwoMirCuts was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.036 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                30100964.41270722
Enumerated nodes:               112
Total iterations:               18339
Time (CPU seconds):             49.47
Time (Wallclock seconds):       23.97

Option for printingOptions changed from normal to all
Total time (CPU seconds):       49.49   (Wallclock seconds):       24.00

