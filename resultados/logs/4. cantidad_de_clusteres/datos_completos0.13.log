Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/c9d5b30a5f714cc0b0210bbc8dbe2796-pulp.mps -sec 60 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/c9d5b30a5f714cc0b0210bbc8dbe2796-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 115 COLUMNS
At line 15406 RHS
At line 15517 BOUNDS
At line 18598 ENDATA
Problem MODEL has 110 rows, 3080 columns and 6105 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 60
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.12759 - 0.00 seconds
Cgl0004I processed model has 110 rows, 3080 columns (3080 integer (3080 of which binary)) and 6105 elements
Cbc0038I Initial state - 55 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (55) obj. 1.12759 iterations 0
Cbc0038I Pass   2: suminf.    0.69091 (38) obj. 19.948 iterations 17
Cbc0038I Pass   3: suminf.    0.23636 (13) obj. 47.6251 iterations 25
Cbc0038I Solution found of 62.0172
Cbc0038I Before mini branch and bound, 3025 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 3080 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of 55.9283
Cbc0038I Pass   4: suminf.    1.00000 (55) obj. 1.12759 iterations 0
Cbc0038I Pass   5: suminf.    0.69091 (38) obj. 19.948 iterations 17
Cbc0038I Pass   6: suminf.    0.32727 (18) obj. 42.0897 iterations 20
Cbc0038I Pass   7: suminf.    0.58183 (6) obj. 55.9283 iterations 22
Cbc0038I Pass   8: suminf.    0.58183 (6) obj. 55.9283 iterations 0
Cbc0038I Pass   9: suminf.    0.58183 (6) obj. 55.9283 iterations 1
Cbc0038I Pass  10: suminf.    0.58183 (6) obj. 55.9283 iterations 0
Cbc0038I Pass  11: suminf.    0.58183 (6) obj. 55.9283 iterations 1
Cbc0038I Pass  12: suminf.    1.01586 (9) obj. 55.9283 iterations 22
Cbc0038I Pass  13: suminf.    0.14545 (7) obj. 55.8065 iterations 11
Cbc0038I Pass  14: suminf.    0.25345 (6) obj. 55.9283 iterations 15
Cbc0038I Pass  15: suminf.    0.10909 (6) obj. 55.7655 iterations 12
Cbc0038I Pass  16: suminf.    0.25345 (6) obj. 55.9283 iterations 11
Cbc0038I Pass  17: suminf.    0.44971 (8) obj. 55.9283 iterations 79
Cbc0038I Pass  18: suminf.    0.12727 (6) obj. 55.8799 iterations 57
Cbc0038I Pass  19: suminf.    0.17020 (6) obj. 55.9283 iterations 58
Cbc0038I Pass  20: suminf.    0.10909 (5) obj. 55.8594 iterations 49
Cbc0038I Pass  21: suminf.    0.17020 (5) obj. 55.9283 iterations 48
Cbc0038I Pass  22: suminf.    0.88846 (5) obj. 55.9283 iterations 80
Cbc0038I Pass  23: suminf.    0.20010 (4) obj. 55.9283 iterations 40
Cbc0038I Pass  24: suminf.    0.16374 (4) obj. 55.9283 iterations 17
Cbc0038I Pass  25: suminf.    0.16374 (4) obj. 55.9283 iterations 1
Cbc0038I Pass  26: suminf.    0.23647 (4) obj. 55.9283 iterations 20
Cbc0038I Pass  27: suminf.    0.23647 (4) obj. 55.9283 iterations 0
Cbc0038I Pass  28: suminf.    0.16374 (4) obj. 55.9283 iterations 21
Cbc0038I Pass  29: suminf.    0.44086 (6) obj. 55.9283 iterations 100
Cbc0038I Pass  30: suminf.    0.07273 (4) obj. 55.8546 iterations 71
Cbc0038I Pass  31: suminf.    0.13807 (4) obj. 55.9283 iterations 79
Cbc0038I Pass  32: suminf.    0.09091 (3) obj. 55.8751 iterations 69
Cbc0038I Pass  33: suminf.    0.13807 (3) obj. 55.9283 iterations 67
Cbc0038I Rounding solution of 48.0968 is better than previous of 62.0172

Cbc0038I Before mini branch and bound, 2911 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 3080 columns, reduced to 65 rows 135 columns
Cbc0038I Mini branch and bound improved solution from 48.0968 to 37.0771 (0.11 seconds)
Cbc0038I Round again with cutoff of 29.8872
Cbc0038I Pass  33: suminf.    1.00000 (55) obj. 1.12759 iterations 0
Cbc0038I Pass  34: suminf.    0.54911 (30) obj. 29.8872 iterations 26
Cbc0038I Pass  35: suminf.    0.54911 (30) obj. 29.8872 iterations 0
Cbc0038I Pass  36: suminf.    0.54911 (30) obj. 29.8872 iterations 16
Cbc0038I Pass  37: suminf.    0.54911 (30) obj. 29.8872 iterations 0
Cbc0038I Pass  38: suminf.    0.54911 (30) obj. 29.8872 iterations 2
Cbc0038I Pass  39: suminf.    0.54911 (30) obj. 29.8872 iterations 0
Cbc0038I Pass  40: suminf.    0.54911 (30) obj. 29.8872 iterations 1
Cbc0038I Pass  41: suminf.    0.54911 (30) obj. 29.8872 iterations 0
Cbc0038I Pass  42: suminf.    0.54911 (30) obj. 29.8872 iterations 13
Cbc0038I Pass  43: suminf.    0.54911 (30) obj. 29.8872 iterations 0
Cbc0038I Pass  44: suminf.    0.54911 (30) obj. 29.8872 iterations 1
Cbc0038I Pass  45: suminf.    0.54911 (30) obj. 29.8872 iterations 0
Cbc0038I Pass  46: suminf.    0.54911 (30) obj. 29.8872 iterations 1
Cbc0038I Pass  47: suminf.    0.54911 (30) obj. 29.8872 iterations 0
Cbc0038I Pass  48: suminf.    0.54911 (30) obj. 29.8872 iterations 1
Cbc0038I Pass  49: suminf.    1.43103 (27) obj. 29.8872 iterations 15
Cbc0038I Pass  50: suminf.    0.60299 (26) obj. 29.8872 iterations 8
Cbc0038I Pass  51: suminf.    0.56662 (25) obj. 29.8872 iterations 8
Cbc0038I Pass  52: suminf.    0.56662 (25) obj. 29.8872 iterations 0
Cbc0038I Pass  53: suminf.    0.60299 (25) obj. 29.8872 iterations 10
Cbc0038I Pass  54: suminf.    0.60299 (25) obj. 29.8872 iterations 0
Cbc0038I Pass  55: suminf.    0.60299 (25) obj. 29.8872 iterations 9
Cbc0038I Pass  56: suminf.    0.60299 (25) obj. 29.8872 iterations 0
Cbc0038I Pass  57: suminf.    0.56662 (25) obj. 29.8872 iterations 7
Cbc0038I Pass  58: suminf.    0.56662 (25) obj. 29.8872 iterations 0
Cbc0038I Pass  59: suminf.    0.60299 (25) obj. 29.8872 iterations 7
Cbc0038I Pass  60: suminf.    0.60299 (25) obj. 29.8872 iterations 0
Cbc0038I Pass  61: suminf.    0.56662 (25) obj. 29.8872 iterations 7
Cbc0038I Pass  62: suminf.    0.89073 (26) obj. 29.8872 iterations 33
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2997 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of 37.0771 - took 0.09 seconds
Cbc0012I Integer solution of 37.07707 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0012I Integer solution of 12.994341 found by DiveCoefficient after 2141 iterations and 0 nodes (0.73 seconds)
Cbc0031I 335 added rows had average density of 14.916418
Cbc0013I At root node, 335 cuts changed objective from 1.1275862 to 12.99434 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 477 row cuts average 2.0 elements, 0 column cuts (117 active)  in 0.126 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 157 row cuts average 140.3 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 219 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 424 row cuts average 46.4 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 251 row cuts average 127.1 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 110 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 0.10300493, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.094151974, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.084877968, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.075994968, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.066638947, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.057548046, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.048585892, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.039580822, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.030665874, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.021680117, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.012626171, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.0036351681, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 6.9141388e-06 locked, 0 waiting for locks
Cbc0001I Search completed - best objective 12.9943412372498, took 2141 iterations and 0 nodes (0.88 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.12759 to 12.9943
Probing was tried 182 times and created 6201 cuts of which 1521 were active after adding rounds of cuts (1.634 seconds)
Gomory was tried 182 times and created 2041 cuts of which 0 were active after adding rounds of cuts (0.944 seconds)
Knapsack was tried 182 times and created 2847 cuts of which 0 were active after adding rounds of cuts (0.099 seconds)
Clique was tried 182 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.026 seconds)
MixedIntegerRounding2 was tried 182 times and created 5512 cuts of which 0 were active after adding rounds of cuts (0.310 seconds)
FlowCover was tried 182 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
TwoMirCuts was tried 182 times and created 3263 cuts of which 0 were active after adding rounds of cuts (0.431 seconds)
ZeroHalf was tried 182 times and created 1430 cuts of which 0 were active after adding rounds of cuts (0.949 seconds)

Result - Optimal solution found

Objective value:                12.99434124
Enumerated nodes:               0
Total iterations:               2141
Time (CPU seconds):             0.84
Time (Wallclock seconds):       0.89

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.85   (Wallclock seconds):       0.90

