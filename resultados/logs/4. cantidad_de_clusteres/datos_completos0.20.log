Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/4e6f8a02a9f34b16bc0a1fd4f6c5c10d-pulp.mps -sec 60 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/4e6f8a02a9f34b16bc0a1fd4f6c5c10d-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 175 COLUMNS
At line 36556 RHS
At line 36727 BOUNDS
At line 44038 ENDATA
Problem MODEL has 170 rows, 7310 columns and 14535 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 60
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.19655 - 0.00 seconds
Cgl0004I processed model has 170 rows, 7310 columns (7310 integer (7310 of which binary)) and 14535 elements
Cbc0038I Initial state - 85 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (85) obj. 1.19655 iterations 0
Cbc0038I Pass   2: suminf.    0.70588 (60) obj. 30.7584 iterations 25
Cbc0038I Pass   3: suminf.    0.44706 (38) obj. 56.7729 iterations 22
Cbc0038I Pass   4: suminf.    0.24706 (21) obj. 76.8749 iterations 17
Cbc0038I Pass   5: suminf.    0.09412 (8) obj. 92.2471 iterations 13
Cbc0038I Solution found of 101.707
Cbc0038I Before mini branch and bound, 7225 integers at bound fixed and 0 continuous
Cbc0038I Full problem 170 rows 7310 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I Round again with cutoff of 91.6559
Cbc0038I Pass   6: suminf.    1.00000 (85) obj. 1.19655 iterations 0
Cbc0038I Pass   7: suminf.    0.67059 (57) obj. 34.3058 iterations 28
Cbc0038I Pass   8: suminf.    0.38824 (33) obj. 62.6852 iterations 24
Cbc0038I Pass   9: suminf.    0.11765 (10) obj. 89.8822 iterations 23
Cbc0038I Pass  10: suminf.    0.58824 (9) obj. 91.6559 iterations 13
Cbc0038I Pass  11: suminf.    0.58824 (9) obj. 91.6559 iterations 0
Cbc0038I Pass  12: suminf.    0.58824 (9) obj. 91.6559 iterations 1
Cbc0038I Pass  13: suminf.    0.58824 (9) obj. 91.6559 iterations 0
Cbc0038I Pass  14: suminf.    0.58824 (9) obj. 91.6559 iterations 1
Cbc0038I Pass  15: suminf.    0.44082 (12) obj. 91.6559 iterations 24
Cbc0038I Pass  16: suminf.    0.12941 (10) obj. 91.6109 iterations 29
Cbc0038I Pass  17: suminf.    0.16695 (10) obj. 91.6559 iterations 31
Cbc0038I Pass  18: suminf.    0.11765 (9) obj. 91.5969 iterations 26
Cbc0038I Pass  19: suminf.    0.16695 (9) obj. 91.6559 iterations 25
Cbc0038I Pass  20: suminf.    0.57566 (11) obj. 91.6559 iterations 46
Cbc0038I Pass  21: suminf.    0.15294 (9) obj. 91.5531 iterations 57
Cbc0038I Pass  22: suminf.    0.23883 (9) obj. 91.6559 iterations 64
Cbc0038I Pass  23: suminf.    0.12941 (9) obj. 91.5249 iterations 63
Cbc0038I Pass  24: suminf.    0.29132 (10) obj. 91.6559 iterations 86
Cbc0038I Pass  25: suminf.    0.16266 (8) obj. 91.6559 iterations 41
Cbc0038I Pass  26: suminf.    0.13913 (7) obj. 91.6559 iterations 20
Cbc0038I Pass  27: suminf.    0.13913 (7) obj. 91.6559 iterations 2
Cbc0038I Pass  28: suminf.    0.13913 (7) obj. 91.6559 iterations 23
Cbc0038I Pass  29: suminf.    0.13913 (7) obj. 91.6559 iterations 2
Cbc0038I Pass  30: suminf.    0.13913 (7) obj. 91.6559 iterations 17
Cbc0038I Pass  31: suminf.    0.27819 (8) obj. 91.6559 iterations 80
Cbc0038I Pass  32: suminf.    0.11450 (7) obj. 91.6559 iterations 54
Cbc0038I Pass  33: suminf.    0.11450 (7) obj. 91.6559 iterations 14
Cbc0038I Pass  34: suminf.    0.11450 (7) obj. 91.6559 iterations 1
Cbc0038I Pass  35: suminf.    0.11450 (7) obj. 91.6559 iterations 26
Cbc0038I Rounding solution of 80.8268 is better than previous of 101.707

Cbc0038I Before mini branch and bound, 7111 integers at bound fixed and 0 continuous
Cbc0038I Full problem 170 rows 7310 columns, reduced to 54 rows 109 columns
Cbc0038I Mini branch and bound improved solution from 80.8268 to 68.9298 (0.29 seconds)
Cbc0038I Round again with cutoff of 55.3832
Cbc0038I Pass  35: suminf.    1.00000 (85) obj. 1.19655 iterations 0
Cbc0038I Pass  36: suminf.    0.69412 (59) obj. 31.9409 iterations 26
Cbc0038I Pass  37: suminf.    0.63201 (40) obj. 55.3832 iterations 25
Cbc0038I Pass  38: suminf.    0.63201 (40) obj. 55.3832 iterations 0
Cbc0038I Pass  39: suminf.    0.63201 (40) obj. 55.3832 iterations 6
Cbc0038I Pass  40: suminf.    0.63201 (40) obj. 55.3832 iterations 0
Cbc0038I Pass  41: suminf.    0.63201 (40) obj. 55.3832 iterations 1
Cbc0038I Pass  42: suminf.    0.63201 (40) obj. 55.3832 iterations 0
Cbc0038I Pass  43: suminf.    0.63201 (40) obj. 55.3832 iterations 12
Cbc0038I Pass  44: suminf.    0.63201 (40) obj. 55.3832 iterations 0
Cbc0038I Pass  45: suminf.    0.63201 (40) obj. 55.3832 iterations 1
Cbc0038I Pass  46: suminf.    0.63201 (40) obj. 55.3832 iterations 0
Cbc0038I Pass  47: suminf.    0.63201 (40) obj. 55.3832 iterations 1
Cbc0038I Pass  48: suminf.    0.78504 (41) obj. 55.3832 iterations 15
Cbc0038I Pass  49: suminf.    0.78504 (41) obj. 55.3832 iterations 5
Cbc0038I Pass  50: suminf.    0.76151 (41) obj. 55.3832 iterations 4
Cbc0038I Pass  51: suminf.    0.76151 (41) obj. 55.3832 iterations 0
Cbc0038I Pass  52: suminf.    0.73799 (40) obj. 55.3832 iterations 9
Cbc0038I Pass  53: suminf.    0.73799 (40) obj. 55.3832 iterations 0
Cbc0038I Pass  54: suminf.    0.73799 (40) obj. 55.3832 iterations 5
Cbc0038I Pass  55: suminf.    0.73799 (40) obj. 55.3832 iterations 0
Cbc0038I Pass  56: suminf.    0.73799 (40) obj. 55.3832 iterations 6
Cbc0038I Pass  57: suminf.    0.73799 (40) obj. 55.3832 iterations 0
Cbc0038I Pass  58: suminf.    0.73799 (40) obj. 55.3832 iterations 5
Cbc0038I Pass  59: suminf.    0.73799 (40) obj. 55.3832 iterations 0
Cbc0038I Pass  60: suminf.    0.73799 (40) obj. 55.3832 iterations 3
Cbc0038I Pass  61: suminf.    0.66616 (38) obj. 55.3832 iterations 30
Cbc0038I Pass  62: suminf.    0.44706 (36) obj. 55.3585 iterations 28
Cbc0038I Pass  63: suminf.    0.46768 (36) obj. 55.3832 iterations 34
Cbc0038I Pass  64: suminf.    0.44706 (36) obj. 55.3585 iterations 29
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7192 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.36 seconds)
Cbc0038I After 0.36 seconds - Feasibility pump exiting with objective of 68.9298 - took 0.20 seconds
Cbc0012I Integer solution of 68.929816 found by feasibility pump after 0 iterations and 0 nodes (0.36 seconds)
Cbc0012I Integer solution of 17.21497 found by DiveCoefficient after 5492 iterations and 0 nodes (2.44 seconds)
Cbc0031I 635 added rows had average density of 14.998425
Cbc0013I At root node, 635 cuts changed objective from 1.1965517 to 17.21497 in 18 passes
Cbc0014I Cut generator 0 (Probing) - 726 row cuts average 3.5 elements, 0 column cuts (608 active)  in 0.377 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 202 row cuts average 164.5 elements, 0 column cuts (0 active)  in 0.282 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 739 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 741 row cuts average 16.4 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 237 row cuts average 120.8 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 186 row cuts average 17.7 elements, 0 column cuts (0 active)  in 0.310 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 0.16417313, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.15047693, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.13647199, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.12184715, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.10630679, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.092349052, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.078500986, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.06466198, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.050864935, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.036760092, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.02244997, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.00629282, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 8.8214874e-06 locked, 0 waiting for locks
Cbc0001I Search completed - best objective 17.21497014499832, took 5492 iterations and 0 nodes (2.66 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.19655 to 17.215
Probing was tried 234 times and created 9438 cuts of which 7904 were active after adding rounds of cuts (4.907 seconds)
Gomory was tried 234 times and created 2626 cuts of which 0 were active after adding rounds of cuts (3.662 seconds)
Knapsack was tried 234 times and created 9607 cuts of which 0 were active after adding rounds of cuts (0.364 seconds)
Clique was tried 234 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.087 seconds)
MixedIntegerRounding2 was tried 234 times and created 9633 cuts of which 0 were active after adding rounds of cuts (0.576 seconds)
FlowCover was tried 234 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.039 seconds)
TwoMirCuts was tried 234 times and created 3081 cuts of which 0 were active after adding rounds of cuts (1.050 seconds)
ZeroHalf was tried 234 times and created 2418 cuts of which 0 were active after adding rounds of cuts (4.031 seconds)

Result - Optimal solution found

Objective value:                17.21497014
Enumerated nodes:               0
Total iterations:               5492
Time (CPU seconds):             2.58
Time (Wallclock seconds):       2.67

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.60   (Wallclock seconds):       2.69

