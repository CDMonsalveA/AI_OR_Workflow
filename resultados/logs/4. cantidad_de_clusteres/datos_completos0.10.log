Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/37a76507f16540ffa2109f2b51588351-pulp.mps -sec 600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/37a76507f16540ffa2109f2b51588351-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 91 COLUMNS
At line 9466 RHS
At line 9553 BOUNDS
At line 11446 ENDATA
Problem MODEL has 86 rows, 1892 columns and 3741 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.1 - 0.00 seconds
Cgl0004I processed model has 86 rows, 1892 columns (1892 integer (1892 of which binary)) and 3741 elements
Cbc0038I Initial state - 43 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (43) obj. 1.1 iterations 0
Cbc0038I Pass   2: suminf.    0.67442 (29) obj. 16.1419 iterations 14
Cbc0038I Pass   3: suminf.    0.02326 (1) obj. 46.2256 iterations 28
Cbc0038I Solution found of 47.3
Cbc0038I Before mini branch and bound, 1849 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 1892 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of 42.68
Cbc0038I Pass   4: suminf.    1.00000 (43) obj. 1.1 iterations 0
Cbc0038I Pass   5: suminf.    0.55814 (24) obj. 21.514 iterations 19
Cbc0038I Pass   6: suminf.    0.11628 (5) obj. 41.9279 iterations 19
Cbc0038I Pass   7: suminf.    0.38605 (5) obj. 42.68 iterations 8
Cbc0038I Pass   8: suminf.    0.38605 (5) obj. 42.68 iterations 0
Cbc0038I Pass   9: suminf.    0.38605 (5) obj. 42.68 iterations 1
Cbc0038I Pass  10: suminf.    0.38605 (5) obj. 42.68 iterations 0
Cbc0038I Pass  11: suminf.    0.38605 (5) obj. 42.68 iterations 1
Cbc0038I Pass  12: suminf.    1.00090 (7) obj. 42.68 iterations 50
Cbc0038I Pass  13: suminf.    0.28346 (6) obj. 42.68 iterations 18
Cbc0038I Pass  14: suminf.    0.28346 (5) obj. 42.68 iterations 13
Cbc0038I Pass  15: suminf.    0.28346 (5) obj. 42.68 iterations 2
Cbc0038I Pass  16: suminf.    0.32997 (5) obj. 42.68 iterations 9
Cbc0038I Pass  17: suminf.    0.32997 (5) obj. 42.68 iterations 2
Cbc0038I Pass  18: suminf.    0.28346 (5) obj. 42.68 iterations 9
Cbc0038I Pass  19: suminf.    0.87116 (7) obj. 42.68 iterations 83
Cbc0038I Pass  20: suminf.    0.13953 (5) obj. 42.5601 iterations 58
Cbc0038I Pass  21: suminf.    0.24853 (4) obj. 42.68 iterations 55
Cbc0038I Pass  22: suminf.    0.11628 (4) obj. 42.5345 iterations 57
Cbc0038I Pass  23: suminf.    0.24853 (4) obj. 42.68 iterations 56
Cbc0038I Pass  24: suminf.    0.99280 (8) obj. 42.68 iterations 130
Cbc0038I Pass  25: suminf.    0.23256 (6) obj. 42.4579 iterations 77
Cbc0038I Pass  26: suminf.    0.43443 (6) obj. 42.68 iterations 76
Cbc0038I Pass  27: suminf.    0.20930 (5) obj. 42.4324 iterations 69
Cbc0038I Pass  28: suminf.    0.43443 (5) obj. 42.68 iterations 66
Cbc0038I Pass  29: suminf.    0.83328 (8) obj. 42.68 iterations 143
Cbc0038I Pass  30: suminf.    0.42077 (6) obj. 42.68 iterations 61
Cbc0038I Pass  31: suminf.    0.37426 (5) obj. 42.68 iterations 19
Cbc0038I Pass  32: suminf.    0.37426 (5) obj. 42.68 iterations 0
Cbc0038I Pass  33: suminf.    0.32775 (4) obj. 42.68 iterations 17
Cbc0038I Rounding solution of 36.136 is better than previous of 47.3

Cbc0038I Before mini branch and bound, 1730 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 1892 columns, reduced to 63 rows 141 columns
Cbc0038I Mini branch and bound improved solution from 36.136 to 24.465 (0.08 seconds)
Cbc0038I Round again with cutoff of 19.792
Cbc0038I Pass  33: suminf.    1.00000 (43) obj. 1.1 iterations 0
Cbc0038I Pass  34: suminf.    0.76744 (33) obj. 11.8442 iterations 10
Cbc0038I Pass  35: suminf.    0.99269 (26) obj. 19.792 iterations 18
Cbc0038I Pass  36: suminf.    0.60465 (26) obj. 19.3651 iterations 1
Cbc0038I Pass  37: suminf.    0.99269 (26) obj. 19.792 iterations 6
Cbc0038I Pass  38: suminf.    0.60465 (26) obj. 19.3651 iterations 1
Cbc0038I Pass  39: suminf.    0.99269 (26) obj. 19.792 iterations 2
Cbc0038I Pass  40: suminf.    0.60465 (26) obj. 19.3651 iterations 1
Cbc0038I Pass  41: suminf.    0.99269 (26) obj. 19.792 iterations 2
Cbc0038I Pass  42: suminf.    0.60465 (26) obj. 19.3651 iterations 1
Cbc0038I Pass  43: suminf.    0.99269 (26) obj. 19.792 iterations 1
Cbc0038I Pass  44: suminf.    0.97856 (24) obj. 19.792 iterations 30
Cbc0038I Pass  45: suminf.    0.60465 (24) obj. 19.3807 iterations 15
Cbc0038I Pass  46: suminf.    0.97856 (24) obj. 19.792 iterations 28
Cbc0038I Pass  47: suminf.    0.67442 (24) obj. 19.4574 iterations 20
Cbc0038I Pass  48: suminf.    0.97856 (24) obj. 19.792 iterations 24
Cbc0038I Pass  49: suminf.    0.69767 (24) obj. 19.483 iterations 17
Cbc0038I Pass  50: suminf.    0.97856 (24) obj. 19.792 iterations 17
Cbc0038I Pass  51: suminf.    0.87668 (20) obj. 19.792 iterations 35
Cbc0038I Pass  52: suminf.    0.87668 (20) obj. 19.792 iterations 41
Cbc0038I Pass  53: suminf.    0.87668 (20) obj. 19.792 iterations 11
Cbc0038I Pass  54: suminf.    0.87668 (20) obj. 19.792 iterations 3
Cbc0038I Pass  55: suminf.    0.87668 (20) obj. 19.792 iterations 11
Cbc0038I Pass  56: suminf.    1.00200 (18) obj. 19.792 iterations 48
Cbc0038I Pass  57: suminf.    0.53488 (18) obj. 19.2781 iterations 41
Cbc0038I Pass  58: suminf.    1.00200 (18) obj. 19.792 iterations 48
Cbc0038I Pass  59: suminf.    0.58140 (18) obj. 19.3293 iterations 45
Cbc0038I Pass  60: suminf.    1.00200 (18) obj. 19.792 iterations 46
Cbc0038I Pass  61: suminf.    0.60026 (19) obj. 19.792 iterations 41
Cbc0038I Pass  62: suminf.    0.55814 (19) obj. 19.7456 iterations 36
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1788 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of 24.465 - took 0.08 seconds
Cbc0012I Integer solution of 24.464958 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0031I 280 added rows had average density of 20.017857
Cbc0013I At root node, 280 cuts changed objective from 1.1 to 11.564377 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 422 row cuts average 2.0 elements, 0 column cuts (136 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 162 row cuts average 152.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 398 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 321 row cuts average 57.2 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 231 row cuts average 133.2 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 93 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0016I Integer solution of 11.564377 found by strong branching after 1395 iterations and 0 nodes (0.54 seconds)
Cbc0030I Thread 0 used 0 times,  waiting to start 0.10659409, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.10145211, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.092616081, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.083017111, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.07287097, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.06389308, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.054821014, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.045795918, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.036859035, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.027922153, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.018830061, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.0099139214, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 8.1062317e-06 locked, 0 waiting for locks
Cbc0001I Search completed - best objective 11.56437697477506, took 1664 iterations and 0 nodes (0.72 seconds)
Cbc0032I Strong branching done 26 times (715 iterations), fathomed 13 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.1 to 11.5719
Probing was tried 169 times and created 5486 cuts of which 1768 were active after adding rounds of cuts (0.985 seconds)
Gomory was tried 169 times and created 2106 cuts of which 0 were active after adding rounds of cuts (0.602 seconds)
Knapsack was tried 169 times and created 5174 cuts of which 0 were active after adding rounds of cuts (0.271 seconds)
Clique was tried 169 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
MixedIntegerRounding2 was tried 169 times and created 4173 cuts of which 0 were active after adding rounds of cuts (0.302 seconds)
FlowCover was tried 169 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
TwoMirCuts was tried 169 times and created 3003 cuts of which 0 were active after adding rounds of cuts (0.283 seconds)
ZeroHalf was tried 169 times and created 1209 cuts of which 0 were active after adding rounds of cuts (0.512 seconds)

Result - Optimal solution found

Objective value:                11.56437697
Enumerated nodes:               0
Total iterations:               1664
Time (CPU seconds):             0.65
Time (Wallclock seconds):       0.72

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.66   (Wallclock seconds):       0.73

