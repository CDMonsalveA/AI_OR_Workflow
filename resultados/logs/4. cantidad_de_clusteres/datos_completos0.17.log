Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/58c44b6262de475f8acb10ae5a66c5ed-pulp.mps -sec 60 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/58c44b6262de475f8acb10ae5a66c5ed-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 153 COLUMNS
At line 27756 RHS
At line 27905 BOUNDS
At line 33456 ENDATA
Problem MODEL has 148 rows, 5550 columns and 11026 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 60
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.17069 - 0.00 seconds
Cgl0004I processed model has 148 rows, 5550 columns (5550 integer (5550 of which binary)) and 11026 elements
Cbc0038I Initial state - 74 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (74) obj. 1.17069 iterations 0
Cbc0038I Pass   2: suminf.    0.63514 (47) obj. 32.3522 iterations 27
Cbc0038I Pass   3: suminf.    0.33784 (25) obj. 57.7593 iterations 22
Cbc0038I Solution found of 86.631
Cbc0038I Before mini branch and bound, 5476 integers at bound fixed and 0 continuous
Cbc0038I Full problem 148 rows 5550 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of 78.085
Cbc0038I Pass   4: suminf.    1.00000 (74) obj. 1.17069 iterations 0
Cbc0038I Pass   5: suminf.    0.67568 (50) obj. 28.8876 iterations 24
Cbc0038I Pass   6: suminf.    0.31081 (23) obj. 60.069 iterations 27
Cbc0038I Pass   7: suminf.    0.48920 (8) obj. 78.085 iterations 17
Cbc0038I Pass   8: suminf.    0.48920 (8) obj. 78.085 iterations 0
Cbc0038I Pass   9: suminf.    0.48920 (8) obj. 78.085 iterations 10
Cbc0038I Pass  10: suminf.    0.48920 (8) obj. 78.085 iterations 0
Cbc0038I Pass  11: suminf.    0.48920 (8) obj. 78.085 iterations 1
Cbc0038I Pass  12: suminf.    0.48920 (8) obj. 78.085 iterations 0
Cbc0038I Pass  13: suminf.    0.48920 (8) obj. 78.085 iterations 1
Cbc0038I Pass  14: suminf.    1.04054 (11) obj. 78.085 iterations 22
Cbc0038I Pass  15: suminf.    0.24081 (10) obj. 78.085 iterations 7
Cbc0038I Pass  16: suminf.    0.21378 (9) obj. 78.085 iterations 4
Cbc0038I Pass  17: suminf.    0.21378 (9) obj. 78.085 iterations 0
Cbc0038I Pass  18: suminf.    0.21378 (9) obj. 78.085 iterations 3
Cbc0038I Pass  19: suminf.    0.21378 (9) obj. 78.085 iterations 0
Cbc0038I Pass  20: suminf.    0.21378 (9) obj. 78.085 iterations 3
Cbc0038I Pass  21: suminf.    0.45910 (12) obj. 78.085 iterations 47
Cbc0038I Pass  22: suminf.    0.16216 (10) obj. 78.0468 iterations 46
Cbc0038I Pass  23: suminf.    0.19475 (10) obj. 78.085 iterations 53
Cbc0038I Pass  24: suminf.    0.16216 (10) obj. 78.0468 iterations 50
Cbc0038I Pass  25: suminf.    0.34007 (10) obj. 78.085 iterations 78
Cbc0038I Pass  26: suminf.    0.17653 (8) obj. 78.085 iterations 37
Cbc0038I Pass  27: suminf.    0.17653 (8) obj. 78.085 iterations 13
Cbc0038I Pass  28: suminf.    0.17653 (8) obj. 78.085 iterations 1
Cbc0038I Pass  29: suminf.    0.17653 (8) obj. 78.085 iterations 8
Cbc0038I Pass  30: suminf.    0.17653 (8) obj. 78.085 iterations 1
Cbc0038I Pass  31: suminf.    0.17653 (8) obj. 78.085 iterations 8
Cbc0038I Pass  32: suminf.    0.16802 (10) obj. 78.085 iterations 69
Cbc0038I Pass  33: suminf.    0.12162 (8) obj. 78.0731 iterations 70
Cbc0038I Rounding solution of 69.7359 is better than previous of 86.631

Cbc0038I Before mini branch and bound, 5374 integers at bound fixed and 0 continuous
Cbc0038I Full problem 148 rows 5550 columns, reduced to 54 rows 108 columns
Cbc0038I Mini branch and bound improved solution from 69.7359 to 58.042 (0.20 seconds)
Cbc0038I Round again with cutoff of 46.6677
Cbc0038I Pass  33: suminf.    1.00000 (74) obj. 1.17069 iterations 0
Cbc0038I Pass  34: suminf.    0.70270 (52) obj. 26.5778 iterations 22
Cbc0038I Pass  35: suminf.    0.86347 (35) obj. 46.6677 iterations 19
Cbc0038I Pass  36: suminf.    0.47297 (35) obj. 46.2106 iterations 1
Cbc0038I Pass  37: suminf.    0.86347 (35) obj. 46.6677 iterations 20
Cbc0038I Pass  38: suminf.    0.47297 (35) obj. 46.2106 iterations 1
Cbc0038I Pass  39: suminf.    0.86347 (35) obj. 46.6677 iterations 1
Cbc0038I Pass  40: suminf.    0.75988 (34) obj. 46.6677 iterations 30
Cbc0038I Pass  41: suminf.    0.75988 (34) obj. 46.6677 iterations 27
Cbc0038I Pass  42: suminf.    0.75988 (34) obj. 46.6677 iterations 8
Cbc0038I Pass  43: suminf.    0.75988 (34) obj. 46.6677 iterations 2
Cbc0038I Pass  44: suminf.    0.75988 (34) obj. 46.6677 iterations 9
Cbc0038I Pass  45: suminf.    0.75988 (34) obj. 46.6677 iterations 2
Cbc0038I Pass  46: suminf.    0.73285 (33) obj. 46.6677 iterations 9
Cbc0038I Pass  47: suminf.    0.73285 (33) obj. 46.6677 iterations 2
Cbc0038I Pass  48: suminf.    0.73285 (33) obj. 46.6677 iterations 10
Cbc0038I Pass  49: suminf.    0.73285 (33) obj. 46.6677 iterations 2
Cbc0038I Pass  50: suminf.    0.73285 (33) obj. 46.6677 iterations 10
Cbc0038I Pass  51: suminf.    0.78950 (33) obj. 46.6677 iterations 34
Cbc0038I Pass  52: suminf.    0.51351 (33) obj. 46.3447 iterations 26
Cbc0038I Pass  53: suminf.    0.78950 (33) obj. 46.6677 iterations 27
Cbc0038I Pass  54: suminf.    0.51351 (33) obj. 46.3447 iterations 21
Cbc0038I Pass  55: suminf.    0.78950 (33) obj. 46.6677 iterations 30
Cbc0038I Pass  56: suminf.    0.51351 (33) obj. 46.3447 iterations 24
Cbc0038I Pass  57: suminf.    0.78950 (33) obj. 46.6677 iterations 26
Cbc0038I Pass  58: suminf.    0.54600 (34) obj. 46.6677 iterations 26
Cbc0038I Pass  59: suminf.    0.52703 (34) obj. 46.6455 iterations 26
Cbc0038I Pass  60: suminf.    0.54600 (34) obj. 46.6677 iterations 31
Cbc0038I Pass  61: suminf.    0.60128 (32) obj. 46.6677 iterations 46
Cbc0038I Pass  62: suminf.    0.60128 (32) obj. 46.6677 iterations 39
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5423 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.26 seconds)
Cbc0038I After 0.26 seconds - Feasibility pump exiting with objective of 58.042 - took 0.16 seconds
Cbc0012I Integer solution of 58.042021 found by feasibility pump after 0 iterations and 0 nodes (0.27 seconds)
Cbc0012I Integer solution of 15.462076 found by DiveCoefficient after 4730 iterations and 0 nodes (1.60 seconds)
Cbc0031I 521 added rows had average density of 18.095969
Cbc0013I At root node, 521 cuts changed objective from 1.1706897 to 15.462076 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 651 row cuts average 2.0 elements, 0 column cuts (111 active)  in 0.249 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 214 row cuts average 167.9 elements, 0 column cuts (0 active)  in 0.211 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 582 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 614 row cuts average 32.5 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 266 row cuts average 131.2 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 0.13886309, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.12678695, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.11464596, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.10276604, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.090523005, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.078523874, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.066653013, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.054812908, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.041152, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.029012918, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.017102957, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.005243063, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 9.059906e-06 locked, 0 waiting for locks
Cbc0001I Search completed - best objective 15.46207598723823, took 4730 iterations and 0 nodes (1.80 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.17069 to 15.4621
Probing was tried 221 times and created 8463 cuts of which 1443 were active after adding rounds of cuts (3.238 seconds)
Gomory was tried 221 times and created 2782 cuts of which 0 were active after adding rounds of cuts (2.740 seconds)
Knapsack was tried 221 times and created 7566 cuts of which 0 were active after adding rounds of cuts (0.246 seconds)
Clique was tried 221 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.057 seconds)
MixedIntegerRounding2 was tried 221 times and created 7982 cuts of which 0 were active after adding rounds of cuts (0.526 seconds)
FlowCover was tried 221 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.030 seconds)
TwoMirCuts was tried 221 times and created 3458 cuts of which 0 were active after adding rounds of cuts (0.823 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Optimal solution found

Objective value:                15.46207599
Enumerated nodes:               0
Total iterations:               4730
Time (CPU seconds):             1.70
Time (Wallclock seconds):       1.81

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.72   (Wallclock seconds):       1.83

