Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/967bdc57df08464d8e0770ca1816a14c-pulp.mps -sec 3600 -timeMode elapsed -branch -printingOptions all -solution /tmp/967bdc57df08464d8e0770ca1816a14c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 197 COLUMNS
At line 28134 RHS
At line 28327 BOUNDS
At line 28424 ENDATA
Problem MODEL has 192 rows, 9312 columns and 18528 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2.87151e+07 - 0.01 seconds
Cgl0004I processed model has 192 rows, 9312 columns (96 integer (96 of which binary)) and 18528 elements
Cbc0038I Initial state - 96 integers unsatisfied sum - 8.53584
Cbc0038I Pass   1: suminf.    0.23090 (1) obj. 2.10508e+09 iterations 99
Cbc0038I Solution found of 2.10579e+09
Cbc0038I Relaxing continuous gives 1.72359e+09
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 9025 continuous
Cbc0038I Full problem 192 rows 9312 columns, reduced to 188 rows 279 columns
Cbc0038I Mini branch and bound improved solution from 1.72359e+09 to 2.75474e+08 (0.09 seconds)
Cbc0038I Freeing continuous variables gives a solution of 2.47807e+08
Cbc0038I Round again with cutoff of 2.25898e+08
Cbc0038I Pass   2: suminf.    3.18547 (48) obj. 2.25898e+08 iterations 186
Cbc0038I Pass   3: suminf.    2.89397 (46) obj. 2.25898e+08 iterations 3
Cbc0038I Pass   4: suminf.    0.06516 (7) obj. 2.25898e+08 iterations 140
Cbc0038I Pass   5: suminf.    0.14764 (5) obj. 2.25898e+08 iterations 17
Cbc0038I Pass   6: suminf.    0.13983 (6) obj. 2.25898e+08 iterations 41
Cbc0038I Pass   7: suminf.    0.16189 (5) obj. 2.25898e+08 iterations 28
Cbc0038I Pass   8: suminf.    0.06296 (3) obj. 2.25898e+08 iterations 34
Cbc0038I Pass   9: suminf.    0.21188 (6) obj. 2.25898e+08 iterations 23
Cbc0038I Pass  10: suminf.    0.63380 (10) obj. 2.25898e+08 iterations 35
Cbc0038I Pass  11: suminf.    1.82475 (19) obj. 2.25898e+08 iterations 56
Cbc0038I Pass  12: suminf.    1.82475 (19) obj. 2.25898e+08 iterations 0
Cbc0038I Pass  13: suminf.    2.94434 (24) obj. 2.25898e+08 iterations 49
Cbc0038I Pass  14: suminf.    2.57727 (25) obj. 2.25898e+08 iterations 1
Cbc0038I Pass  15: suminf.    2.19178 (24) obj. 2.25898e+08 iterations 21
Cbc0038I Pass  16: suminf.    2.18864 (23) obj. 2.25898e+08 iterations 1
Cbc0038I Pass  17: suminf.    2.18864 (23) obj. 2.25898e+08 iterations 0
Cbc0038I Pass  18: suminf.    0.84585 (14) obj. 2.25898e+08 iterations 85
Cbc0038I Pass  19: suminf.    3.29649 (25) obj. 2.25898e+08 iterations 40
Cbc0038I Pass  20: suminf.    2.58697 (22) obj. 2.25898e+08 iterations 6
Cbc0038I Pass  21: suminf.    2.29649 (24) obj. 2.25898e+08 iterations 23
Cbc0038I Pass  22: suminf.    2.17816 (23) obj. 2.25898e+08 iterations 3
Cbc0038I Pass  23: suminf.    2.43859 (24) obj. 2.25898e+08 iterations 5
Cbc0038I Pass  24: suminf.    2.43859 (24) obj. 2.25898e+08 iterations 0
Cbc0038I Pass  25: suminf.    2.27588 (23) obj. 2.25898e+08 iterations 22
Cbc0038I Pass  26: suminf.    2.17056 (22) obj. 2.25898e+08 iterations 4
Cbc0038I Pass  27: suminf.    2.43859 (24) obj. 2.25898e+08 iterations 5
Cbc0038I Pass  28: suminf.    0.37847 (8) obj. 2.25898e+08 iterations 80
Cbc0038I Pass  29: suminf.    1.30396 (18) obj. 2.25898e+08 iterations 30
Cbc0038I Pass  30: suminf.    1.09971 (18) obj. 2.25898e+08 iterations 5
Cbc0038I Pass  31: suminf.    2.27588 (23) obj. 2.25898e+08 iterations 18
Cbc0038I Rounding solution of 2.35036e+08 is better than previous of 2.47807e+08

Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 8974 continuous
Cbc0038I Full problem 192 rows 9312 columns, reduced to 155 rows 294 columns
Cbc0038I Mini branch and bound improved solution from 2.35036e+08 to 2.00945e+08 (0.26 seconds)
Cbc0038I Freeing continuous variables gives a solution of 1.87253e+08
Cbc0038I Round again with cutoff of 1.55545e+08
Cbc0038I Pass  31: suminf.    3.89573 (52) obj. 1.55545e+08 iterations 12
Cbc0038I Pass  32: suminf.    3.53549 (53) obj. 1.55545e+08 iterations 4
Cbc0038I Pass  33: suminf.    0.83604 (29) obj. 1.55545e+08 iterations 95
Cbc0038I Pass  34: suminf.    1.13423 (29) obj. 1.55545e+08 iterations 52
Cbc0038I Pass  35: suminf.    4.82874 (49) obj. 1.55545e+08 iterations 86
Cbc0038I Pass  36: suminf.    4.45774 (49) obj. 1.55545e+08 iterations 2
Cbc0038I Pass  37: suminf.    4.36284 (48) obj. 1.55545e+08 iterations 20
Cbc0038I Pass  38: suminf.    3.98737 (49) obj. 1.55545e+08 iterations 8
Cbc0038I Pass  39: suminf.    4.21796 (48) obj. 1.55545e+08 iterations 7
Cbc0038I Pass  40: suminf.    3.68013 (47) obj. 1.55545e+08 iterations 11
Cbc0038I Pass  41: suminf.    4.62220 (49) obj. 1.55545e+08 iterations 13
Cbc0038I Pass  42: suminf.    3.96106 (47) obj. 1.55545e+08 iterations 2
Cbc0038I Pass  43: suminf.    3.67323 (47) obj. 1.55545e+08 iterations 8
Cbc0038I Pass  44: suminf.    4.57415 (49) obj. 1.55545e+08 iterations 13
Cbc0038I Pass  45: suminf.    3.96106 (47) obj. 1.55545e+08 iterations 2
Cbc0038I Pass  46: suminf.    1.94056 (39) obj. 1.55545e+08 iterations 100
Cbc0038I Pass  47: suminf.    3.65185 (47) obj. 1.55545e+08 iterations 34
Cbc0038I Pass  48: suminf.    3.46082 (47) obj. 1.55545e+08 iterations 5
Cbc0038I Pass  49: suminf.    3.96106 (47) obj. 1.55545e+08 iterations 8
Cbc0038I Pass  50: suminf.    3.10990 (44) obj. 1.55545e+08 iterations 11
Cbc0038I Pass  51: suminf.    3.91822 (46) obj. 1.55545e+08 iterations 11
Cbc0038I Pass  52: suminf.    3.42155 (46) obj. 1.55545e+08 iterations 8
Cbc0038I Pass  53: suminf.    3.91822 (46) obj. 1.55545e+08 iterations 1
Cbc0038I Pass  54: suminf.    3.73392 (47) obj. 1.55545e+08 iterations 69
Cbc0038I Pass  55: suminf.    3.73392 (47) obj. 1.55545e+08 iterations 0
Cbc0038I Pass  56: suminf.    3.62040 (46) obj. 1.55545e+08 iterations 29
Cbc0038I Pass  57: suminf.    2.83100 (42) obj. 1.55545e+08 iterations 15
Cbc0038I Pass  58: suminf.    3.36350 (45) obj. 1.55545e+08 iterations 10
Cbc0038I Pass  59: suminf.    2.14896 (33) obj. 1.55545e+08 iterations 88
Cbc0038I Pass  60: suminf.    3.38411 (46) obj. 1.55545e+08 iterations 81
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 9009 continuous
Cbc0038I Full problem 192 rows 9312 columns, reduced to 127 rows 231 columns
Cbc0038I Mini branch and bound did not improve solution (0.42 seconds)
Cbc0038I After 0.42 seconds - Feasibility pump exiting with objective of 1.87253e+08 - took 0.37 seconds
Cbc0012I Integer solution of 1.8725307e+08 found by feasibility pump after 0 iterations and 0 nodes (0.42 seconds)
Cbc0031I 123 added rows had average density of 134.25203
Cbc0013I At root node, 123 cuts changed objective from 28715069 to 1.5015085e+08 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 102 row cuts average 107.3 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 143 row cuts average 140.3 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1.8725307e+08 best solution, best possible 1.5015085e+08 (0.69 seconds)
Cbc0012I Integer solution of 1.8714292e+08 found by DiveCoefficient after 164 iterations and 2 nodes (0.75 seconds)
Cbc0012I Integer solution of 1.8682999e+08 found by DiveCoefficient after 168 iterations and 4 nodes (1.01 seconds)
Cbc0012I Integer solution of 1.867448e+08 found by DiveCoefficient after 173 iterations and 6 nodes (1.21 seconds)
Cbc0012I Integer solution of 1.8566383e+08 found by DiveCoefficient after 179 iterations and 8 nodes (1.28 seconds)
Cbc0012I Integer solution of 1.8522939e+08 found by DiveCoefficient after 180 iterations and 9 nodes (1.33 seconds)
Cbc0012I Integer solution of 1.8414992e+08 found by DiveCoefficient after 185 iterations and 11 nodes (1.50 seconds)
Cbc0038I Full problem 192 rows 9312 columns, reduced to 144 rows 4628 columns
Cbc0012I Integer solution of 1.7341973e+08 found by rounding after 319 iterations and 54 nodes (2.15 seconds)
Cbc0012I Integer solution of 1.6821333e+08 found by rounding after 334 iterations and 59 nodes (2.17 seconds)
Cbc0004I Integer solution of 1.6808254e+08 found after 336 iterations and 60 nodes (2.18 seconds)
Cbc0016I Integer solution of 1.6768423e+08 found by strong branching after 340 iterations and 62 nodes (2.18 seconds)
Cbc0004I Integer solution of 1.6755345e+08 found after 343 iterations and 63 nodes (2.19 seconds)
Cbc0038I Full problem 192 rows 9312 columns, reduced to 136 rows 3851 columns
Cbc0010I After 100 nodes, 45 on tree, 1.6755345e+08 best solution, best possible 1.5015085e+08 (2.41 seconds)
Cbc0004I Integer solution of 1.6633994e+08 found after 474 iterations and 105 nodes (2.43 seconds)
Cbc0004I Integer solution of 1.6601184e+08 found after 657 iterations and 165 nodes (2.58 seconds)
Cbc0004I Integer solution of 1.6479932e+08 found after 676 iterations and 171 nodes (2.59 seconds)
Cbc0038I Full problem 192 rows 9312 columns, reduced to 129 rows 3174 columns
Cbc0010I After 200 nodes, 61 on tree, 1.6479932e+08 best solution, best possible 1.5015085e+08 (2.67 seconds)
Cbc0010I After 300 nodes, 58 on tree, 1.6479932e+08 best solution, best possible 1.5015085e+08 (2.89 seconds)
Cbc0038I Full problem 192 rows 9312 columns, reduced to 138 rows 4048 columns
Cbc0010I After 400 nodes, 57 on tree, 1.6479932e+08 best solution, best possible 1.5015085e+08 (3.14 seconds)
Cbc0038I Full problem 192 rows 9312 columns, reduced to 134 rows 3660 columns
Cbc0010I After 500 nodes, 53 on tree, 1.6479932e+08 best solution, best possible 1.5015085e+08 (3.49 seconds)
Cbc0038I Full problem 192 rows 9312 columns, reduced to 141 rows 4341 columns
Cbc0010I After 600 nodes, 66 on tree, 1.6479932e+08 best solution, best possible 1.5015085e+08 (3.89 seconds)
Cbc0038I Full problem 192 rows 9312 columns, reduced to 144 rows 4631 columns
Cbc0010I After 700 nodes, 86 on tree, 1.6479932e+08 best solution, best possible 1.5015085e+08 (4.33 seconds)
Cbc0004I Integer solution of 1.6469917e+08 found after 3184 iterations and 796 nodes (4.83 seconds)
Cbc0010I After 800 nodes, 104 on tree, 1.6469917e+08 best solution, best possible 1.5015085e+08 (4.84 seconds)
Cbc0010I After 900 nodes, 88 on tree, 1.6469917e+08 best solution, best possible 1.5015085e+08 (5.73 seconds)
Cbc0038I Full problem 192 rows 9312 columns, reduced to 148 rows 5020 columns
Cbc0038I Full problem 192 rows 9312 columns, reduced to 145 rows 4731 columns
Cbc0010I After 1000 nodes, 94 on tree, 1.6469917e+08 best solution, best possible 1.5015085e+08 (6.59 seconds)
Cbc0010I After 1100 nodes, 105 on tree, 1.6469917e+08 best solution, best possible 1.5015085e+08 (7.15 seconds)
Cbc0038I Full problem 192 rows 9312 columns, reduced to 146 rows 4828 columns
Cbc0010I After 1200 nodes, 73 on tree, 1.6469917e+08 best solution, best possible 1.5015085e+08 (7.85 seconds)
Cbc0010I After 1300 nodes, 52 on tree, 1.6469917e+08 best solution, best possible 1.5015085e+08 (8.95 seconds)
Cbc0010I After 1400 nodes, 49 on tree, 1.6469917e+08 best solution, best possible 1.5015085e+08 (9.92 seconds)
Cbc0010I After 1500 nodes, 38 on tree, 1.6469917e+08 best solution, best possible 1.5015085e+08 (10.94 seconds)
Cbc0010I After 1600 nodes, 34 on tree, 1.6469917e+08 best solution, best possible 1.5015085e+08 (12.08 seconds)
Cbc0010I After 1700 nodes, 35 on tree, 1.6469917e+08 best solution, best possible 1.5015085e+08 (12.92 seconds)
Cbc0038I Full problem 192 rows 9312 columns, reduced to 147 rows 4923 columns
Cbc0010I After 1800 nodes, 36 on tree, 1.6469917e+08 best solution, best possible 1.5015085e+08 (13.85 seconds)
Cbc0010I After 1900 nodes, 33 on tree, 1.6469917e+08 best solution, best possible 1.5015085e+08 (14.70 seconds)
Cbc0010I After 2000 nodes, 28 on tree, 1.6469917e+08 best solution, best possible 1.5015085e+08 (15.38 seconds)
Cbc0010I After 2100 nodes, 23 on tree, 1.6469917e+08 best solution, best possible 1.5015085e+08 (16.17 seconds)
Cbc0010I After 2200 nodes, 20 on tree, 1.6469917e+08 best solution, best possible 1.5015085e+08 (17.02 seconds)
Cbc0010I After 2300 nodes, 22 on tree, 1.6469917e+08 best solution, best possible 1.5015085e+08 (17.89 seconds)
Cbc0038I Full problem 192 rows 9312 columns, reduced to 145 rows 4728 columns
Cbc0010I After 2400 nodes, 15 on tree, 1.6469917e+08 best solution, best possible 1.5015085e+08 (18.62 seconds)
Cbc0010I After 2500 nodes, 13 on tree, 1.6469917e+08 best solution, best possible 1.5015085e+08 (19.29 seconds)
Cbc0010I After 2600 nodes, 11 on tree, 1.6469917e+08 best solution, best possible 1.5015085e+08 (20.24 seconds)
Cbc0004I Integer solution of 1.6423217e+08 found after 13807 iterations and 2655 nodes (20.66 seconds)
Cbc0010I After 2700 nodes, 31 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (21.11 seconds)
Cbc0010I After 2800 nodes, 43 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (21.92 seconds)
Cbc0010I After 2900 nodes, 60 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (22.78 seconds)
Cbc0010I After 3000 nodes, 59 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (23.51 seconds)
Cbc0010I After 3100 nodes, 66 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (24.19 seconds)
Cbc0010I After 3200 nodes, 78 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (25.03 seconds)
Cbc0010I After 3300 nodes, 86 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (26.03 seconds)
Cbc0010I After 3400 nodes, 73 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (27.00 seconds)
Cbc0010I After 3500 nodes, 45 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (27.95 seconds)
Cbc0038I Full problem 192 rows 9312 columns, reduced to 153 rows 5507 columns
Cbc0010I After 3600 nodes, 9 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (28.74 seconds)
Cbc0010I After 3700 nodes, 46 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (29.84 seconds)
Cbc0010I After 3800 nodes, 60 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (30.72 seconds)
Cbc0010I After 3900 nodes, 60 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (31.53 seconds)
Cbc0010I After 4000 nodes, 39 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (32.27 seconds)
Cbc0010I After 4100 nodes, 13 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (33.08 seconds)
Cbc0038I Full problem 192 rows 9312 columns, reduced to 150 rows 5216 columns
Cbc0010I After 4200 nodes, 11 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (34.20 seconds)
Cbc0010I After 4300 nodes, 28 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (34.98 seconds)
Cbc0010I After 4400 nodes, 53 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (35.63 seconds)
Cbc0010I After 4500 nodes, 67 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (36.15 seconds)
Cbc0010I After 4600 nodes, 75 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (36.83 seconds)
Cbc0010I After 4700 nodes, 71 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (37.57 seconds)
Cbc0010I After 4800 nodes, 47 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (38.15 seconds)
Cbc0010I After 4900 nodes, 6 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (38.60 seconds)
Cbc0010I After 5000 nodes, 22 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (39.49 seconds)
Cbc0010I After 5100 nodes, 6 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (40.22 seconds)
Cbc0010I After 5200 nodes, 15 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (41.15 seconds)
Cbc0010I After 5300 nodes, 17 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (41.91 seconds)
Cbc0010I After 5400 nodes, 10 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (42.59 seconds)
Cbc0038I Full problem 192 rows 9312 columns, reduced to 150 rows 5214 columns
Cbc0010I After 5500 nodes, 11 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (43.25 seconds)
Cbc0010I After 5600 nodes, 9 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (43.80 seconds)
Cbc0010I After 5700 nodes, 19 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (44.48 seconds)
Cbc0010I After 5800 nodes, 14 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (45.21 seconds)
Cbc0010I After 5900 nodes, 16 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (45.86 seconds)
Cbc0010I After 6000 nodes, 12 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (46.67 seconds)
Cbc0010I After 6100 nodes, 7 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (47.42 seconds)
Cbc0010I After 6200 nodes, 10 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (48.29 seconds)
Cbc0010I After 6300 nodes, 6 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (49.16 seconds)
Cbc0010I After 6400 nodes, 17 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (50.41 seconds)
Cbc0010I After 6500 nodes, 22 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (51.18 seconds)
Cbc0038I Full problem 192 rows 9312 columns, reduced to 149 rows 5118 columns
Cbc0010I After 6600 nodes, 9 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (52.38 seconds)
Cbc0010I After 6700 nodes, 7 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (53.37 seconds)
Cbc0010I After 6800 nodes, 12 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (54.35 seconds)
Cbc0010I After 6900 nodes, 15 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (55.28 seconds)
Cbc0010I After 7000 nodes, 9 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (56.24 seconds)
Cbc0010I After 7100 nodes, 7 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (57.23 seconds)
Cbc0038I Full problem 192 rows 9312 columns, reduced to 150 rows 5216 columns
Cbc0010I After 7200 nodes, 5 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (58.32 seconds)
Cbc0010I After 7300 nodes, 6 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (59.34 seconds)
Cbc0010I After 7400 nodes, 3 on tree, 1.6423217e+08 best solution, best possible 1.5015085e+08 (60.50 seconds)
Cbc0010I After 7500 nodes, 14 on tree, 1.6423217e+08 best solution, best possible 1.5244603e+08 (61.81 seconds)
Cbc0010I After 7600 nodes, 13 on tree, 1.6423217e+08 best solution, best possible 1.5244603e+08 (62.69 seconds)
Cbc0010I After 7700 nodes, 14 on tree, 1.6423217e+08 best solution, best possible 1.5244603e+08 (63.58 seconds)
Cbc0010I After 7800 nodes, 14 on tree, 1.6423217e+08 best solution, best possible 1.5244603e+08 (64.42 seconds)
Cbc0010I After 7900 nodes, 14 on tree, 1.6423217e+08 best solution, best possible 1.5244603e+08 (65.31 seconds)
Cbc0010I After 8000 nodes, 11 on tree, 1.6423217e+08 best solution, best possible 1.5244603e+08 (66.25 seconds)
Cbc0010I After 8100 nodes, 13 on tree, 1.6423217e+08 best solution, best possible 1.5244603e+08 (67.32 seconds)
Cbc0010I After 8200 nodes, 9 on tree, 1.6423217e+08 best solution, best possible 1.5244603e+08 (68.27 seconds)
Cbc0010I After 8300 nodes, 11 on tree, 1.6423217e+08 best solution, best possible 1.5244603e+08 (69.04 seconds)
Cbc0038I Full problem 192 rows 9312 columns, reduced to 147 rows 4924 columns
Cbc0010I After 8400 nodes, 13 on tree, 1.6423217e+08 best solution, best possible 1.5244603e+08 (69.92 seconds)
Cbc0010I After 8500 nodes, 5 on tree, 1.6423217e+08 best solution, best possible 1.5244603e+08 (70.94 seconds)
Cbc0010I After 8600 nodes, 14 on tree, 1.6423217e+08 best solution, best possible 1.5244603e+08 (71.69 seconds)
Cbc0010I After 8700 nodes, 7 on tree, 1.6423217e+08 best solution, best possible 1.5244603e+08 (72.57 seconds)
Cbc0010I After 8800 nodes, 5 on tree, 1.6423217e+08 best solution, best possible 1.5244603e+08 (73.49 seconds)
Cbc0010I After 8900 nodes, 12 on tree, 1.6423217e+08 best solution, best possible 1.5244603e+08 (74.39 seconds)
Cbc0010I After 9000 nodes, 6 on tree, 1.6423217e+08 best solution, best possible 1.5244603e+08 (75.30 seconds)
Cbc0010I After 9100 nodes, 13 on tree, 1.6423217e+08 best solution, best possible 1.5244603e+08 (76.38 seconds)
Cbc0010I After 9200 nodes, 12 on tree, 1.6423217e+08 best solution, best possible 1.5542766e+08 (77.53 seconds)
Cbc0010I After 9300 nodes, 6 on tree, 1.6423217e+08 best solution, best possible 1.5542766e+08 (78.41 seconds)
Cbc0010I After 9400 nodes, 12 on tree, 1.6423217e+08 best solution, best possible 1.5542766e+08 (79.48 seconds)
Cbc0001I Search completed - best objective 164232172.2315974, took 49032 iterations and 9498 nodes (80.70 seconds)
Cbc0032I Strong branching done 33282 times (92256 iterations), fathomed 1598 nodes and fixed 5751 variables
Cbc0035I Maximum depth 47, 406 variables fixed on reduced cost
Cuts at root node changed objective from 2.87151e+07 to 1.50151e+08
Probing was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.045 seconds)
Gomory was tried 6 times and created 102 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
Knapsack was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
FlowCover was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
TwoMirCuts was tried 6402 times and created 144 cuts of which 0 were active after adding rounds of cuts (1.560 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                164232172.23159736
Enumerated nodes:               9498
Total iterations:               49032
Time (CPU seconds):             80.46
Time (Wallclock seconds):       80.72

Option for printingOptions changed from normal to all
Total time (CPU seconds):       80.47   (Wallclock seconds):       80.74

