Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/ea37e8198d3546ca90703051da49d9e5-pulp.mps -sec 600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/ea37e8198d3546ca90703051da49d9e5-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 269 COLUMNS
At line 87786 RHS
At line 88051 BOUNDS
At line 105608 ENDATA
Problem MODEL has 264 rows, 17556 columns and 34980 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.11818 - 0.01 seconds
Cgl0004I processed model has 264 rows, 17556 columns (17556 integer (17556 of which binary)) and 34980 elements
Cbc0038I Initial state - 132 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (132) obj. 1.11818 iterations 0
Cbc0038I Pass   2: suminf.    0.85606 (113) obj. 22.2027 iterations 19
Cbc0038I Pass   3: suminf.    0.78030 (103) obj. 33.2998 iterations 10
Cbc0038I Pass   4: suminf.    0.64394 (85) obj. 53.2746 iterations 18
Cbc0038I Pass   5: suminf.    0.52273 (69) obj. 71.03 iterations 16
Cbc0038I Pass   6: suminf.    0.40152 (53) obj. 88.7853 iterations 16
Cbc0038I Pass   7: suminf.    0.21212 (28) obj. 116.528 iterations 25
Cbc0038I Pass   8: suminf.    0.08333 (11) obj. 135.393 iterations 17
Cbc0038I Solution found of 147.6
Cbc0038I Before mini branch and bound, 17424 integers at bound fixed and 0 continuous
Cbc0038I Full problem 264 rows 17556 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.27 seconds)
Cbc0038I Round again with cutoff of 132.952
Cbc0038I Pass   9: suminf.    1.00000 (132) obj. 1.11818 iterations 0
Cbc0038I Pass  10: suminf.    0.78788 (104) obj. 32.1901 iterations 28
Cbc0038I Pass  11: suminf.    0.69697 (92) obj. 45.5066 iterations 12
Cbc0038I Pass  12: suminf.    0.61364 (81) obj. 57.7134 iterations 11
Cbc0038I Pass  13: suminf.    0.49242 (65) obj. 75.4688 iterations 16
Cbc0038I Pass  14: suminf.    0.31818 (42) obj. 100.992 iterations 23
Cbc0038I Pass  15: suminf.    0.17424 (23) obj. 122.077 iterations 19
Cbc0038I Pass  16: suminf.    0.29698 (14) obj. 132.952 iterations 17
Cbc0038I Pass  17: suminf.    0.29698 (14) obj. 132.952 iterations 0
Cbc0038I Pass  18: suminf.    0.29698 (14) obj. 132.952 iterations 12
Cbc0038I Pass  19: suminf.    0.29698 (14) obj. 132.952 iterations 0
Cbc0038I Pass  20: suminf.    0.29698 (14) obj. 132.952 iterations 1
Cbc0038I Pass  21: suminf.    0.29698 (14) obj. 132.952 iterations 0
Cbc0038I Pass  22: suminf.    0.29698 (14) obj. 132.952 iterations 1
Cbc0038I Pass  23: suminf.    0.29698 (14) obj. 132.952 iterations 0
Cbc0038I Pass  24: suminf.    0.29698 (14) obj. 132.952 iterations 1
Cbc0038I Pass  25: suminf.    0.29698 (14) obj. 132.952 iterations 0
Cbc0038I Pass  26: suminf.    0.29698 (14) obj. 132.952 iterations 1
Cbc0038I Pass  27: suminf.    0.83190 (12) obj. 132.952 iterations 26
Cbc0038I Pass  28: suminf.    0.08333 (10) obj. 132.943 iterations 39
Cbc0038I Pass  29: suminf.    0.09126 (10) obj. 132.952 iterations 31
Cbc0038I Pass  30: suminf.    0.86175 (13) obj. 132.952 iterations 65
Cbc0038I Pass  31: suminf.    0.13503 (12) obj. 132.952 iterations 45
Cbc0038I Pass  32: suminf.    0.11988 (11) obj. 132.952 iterations 12
Cbc0038I Pass  33: suminf.    0.11988 (11) obj. 132.952 iterations 1
Cbc0038I Pass  34: suminf.    0.10473 (10) obj. 132.952 iterations 13
Cbc0038I Pass  35: suminf.    0.10473 (10) obj. 132.952 iterations 1
Cbc0038I Pass  36: suminf.    0.10473 (10) obj. 132.952 iterations 32
Cbc0038I Pass  37: suminf.    0.10473 (10) obj. 132.952 iterations 1
Cbc0038I Pass  38: suminf.    0.10473 (10) obj. 132.952 iterations 14
Cbc0038I Rounding solution of 120.583 is better than previous of 147.6

Cbc0038I Before mini branch and bound, 17344 integers at bound fixed and 0 continuous
Cbc0038I Full problem 264 rows 17556 columns, reduced to 33 rows 66 columns
Cbc0038I Mini branch and bound improved solution from 120.583 to 116.169 (0.49 seconds)
Cbc0038I Round again with cutoff of 93.1589
Cbc0038I Pass  38: suminf.    1.00000 (132) obj. 1.11818 iterations 0
Cbc0038I Pass  39: suminf.    0.81061 (107) obj. 28.861 iterations 25
Cbc0038I Pass  40: suminf.    0.73485 (97) obj. 39.9581 iterations 10
Cbc0038I Pass  41: suminf.    0.61364 (81) obj. 57.7134 iterations 16
Cbc0038I Pass  42: suminf.    0.53030 (70) obj. 69.9202 iterations 11
Cbc0038I Pass  43: suminf.    0.42958 (50) obj. 93.1589 iterations 32
Cbc0038I Pass  44: suminf.    0.42958 (50) obj. 93.1589 iterations 0
Cbc0038I Pass  45: suminf.    0.42958 (50) obj. 93.1589 iterations 16
Cbc0038I Pass  46: suminf.    0.42958 (50) obj. 93.1589 iterations 0
Cbc0038I Pass  47: suminf.    0.42958 (50) obj. 93.1589 iterations 1
Cbc0038I Pass  48: suminf.    0.42958 (50) obj. 93.1589 iterations 0
Cbc0038I Pass  49: suminf.    0.42958 (50) obj. 93.1589 iterations 1
Cbc0038I Pass  50: suminf.    0.76468 (46) obj. 93.1589 iterations 15
Cbc0038I Pass  51: suminf.    0.76468 (46) obj. 93.1589 iterations 6
Cbc0038I Pass  52: suminf.    0.76468 (46) obj. 93.1589 iterations 1
Cbc0038I Pass  53: suminf.    0.76468 (46) obj. 93.1589 iterations 0
Cbc0038I Pass  54: suminf.    0.76468 (46) obj. 93.1589 iterations 1
Cbc0038I Pass  55: suminf.    0.71225 (46) obj. 93.1589 iterations 37
Cbc0038I Pass  56: suminf.    0.71225 (46) obj. 93.1589 iterations 18
Cbc0038I Pass  57: suminf.    0.71225 (46) obj. 93.1589 iterations 3
Cbc0038I Pass  58: suminf.    0.71225 (46) obj. 93.1589 iterations 0
Cbc0038I Pass  59: suminf.    0.69710 (46) obj. 93.1589 iterations 3
Cbc0038I Pass  60: suminf.    0.69710 (46) obj. 93.1589 iterations 0
Cbc0038I Pass  61: suminf.    0.71225 (46) obj. 93.1589 iterations 6
Cbc0038I Pass  62: suminf.    0.71225 (46) obj. 93.1589 iterations 0
Cbc0038I Pass  63: suminf.    0.71225 (46) obj. 93.1589 iterations 3
Cbc0038I Pass  64: suminf.    0.71225 (46) obj. 93.1589 iterations 0
Cbc0038I Pass  65: suminf.    0.71225 (46) obj. 93.1589 iterations 3
Cbc0038I Pass  66: suminf.    0.89392 (44) obj. 93.1589 iterations 52
Cbc0038I Pass  67: suminf.    0.34091 (42) obj. 93.1339 iterations 32
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17382 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.66 seconds)
Cbc0038I After 0.66 seconds - Feasibility pump exiting with objective of 116.169 - took 0.47 seconds
Cbc0012I Integer solution of 116.1691 found by feasibility pump after 0 iterations and 0 nodes (0.67 seconds)
Cbc0031I 2052 added rows had average density of 12.439571
Cbc0013I At root node, 2052 cuts changed objective from 1.1181818 to 13.406704 in 50 passes
Cbc0014I Cut generator 0 (Probing) - 3291 row cuts average 2.8 elements, 0 column cuts (526 active)  in 2.965 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 342 row cuts average 199.7 elements, 0 column cuts (0 active)  in 1.933 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 7573 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.424 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.131 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2400 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.348 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 226 row cuts average 128.2 elements, 0 column cuts (0 active)  in 0.262 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 116.1691 best solution, best possible 13.406704 (46.56 seconds)
Cbc0012I Integer solution of 13.413955 found by DiveCoefficient after 79576 iterations and 2 nodes (49.24 seconds)
Cbc0012I Integer solution of 13.413955 found by heuristic after 78820 iterations and 1 nodes (49.24 seconds)
Cbc0030I Thread 0 used 6 times,  waiting to start 0.69995213, 5.38532 cpu time, 41 locks, 0.0090544224 locked, 0.0017659664 waiting for locks
Cbc0030I Thread 1 used 1 times,  waiting to start 3.1870327, 2.888095 cpu time, 10 locks, 0.0023787022 locked, 7.1525574e-06 waiting for locks
Cbc0030I Thread 2 used 1 times,  waiting to start 4.7038772, 0.12624 cpu time, 4 locks, 0.0015687943 locked, 0.00022006035 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 4.7179601, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 4.687207, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 4.6551931, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 4.624248, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 4.5939491, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 4.5608861, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 4.5285192, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 4.4956579, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 4.4637341, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 4.0288982 waiting for threads,  21 locks, 9.7036362e-05 locked, 0.0021109581 waiting for locks
Cbc0001I Search completed - best objective 13.41395547524696, took 84219 iterations and 8 nodes (51.10 seconds)
Cbc0032I Strong branching done 310 times (23042 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 30477 variables fixed on reduced cost
Cuts at root node changed objective from 1.11818 to 13.4067
Probing was tried 665 times and created 44005 cuts of which 6838 were active after adding rounds of cuts (38.651 seconds)
Gomory was tried 650 times and created 4446 cuts of which 0 were active after adding rounds of cuts (25.130 seconds)
Knapsack was tried 665 times and created 99315 cuts of which 0 were active after adding rounds of cuts (5.687 seconds)
Clique was tried 650 times and created 0 cuts of which 0 were active after adding rounds of cuts (1.709 seconds)
MixedIntegerRounding2 was tried 665 times and created 31261 cuts of which 0 were active after adding rounds of cuts (4.608 seconds)
FlowCover was tried 650 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.278 seconds)
TwoMirCuts was tried 650 times and created 2938 cuts of which 0 were active after adding rounds of cuts (3.411 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
ImplicationCuts was tried 15 times and created 354 cuts of which 0 were active after adding rounds of cuts (0.028 seconds)

Result - Optimal solution found

Objective value:                13.41395548
Enumerated nodes:               8
Total iterations:               84219
Time (CPU seconds):             52.20
Time (Wallclock seconds):       51.13

Option for printingOptions changed from normal to all
Total time (CPU seconds):       52.24   (Wallclock seconds):       51.18

