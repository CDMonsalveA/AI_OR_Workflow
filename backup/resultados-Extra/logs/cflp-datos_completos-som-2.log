Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/54e5fc0d67e149d58332539620bca57c-pulp.mps -sec 3600 -timeMode elapsed -branch -printingOptions all -solution /tmp/54e5fc0d67e149d58332539620bca57c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 123 COLUMNS
At line 10744 RHS
At line 10863 BOUNDS
At line 10923 ENDATA
Problem MODEL has 118 rows, 3540 columns and 7021 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
Option for timeMode changed from cpu to elapsed
Continuous objective value is 4.41746e+07 - 0.00 seconds
Cgl0004I processed model has 118 rows, 3540 columns (59 integer (59 of which binary)) and 7021 elements
Cbc0038I Initial state - 59 integers unsatisfied sum - 10.5496
Cbc0038I Pass   1: suminf.    0.17702 (1) obj. 1.56869e+09 iterations 58
Cbc0038I Solution found of 1.5831e+09
Cbc0038I Relaxing continuous gives 1.1286e+09
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 3364 continuous
Cbc0038I Full problem 118 rows 3540 columns, reduced to 112 rows 164 columns
Cbc0038I Mini branch and bound improved solution from 1.1286e+09 to 1.97138e+08 (0.03 seconds)
Cbc0038I Freeing continuous variables gives a solution of 1.89437e+08
Cbc0038I Round again with cutoff of 1.74911e+08
Cbc0038I Pass   2: suminf.    3.68999 (17) obj. 1.74911e+08 iterations 144
Cbc0038I Pass   3: suminf.    0.62186 (8) obj. 1.74911e+08 iterations 46
Cbc0038I Pass   4: suminf.    0.58700 (4) obj. 1.74911e+08 iterations 29
Cbc0038I Pass   5: suminf.    0.06627 (1) obj. 1.74911e+08 iterations 20
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 1.74911e+08 iterations 4
Cbc0038I Solution found of 1.74911e+08
Cbc0038I Relaxing continuous gives 1.73355e+08
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 3361 continuous
Cbc0038I Full problem 118 rows 3540 columns, reduced to 93 rows 143 columns
Cbc0038I Mini branch and bound improved solution from 1.73355e+08 to 1.60756e+08 (0.10 seconds)
Cbc0038I Freeing continuous variables gives a solution of 1.55375e+08
Cbc0038I Round again with cutoff of 1.33135e+08
Cbc0038I Pass   7: suminf.    4.50899 (28) obj. 1.33135e+08 iterations 19
Cbc0038I Pass   8: suminf.    2.13870 (19) obj. 1.33135e+08 iterations 62
Cbc0038I Pass   9: suminf.    1.98584 (16) obj. 1.33135e+08 iterations 50
Cbc0038I Pass  10: suminf.    3.78541 (19) obj. 1.33135e+08 iterations 33
Cbc0038I Pass  11: suminf.    3.74096 (20) obj. 1.33135e+08 iterations 3
Cbc0038I Pass  12: suminf.    3.47299 (19) obj. 1.33135e+08 iterations 15
Cbc0038I Pass  13: suminf.    3.34829 (19) obj. 1.33135e+08 iterations 5
Cbc0038I Pass  14: suminf.    3.41429 (18) obj. 1.33135e+08 iterations 11
Cbc0038I Pass  15: suminf.    2.98857 (17) obj. 1.33135e+08 iterations 9
Cbc0038I Pass  16: suminf.    3.59135 (19) obj. 1.33135e+08 iterations 8
Cbc0038I Pass  17: suminf.    3.57951 (19) obj. 1.33135e+08 iterations 1
Cbc0038I Pass  18: suminf.    3.82610 (19) obj. 1.33135e+08 iterations 4
Cbc0038I Pass  19: suminf.    3.82610 (19) obj. 1.33135e+08 iterations 0
Cbc0038I Pass  20: suminf.    3.85500 (19) obj. 1.33135e+08 iterations 4
Cbc0038I Pass  21: suminf.    2.51412 (17) obj. 1.33135e+08 iterations 46
Cbc0038I Pass  22: suminf.    2.50884 (17) obj. 1.33135e+08 iterations 1
Cbc0038I Pass  23: suminf.    3.47299 (19) obj. 1.33135e+08 iterations 18
Cbc0038I Pass  24: suminf.    3.34829 (19) obj. 1.33135e+08 iterations 6
Cbc0038I Pass  25: suminf.    3.59135 (19) obj. 1.33135e+08 iterations 7
Cbc0038I Pass  26: suminf.    3.57951 (19) obj. 1.33135e+08 iterations 1
Cbc0038I Pass  27: suminf.    3.82610 (19) obj. 1.33135e+08 iterations 6
Cbc0038I Pass  28: suminf.    3.82610 (19) obj. 1.33135e+08 iterations 0
Cbc0038I Pass  29: suminf.    3.85500 (19) obj. 1.33135e+08 iterations 5
Cbc0038I Pass  30: suminf.    3.36419 (19) obj. 1.33135e+08 iterations 12
Cbc0038I Pass  31: suminf.    3.36419 (19) obj. 1.33135e+08 iterations 0
Cbc0038I Pass  32: suminf.    3.39491 (19) obj. 1.33135e+08 iterations 10
Cbc0038I Pass  33: suminf.    3.39491 (19) obj. 1.33135e+08 iterations 0
Cbc0038I Pass  34: suminf.    3.41429 (18) obj. 1.33135e+08 iterations 8
Cbc0038I Pass  35: suminf.    3.02697 (17) obj. 1.33135e+08 iterations 7
Cbc0038I Pass  36: suminf.    3.59135 (19) obj. 1.33135e+08 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 3378 continuous
Cbc0038I Full problem 118 rows 3540 columns, reduced to 73 rows 110 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of 1.55375e+08 - took 0.11 seconds
Cbc0012I Integer solution of 1.55375e+08 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0012I Integer solution of 1.5202084e+08 found by DiveCoefficient after 155 iterations and 0 nodes (0.29 seconds)
Cbc0031I 78 added rows had average density of 87.051282
Cbc0013I At root node, 78 cuts changed objective from 44174605 to 1.4331589e+08 in 19 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 59.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 85 row cuts average 100.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 95 row cuts average 94.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1.5202084e+08 best solution, best possible 1.4331589e+08 (0.29 seconds)
Cbc0012I Integer solution of 1.5136853e+08 found by DiveCoefficient after 156 iterations and 1 nodes (0.30 seconds)
Cbc0012I Integer solution of 1.4938349e+08 found by DiveCoefficient after 157 iterations and 2 nodes (0.31 seconds)
Cbc0012I Integer solution of 1.476421e+08 found by DiveCoefficient after 159 iterations and 4 nodes (0.34 seconds)
Cbc0012I Integer solution of 1.4534126e+08 found by DiveCoefficient after 160 iterations and 5 nodes (0.35 seconds)
Cbc0012I Integer solution of 1.449987e+08 found by DiveCoefficient after 175 iterations and 8 nodes (0.37 seconds)
Cbc0012I Integer solution of 1.4408572e+08 found by rounding after 179 iterations and 9 nodes (0.37 seconds)
Cbc0001I Search completed - best objective 144085723.0031253, took 237 iterations and 22 nodes (0.39 seconds)
Cbc0032I Strong branching done 122 times (486 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 10, 2 variables fixed on reduced cost
Cuts at root node changed objective from 4.41746e+07 to 1.43316e+08
Probing was tried 19 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.042 seconds)
Gomory was tried 19 times and created 85 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Knapsack was tried 19 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 19 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 19 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
FlowCover was tried 19 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.026 seconds)
TwoMirCuts was tried 29 times and created 95 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                144085723.00312528
Enumerated nodes:               22
Total iterations:               237
Time (CPU seconds):             0.37
Time (Wallclock seconds):       0.39

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.38   (Wallclock seconds):       0.40

