Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/082496bc6f7542e7990678c1b09ba29c-pulp.mps -sec 3600 -timeMode elapsed -branch -printingOptions all -solution /tmp/082496bc6f7542e7990678c1b09ba29c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 83 COLUMNS
At line 4764 RHS
At line 4843 BOUNDS
At line 4883 ENDATA
Problem MODEL has 78 rows, 1560 columns and 3081 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
Option for timeMode changed from cpu to elapsed
Continuous objective value is 5.90682e+07 - 0.00 seconds
Cgl0004I processed model has 78 rows, 1560 columns (39 integer (39 of which binary)) and 3081 elements
Cbc0038I Initial state - 39 integers unsatisfied sum - 7.7743
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.41279e+08 iterations 39
Cbc0038I Solution found of 3.41279e+08
Cbc0038I Relaxing continuous gives 2.15942e+08
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 1444 continuous
Cbc0038I Full problem 78 rows 1560 columns, reduced to 73 rows 106 columns
Cbc0038I Mini branch and bound improved solution from 2.15942e+08 to 1.59626e+08 (0.03 seconds)
Cbc0038I Freeing continuous variables gives a solution of 1.52143e+08
Cbc0038I Round again with cutoff of 1.42835e+08
Cbc0038I Pass   2: suminf.    1.16395 (6) obj. 1.42835e+08 iterations 57
Cbc0038I Pass   3: suminf.    0.35599 (1) obj. 1.42835e+08 iterations 33
Cbc0038I Pass   4: suminf.    0.09863 (1) obj. 1.42835e+08 iterations 10
Cbc0038I Pass   5: suminf.    0.88050 (4) obj. 1.42835e+08 iterations 36
Cbc0038I Pass   6: suminf.    0.53741 (3) obj. 1.42835e+08 iterations 1
Cbc0038I Pass   7: suminf.    0.35066 (1) obj. 1.42835e+08 iterations 14
Cbc0038I Pass   8: suminf.    0.18585 (1) obj. 1.42835e+08 iterations 4
Cbc0038I Pass   9: suminf.    0.37127 (2) obj. 1.42835e+08 iterations 42
Cbc0038I Pass  10: suminf.    0.39046 (1) obj. 1.42835e+08 iterations 18
Cbc0038I Pass  11: suminf.    0.18636 (1) obj. 1.42835e+08 iterations 3
Cbc0038I Pass  12: suminf.    0.19294 (1) obj. 1.42835e+08 iterations 32
Cbc0038I Pass  13: suminf.    0.38802 (1) obj. 1.42835e+08 iterations 6
Cbc0038I Pass  14: suminf.    0.19294 (1) obj. 1.42835e+08 iterations 12
Cbc0038I Pass  15: suminf.    0.21522 (1) obj. 1.42835e+08 iterations 22
Cbc0038I Pass  16: suminf.    0.38143 (1) obj. 1.42835e+08 iterations 4
Cbc0038I Pass  17: suminf.    0.21522 (1) obj. 1.42835e+08 iterations 3
Cbc0038I Pass  18: suminf.    0.38976 (2) obj. 1.42835e+08 iterations 44
Cbc0038I Pass  19: suminf.    0.33713 (2) obj. 1.42835e+08 iterations 6
Cbc0038I Pass  20: suminf.    0.31680 (2) obj. 1.42835e+08 iterations 1
Cbc0038I Pass  21: suminf.    0.36318 (1) obj. 1.42835e+08 iterations 9
Cbc0038I Pass  22: suminf.    0.23726 (1) obj. 1.42835e+08 iterations 4
Cbc0038I Pass  23: suminf.    0.00000 (0) obj. 1.42835e+08 iterations 24
Cbc0038I Solution found of 1.42835e+08
Cbc0038I Relaxing continuous gives 1.40916e+08
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 1387 continuous
Cbc0038I Full problem 78 rows 1560 columns, reduced to 70 rows 162 columns
Cbc0038I Mini branch and bound improved solution from 1.40916e+08 to 1.39022e+08 (0.08 seconds)
Cbc0038I Freeing continuous variables gives a solution of 1.38686e+08
Cbc0038I Round again with cutoff of 1.22762e+08
Cbc0038I Pass  24: suminf.    1.75529 (9) obj. 1.22762e+08 iterations 8
Cbc0038I Pass  25: suminf.    0.71749 (3) obj. 1.22762e+08 iterations 37
Cbc0038I Pass  26: suminf.    0.67713 (6) obj. 1.22762e+08 iterations 4
Cbc0038I Pass  27: suminf.    0.34717 (1) obj. 1.22762e+08 iterations 26
Cbc0038I Pass  28: suminf.    0.33328 (1) obj. 1.22762e+08 iterations 2
Cbc0038I Pass  29: suminf.    0.95365 (4) obj. 1.22762e+08 iterations 26
Cbc0038I Pass  30: suminf.    0.69901 (5) obj. 1.22762e+08 iterations 21
Cbc0038I Pass  31: suminf.    0.69901 (5) obj. 1.22762e+08 iterations 0
Cbc0038I Pass  32: suminf.    1.47136 (6) obj. 1.22762e+08 iterations 11
Cbc0038I Pass  33: suminf.    1.47136 (6) obj. 1.22762e+08 iterations 0
Cbc0038I Pass  34: suminf.    2.45124 (7) obj. 1.22762e+08 iterations 10
Cbc0038I Pass  35: suminf.    2.45124 (7) obj. 1.22762e+08 iterations 0
Cbc0038I Pass  36: suminf.    2.59764 (7) obj. 1.22762e+08 iterations 8
Cbc0038I Pass  37: suminf.    2.45830 (8) obj. 1.22762e+08 iterations 4
Cbc0038I Pass  38: suminf.    2.68644 (8) obj. 1.22762e+08 iterations 7
Cbc0038I Pass  39: suminf.    2.68644 (8) obj. 1.22762e+08 iterations 0
Cbc0038I Pass  40: suminf.    3.04696 (9) obj. 1.22762e+08 iterations 5
Cbc0038I Pass  41: suminf.    3.04696 (9) obj. 1.22762e+08 iterations 0
Cbc0038I Pass  42: suminf.    3.13475 (9) obj. 1.22762e+08 iterations 4
Cbc0038I Pass  43: suminf.    3.13475 (9) obj. 1.22762e+08 iterations 0
Cbc0038I Pass  44: suminf.    3.24594 (10) obj. 1.22762e+08 iterations 7
Cbc0038I Pass  45: suminf.    3.24594 (10) obj. 1.22762e+08 iterations 0
Cbc0038I Pass  46: suminf.    2.87039 (10) obj. 1.22762e+08 iterations 4
Cbc0038I Pass  47: suminf.    2.80085 (9) obj. 1.22762e+08 iterations 1
Cbc0038I Pass  48: suminf.    2.63574 (9) obj. 1.22762e+08 iterations 6
Cbc0038I Pass  49: suminf.    2.63574 (9) obj. 1.22762e+08 iterations 0
Cbc0038I Pass  50: suminf.    2.80085 (9) obj. 1.22762e+08 iterations 5
Cbc0038I Pass  51: suminf.    1.93666 (8) obj. 1.22762e+08 iterations 13
Cbc0038I Pass  52: suminf.    1.93095 (8) obj. 1.22762e+08 iterations 1
Cbc0038I Pass  53: suminf.    3.24594 (10) obj. 1.22762e+08 iterations 12
Cbc0038I Rounding solution of 1.35573e+08 is better than previous of 1.38686e+08

Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 1428 continuous
Cbc0038I Full problem 78 rows 1560 columns, reduced to 65 rows 115 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of 1.03654e+08
Cbc0038I Pass  53: suminf.    2.63351 (16) obj. 1.03654e+08 iterations 9
Cbc0038I Pass  54: suminf.    3.67009 (15) obj. 1.03654e+08 iterations 51
Cbc0038I Pass  55: suminf.    3.62725 (15) obj. 1.03654e+08 iterations 2
Cbc0038I Pass  56: suminf.    4.22338 (17) obj. 1.03654e+08 iterations 25
Cbc0038I Pass  57: suminf.    3.93502 (17) obj. 1.03654e+08 iterations 5
Cbc0038I Pass  58: suminf.    4.48330 (18) obj. 1.03654e+08 iterations 11
Cbc0038I Pass  59: suminf.    4.38926 (17) obj. 1.03654e+08 iterations 1
Cbc0038I Pass  60: suminf.    4.39539 (17) obj. 1.03654e+08 iterations 3
Cbc0038I Pass  61: suminf.    4.39539 (17) obj. 1.03654e+08 iterations 0
Cbc0038I Pass  62: suminf.    4.38926 (17) obj. 1.03654e+08 iterations 3
Cbc0038I Pass  63: suminf.    4.44299 (18) obj. 1.03654e+08 iterations 26
Cbc0038I Pass  64: suminf.    4.42607 (18) obj. 1.03654e+08 iterations 1
Cbc0038I Pass  65: suminf.    4.43770 (18) obj. 1.03654e+08 iterations 13
Cbc0038I Pass  66: suminf.    4.38926 (17) obj. 1.03654e+08 iterations 1
Cbc0038I Pass  67: suminf.    4.39539 (17) obj. 1.03654e+08 iterations 3
Cbc0038I Pass  68: suminf.    4.39539 (17) obj. 1.03654e+08 iterations 0
Cbc0038I Pass  69: suminf.    4.38926 (17) obj. 1.03654e+08 iterations 3
Cbc0038I Pass  70: suminf.    4.24833 (19) obj. 1.03654e+08 iterations 29
Cbc0038I Pass  71: suminf.    4.24833 (19) obj. 1.03654e+08 iterations 0
Cbc0038I Pass  72: suminf.    4.91956 (19) obj. 1.03654e+08 iterations 10
Cbc0038I Pass  73: suminf.    4.13094 (17) obj. 1.03654e+08 iterations 7
Cbc0038I Pass  74: suminf.    4.48836 (18) obj. 1.03654e+08 iterations 5
Cbc0038I Pass  75: suminf.    4.24507 (18) obj. 1.03654e+08 iterations 2
Cbc0038I Pass  76: suminf.    4.78701 (19) obj. 1.03654e+08 iterations 5
Cbc0038I Pass  77: suminf.    4.78701 (19) obj. 1.03654e+08 iterations 0
Cbc0038I Pass  78: suminf.    4.46337 (18) obj. 1.03654e+08 iterations 4
Cbc0038I Pass  79: suminf.    4.05492 (16) obj. 1.03654e+08 iterations 26
Cbc0038I Pass  80: suminf.    4.05492 (16) obj. 1.03654e+08 iterations 0
Cbc0038I Pass  81: suminf.    5.01119 (19) obj. 1.03654e+08 iterations 13
Cbc0038I Pass  82: suminf.    4.28758 (20) obj. 1.03654e+08 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 1446 continuous
Cbc0038I Full problem 78 rows 1560 columns, reduced to 53 rows 84 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of 1.35573e+08 - took 0.15 seconds
Cbc0012I Integer solution of 1.3557334e+08 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0012I Integer solution of 1.3359782e+08 found by DiveCoefficient after 118 iterations and 0 nodes (0.19 seconds)
Cbc0031I 53 added rows had average density of 66.396226
Cbc0013I At root node, 53 cuts changed objective from 59068189 to 1.3027133e+08 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 70 row cuts average 77.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 80 row cuts average 86.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1.3359782e+08 best solution, best possible 1.3027133e+08 (0.20 seconds)
Cbc0012I Integer solution of 1.3094948e+08 found by DiveCoefficient after 129 iterations and 2 nodes (0.20 seconds)
Cbc0012I Integer solution of 1.3030433e+08 found by rounding after 135 iterations and 3 nodes (0.20 seconds)
Cbc0001I Search completed - best objective 130304327.6098562, took 156 iterations and 6 nodes (0.21 seconds)
Cbc0032I Strong branching done 26 times (157 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 0 variables fixed on reduced cost
Cuts at root node changed objective from 5.90682e+07 to 1.30271e+08
Probing was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Gomory was tried 13 times and created 70 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
TwoMirCuts was tried 13 times and created 80 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                130304327.60985616
Enumerated nodes:               6
Total iterations:               156
Time (CPU seconds):             0.21
Time (Wallclock seconds):       0.21

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.21

