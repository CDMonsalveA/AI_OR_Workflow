Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/ed2b6186f2d74fc7b007d846ab5f510a-pulp.mps -sec 600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/ed2b6186f2d74fc7b007d846ab5f510a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 185 COLUMNS
At line 40956 RHS
At line 41137 BOUNDS
At line 49328 ENDATA
Problem MODEL has 180 rows, 8190 columns and 16290 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.20909 - 0.00 seconds
Cgl0004I processed model has 180 rows, 8190 columns (8190 integer (8190 of which binary)) and 16290 elements
Cbc0038I Initial state - 90 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (90) obj. 1.20909 iterations 0
Cbc0038I Pass   2: suminf.    0.72222 (65) obj. 31.1005 iterations 25
Cbc0038I Pass   3: suminf.    0.55556 (50) obj. 49.0354 iterations 15
Cbc0038I Pass   4: suminf.    0.24444 (22) obj. 82.5137 iterations 28
Cbc0038I Pass   5: suminf.    0.02222 (2) obj. 106.427 iterations 20
Cbc0038I Solution found of 108.818
Cbc0038I Before mini branch and bound, 8100 integers at bound fixed and 0 continuous
Cbc0038I Full problem 180 rows 8190 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
Cbc0038I Round again with cutoff of 98.0573
Cbc0038I Pass   6: suminf.    1.00000 (90) obj. 1.20909 iterations 0
Cbc0038I Pass   7: suminf.    0.82222 (74) obj. 20.3396 iterations 16
Cbc0038I Pass   8: suminf.    0.53333 (48) obj. 51.4267 iterations 26
Cbc0038I Pass   9: suminf.    0.22222 (20) obj. 84.9051 iterations 28
Cbc0038I Pass  10: suminf.    0.10001 (10) obj. 98.0573 iterations 28
Cbc0038I Pass  11: suminf.    0.10001 (10) obj. 98.0573 iterations 0
Cbc0038I Pass  12: suminf.    0.91886 (13) obj. 98.0573 iterations 24
Cbc0038I Pass  13: suminf.    0.12222 (11) obj. 97.908 iterations 29
Cbc0038I Pass  14: suminf.    0.24569 (11) obj. 98.0573 iterations 35
Cbc0038I Pass  15: suminf.    0.12222 (11) obj. 97.908 iterations 32
Cbc0038I Pass  16: suminf.    1.07122 (13) obj. 98.0573 iterations 39
Cbc0038I Pass  17: suminf.    0.24343 (12) obj. 98.0573 iterations 20
Cbc0038I Pass  18: suminf.    0.24343 (12) obj. 98.0573 iterations 7
Cbc0038I Pass  19: suminf.    0.24343 (12) obj. 98.0573 iterations 1
Cbc0038I Pass  20: suminf.    0.22121 (11) obj. 98.0573 iterations 6
Cbc0038I Pass  21: suminf.    0.22121 (11) obj. 98.0573 iterations 1
Cbc0038I Pass  22: suminf.    0.22121 (11) obj. 98.0573 iterations 6
Cbc0038I Pass  23: suminf.    0.22121 (11) obj. 98.0573 iterations 1
Cbc0038I Pass  24: suminf.    0.22121 (11) obj. 98.0573 iterations 6
Cbc0038I Pass  25: suminf.    0.18694 (13) obj. 98.0573 iterations 38
Cbc0038I Pass  26: suminf.    0.15556 (11) obj. 98.0528 iterations 51
Cbc0038I Pass  27: suminf.    0.15927 (11) obj. 98.0573 iterations 48
Cbc0038I Pass  28: suminf.    0.15556 (11) obj. 98.0528 iterations 49
Cbc0038I Pass  29: suminf.    0.19928 (15) obj. 98.0573 iterations 79
Cbc0038I Pass  30: suminf.    0.18889 (13) obj. 98.0559 iterations 74
Cbc0038I Pass  31: suminf.    0.18999 (12) obj. 98.0573 iterations 87
Cbc0038I Pass  32: suminf.    0.14444 (11) obj. 98.0022 iterations 76
Cbc0038I Pass  33: suminf.    0.18999 (11) obj. 98.0573 iterations 83
Cbc0038I Pass  34: suminf.    0.96409 (13) obj. 98.0573 iterations 75
Cbc0038I Pass  35: suminf.    0.26391 (12) obj. 98.0573 iterations 56
Cbc0038I Rounding solution of 85.8824 is better than previous of 108.818

Cbc0038I Before mini branch and bound, 7974 integers at bound fixed and 0 continuous
Cbc0038I Full problem 180 rows 8190 columns, reduced to 56 rows 117 columns
Cbc0038I Mini branch and bound improved solution from 85.8824 to 67.654 (0.34 seconds)
Cbc0038I Round again with cutoff of 54.365
Cbc0038I Pass  35: suminf.    1.00000 (90) obj. 1.20909 iterations 0
Cbc0038I Pass  36: suminf.    0.78889 (71) obj. 23.9266 iterations 19
Cbc0038I Pass  37: suminf.    0.96355 (46) obj. 54.365 iterations 26
Cbc0038I Pass  38: suminf.    0.51111 (46) obj. 53.818 iterations 1
Cbc0038I Pass  39: suminf.    0.96355 (46) obj. 54.365 iterations 24
Cbc0038I Pass  40: suminf.    0.51111 (46) obj. 53.818 iterations 1
Cbc0038I Pass  41: suminf.    0.96355 (46) obj. 54.365 iterations 1
Cbc0038I Pass  42: suminf.    0.65928 (45) obj. 54.365 iterations 14
Cbc0038I Pass  43: suminf.    0.53333 (45) obj. 54.2127 iterations 9
Cbc0038I Pass  44: suminf.    0.65928 (45) obj. 54.365 iterations 9
Cbc0038I Pass  45: suminf.    0.51111 (44) obj. 54.1859 iterations 9
Cbc0038I Pass  46: suminf.    0.65928 (44) obj. 54.365 iterations 9
Cbc0038I Pass  47: suminf.    0.52384 (41) obj. 54.365 iterations 31
Cbc0038I Pass  48: suminf.    0.52384 (41) obj. 54.365 iterations 22
Cbc0038I Pass  49: suminf.    0.50161 (41) obj. 54.365 iterations 12
Cbc0038I Pass  50: suminf.    0.50161 (41) obj. 54.365 iterations 0
Cbc0038I Pass  51: suminf.    0.50161 (41) obj. 54.365 iterations 11
Cbc0038I Pass  52: suminf.    0.50161 (41) obj. 54.365 iterations 0
Cbc0038I Pass  53: suminf.    0.50161 (41) obj. 54.365 iterations 13
Cbc0038I Pass  54: suminf.    0.84240 (40) obj. 54.365 iterations 28
Cbc0038I Pass  55: suminf.    0.47778 (40) obj. 53.9242 iterations 32
Cbc0038I Pass  56: suminf.    0.84240 (40) obj. 54.365 iterations 30
Cbc0038I Pass  57: suminf.    0.47778 (40) obj. 53.9242 iterations 27
Cbc0038I Pass  58: suminf.    0.85330 (38) obj. 54.365 iterations 41
Cbc0038I Pass  59: suminf.    0.50158 (37) obj. 54.365 iterations 22
Cbc0038I Pass  60: suminf.    0.47936 (36) obj. 54.365 iterations 12
Cbc0038I Pass  61: suminf.    0.47936 (36) obj. 54.365 iterations 0
Cbc0038I Pass  62: suminf.    0.45713 (36) obj. 54.365 iterations 15
Cbc0038I Pass  63: suminf.    0.45713 (36) obj. 54.365 iterations 0
Cbc0038I Pass  64: suminf.    0.47936 (36) obj. 54.365 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8038 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.43 seconds)
Cbc0038I After 0.43 seconds - Feasibility pump exiting with objective of 67.654 - took 0.23 seconds
Cbc0012I Integer solution of 67.654018 found by feasibility pump after 0 iterations and 0 nodes (0.43 seconds)
Cbc0012I Integer solution of 17.833892 found by DiveCoefficient after 6920 iterations and 0 nodes (3.14 seconds)
Cbc0031I 703 added rows had average density of 19.728307
Cbc0013I At root node, 703 cuts changed objective from 1.2090909 to 17.833892 in 22 passes
Cbc0014I Cut generator 0 (Probing) - 762 row cuts average 2.0 elements, 0 column cuts (663 active)  in 0.605 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 203 row cuts average 187.4 elements, 0 column cuts (0 active)  in 0.373 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 942 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 839 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 247 row cuts average 132.0 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 0.17944193, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.16304779, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.148911, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.1335001, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.11904812, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.10433507, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.089516878, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.074534178, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.057188034, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.03995204, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.02344799, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.0069789886, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 5.0067902e-06 locked, 0 waiting for locks
Cbc0001I Search completed - best objective 17.83389182250066, took 6920 iterations and 0 nodes (3.38 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.20909 to 17.8339
Probing was tried 286 times and created 9906 cuts of which 8619 were active after adding rounds of cuts (7.861 seconds)
Gomory was tried 286 times and created 2639 cuts of which 0 were active after adding rounds of cuts (4.854 seconds)
Knapsack was tried 286 times and created 12246 cuts of which 0 were active after adding rounds of cuts (0.532 seconds)
Clique was tried 286 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.122 seconds)
MixedIntegerRounding2 was tried 286 times and created 10907 cuts of which 0 were active after adding rounds of cuts (0.925 seconds)
FlowCover was tried 286 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.068 seconds)
TwoMirCuts was tried 286 times and created 3211 cuts of which 0 were active after adding rounds of cuts (1.292 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Optimal solution found

Objective value:                17.83389182
Enumerated nodes:               0
Total iterations:               6920
Time (CPU seconds):             3.35
Time (Wallclock seconds):       3.40

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.36   (Wallclock seconds):       3.42

