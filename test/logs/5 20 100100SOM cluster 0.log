Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/tesis/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/cfb3f316ff6240dabb19ffcdf3f6979f-pulp.mps -sec 3600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/cfb3f316ff6240dabb19ffcdf3f6979f-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 34229 COLUMNS
At line 203878 RHS
At line 238103 BOUNDS
At line 272144 ENDATA
Problem MODEL has 34224 rows, 34040 columns and 135424 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 6.66147e+07 - 1.09 seconds
Cgl0004I processed model has 34224 rows, 34040 columns (184 integer (184 of which binary)) and 135424 elements
Cbc0038I Initial state - 55 integers unsatisfied sum - 11.6241
Cbc0038I Pass   1: (36.05 seconds) suminf.    0.95255 (17) obj. 2.34478e+08 iterations 44467
Cbc0038I Pass   2: (36.09 seconds) suminf.    0.79604 (16) obj. 2.40494e+08 iterations 1
Cbc0038I Pass   3: (38.26 seconds) suminf.    0.00808 (1) obj. 2.85565e+08 iterations 3269
Cbc0038I Solution found of 2.88651e+08
Cbc0038I Relaxing continuous gives 1.67949e+08
Cbc0038I Before mini branch and bound, 116 integers at bound fixed and 29804 continuous
Cbc0038I Full problem 34224 rows 34040 columns, reduced to 4304 rows 4120 columns
Cbc0038I Mini branch and bound improved solution from 1.67949e+08 to 1.64126e+08 (46.17 seconds)
Cbc0038I Freeing continuous variables gives a solution of 1.60798e+08
Cbc0038I Round again with cutoff of 1.51855e+08
Cbc0038I Pass   4: (69.20 seconds) suminf.    1.40724 (21) obj. 1.51855e+08 iterations 16966
Cbc0038I Pass   5: (71.33 seconds) suminf.    1.27037 (23) obj. 1.51855e+08 iterations 3929
Cbc0038I Pass   6: (83.45 seconds) suminf.    0.41358 (4) obj. 1.51855e+08 iterations 27899
Cbc0038I Pass   7: (84.72 seconds) suminf.    0.56734 (3) obj. 1.51855e+08 iterations 7095
Cbc0038I Pass   8: (85.65 seconds) suminf.    0.62098 (7) obj. 1.51855e+08 iterations 3838
Cbc0038I Pass   9: (86.12 seconds) suminf.    0.53900 (9) obj. 1.51855e+08 iterations 2632
Cbc0038I Pass  10: (87.38 seconds) suminf.    1.59140 (9) obj. 1.51855e+08 iterations 3686
Cbc0038I Pass  11: (87.62 seconds) suminf.    1.14948 (11) obj. 1.51855e+08 iterations 844
Cbc0038I Pass  12: (88.54 seconds) suminf.    1.97021 (10) obj. 1.51855e+08 iterations 3688
Cbc0038I Pass  13: (88.68 seconds) suminf.    1.61540 (11) obj. 1.51855e+08 iterations 531
Cbc0038I Pass  14: (88.74 seconds) suminf.    1.12629 (10) obj. 1.51855e+08 iterations 154
Cbc0038I Pass  15: (89.28 seconds) suminf.    3.09694 (14) obj. 1.51855e+08 iterations 1457
Cbc0038I Pass  16: (89.82 seconds) suminf.    0.54516 (7) obj. 1.51855e+08 iterations 2581
Cbc0038I Pass  17: (90.17 seconds) suminf.    3.09305 (13) obj. 1.51855e+08 iterations 1443
Cbc0038I Pass  18: (90.52 seconds) suminf.    1.13503 (10) obj. 1.51855e+08 iterations 1459
Cbc0038I Pass  19: (91.09 seconds) suminf.    2.42674 (13) obj. 1.51855e+08 iterations 1711
Cbc0038I Pass  20: (91.24 seconds) suminf.    1.13643 (11) obj. 1.51855e+08 iterations 369
Cbc0038I Pass  21: (91.93 seconds) suminf.    2.25545 (12) obj. 1.51855e+08 iterations 1936
Cbc0038I Pass  22: (92.00 seconds) suminf.    1.94855 (11) obj. 1.51855e+08 iterations 94
Cbc0038I Pass  23: (92.12 seconds) suminf.    1.22904 (10) obj. 1.51855e+08 iterations 429
Cbc0038I Pass  24: (92.66 seconds) suminf.    2.68036 (12) obj. 1.51855e+08 iterations 1526
Cbc0038I Pass  25: (92.86 seconds) suminf.    1.11819 (9) obj. 1.51855e+08 iterations 549
Cbc0038I Pass  26: (93.42 seconds) suminf.    3.01075 (13) obj. 1.51855e+08 iterations 2077
Cbc0038I Pass  27: (93.68 seconds) suminf.    1.11132 (10) obj. 1.51855e+08 iterations 901
Cbc0038I Pass  28: (94.21 seconds) suminf.    2.79919 (11) obj. 1.51855e+08 iterations 1545
Cbc0038I Pass  29: (94.62 seconds) suminf.    0.58047 (8) obj. 1.51855e+08 iterations 1491
Cbc0038I Pass  30: (95.01 seconds) suminf.    3.61613 (13) obj. 1.51855e+08 iterations 1484
Cbc0038I Pass  31: (95.54 seconds) suminf.    0.58287 (8) obj. 1.51855e+08 iterations 2364
Cbc0038I Pass  32: (97.78 seconds) suminf.    7.50995 (24) obj. 1.51855e+08 iterations 5968
Cbc0038I Pass  33: (98.26 seconds) suminf.    0.82249 (7) obj. 1.51855e+08 iterations 2228
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 29081 continuous
Cbc0038I Full problem 34224 rows 34040 columns, reduced to 5063 rows 4879 columns
Cbc0038I Mini branch and bound improved solution from 1.60798e+08 to 1.603e+08 (101.91 seconds)
Cbc0038I Freeing continuous variables gives a solution of 1.60229e+08
Cbc0038I Round again with cutoff of 1.35757e+08
Cbc0038I Pass  33: (106.44 seconds) suminf.    1.74531 (24) obj. 1.35757e+08 iterations 3156
Cbc0038I Pass  34: (108.06 seconds) suminf.    1.64702 (25) obj. 1.35757e+08 iterations 3307
Cbc0038I Pass  35: (115.85 seconds) suminf.    1.20311 (14) obj. 1.35757e+08 iterations 18836
Cbc0038I Pass  36: (116.44 seconds) suminf.    1.00427 (17) obj. 1.35757e+08 iterations 2397
Cbc0038I Pass  37: (118.69 seconds) suminf.    4.57552 (21) obj. 1.35757e+08 iterations 5928
Cbc0038I Pass  38: (119.25 seconds) suminf.    1.78737 (18) obj. 1.35757e+08 iterations 1878
Cbc0038I Pass  39: (120.02 seconds) suminf.    7.13760 (27) obj. 1.35757e+08 iterations 2855
Cbc0038I Pass  40: (120.41 seconds) suminf.    3.89650 (27) obj. 1.35757e+08 iterations 1005
Cbc0038I Pass  41: (122.63 seconds) suminf.    0.74661 (10) obj. 1.35757e+08 iterations 5445
Cbc0038I Pass  42: (123.65 seconds) suminf.    2.88838 (15) obj. 1.35757e+08 iterations 3664
Cbc0038I Pass  43: (124.14 seconds) suminf.    1.03060 (12) obj. 1.35757e+08 iterations 1998
Cbc0038I Pass  44: (125.15 seconds) suminf.    5.67652 (18) obj. 1.35757e+08 iterations 4616
Cbc0038I Pass  45: (125.64 seconds) suminf.    1.41167 (16) obj. 1.35757e+08 iterations 1768
Cbc0038I Pass  46: (126.53 seconds) suminf.    4.36157 (19) obj. 1.35757e+08 iterations 3194
Cbc0038I Pass  47: (126.85 seconds) suminf.    1.65013 (15) obj. 1.35757e+08 iterations 1184
Cbc0038I Pass  48: (127.09 seconds) suminf.    1.03131 (13) obj. 1.35757e+08 iterations 798
Cbc0038I Pass  49: (127.65 seconds) suminf.    5.44881 (18) obj. 1.35757e+08 iterations 2301
Cbc0038I Pass  50: (128.92 seconds) suminf.    0.82817 (10) obj. 1.35757e+08 iterations 4809
Cbc0038I Pass  51: (129.45 seconds) suminf.    4.26044 (17) obj. 1.35757e+08 iterations 1874
Cbc0038I Pass  52: (129.82 seconds) suminf.    1.67034 (17) obj. 1.35757e+08 iterations 1491
Cbc0038I Pass  53: (130.77 seconds) suminf.    4.95700 (17) obj. 1.35757e+08 iterations 1919
Cbc0038I Pass  54: (131.42 seconds) suminf.    1.05338 (13) obj. 1.35757e+08 iterations 1935
Cbc0038I Pass  55: (131.89 seconds) suminf.    5.40921 (18) obj. 1.35757e+08 iterations 1257
Cbc0038I Pass  56: (132.92 seconds) suminf.    0.83496 (10) obj. 1.35757e+08 iterations 3364
Cbc0038I Pass  57: (133.48 seconds) suminf.    4.40773 (17) obj. 1.35757e+08 iterations 1916
Cbc0038I Pass  58: (134.08 seconds) suminf.    1.06121 (13) obj. 1.35757e+08 iterations 2025
Cbc0038I Pass  59: (134.64 seconds) suminf.    5.96854 (19) obj. 1.35757e+08 iterations 2139
Cbc0038I Pass  60: (135.46 seconds) suminf.    1.05915 (13) obj. 1.35757e+08 iterations 3019
Cbc0038I Pass  61: (137.71 seconds) suminf.    6.61953 (25) obj. 1.35757e+08 iterations 5405
Cbc0038I Pass  62: (138.62 seconds) suminf.    0.67857 (8) obj. 1.35757e+08 iterations 3769
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 28925 continuous
Cbc0038I Full problem 34224 rows 34040 columns, reduced to 5217 rows 5033 columns
Cbc0038I Mini branch and bound did not improve solution (142.36 seconds)
Cbc0038I After 142.36 seconds - Feasibility pump exiting with objective of 1.60229e+08 - took 133.47 seconds
Cbc0012I Integer solution of 1.6022885e+08 found by feasibility pump after 0 iterations and 0 nodes (142.37 seconds)
Cbc0038I Full problem 34224 rows 34040 columns, reduced to 14059 rows 13875 columns - 2 fixed gives 13691, 13873 - ok now
Cbc0038I Full problem 34224 rows 34040 columns, reduced to 13691 rows 13873 columns
Cbc0031I 840 added rows had average density of 17.289286
Cbc0013I At root node, 840 cuts changed objective from 71366409 to 1.1164004e+08 in 50 passes
Cbc0014I Cut generator 0 (Probing) - 845 row cuts average 2.0 elements, 0 column cuts (679 active)  in 0.400 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 125 row cuts average 156.1 elements, 0 column cuts (0 active)  in 0.564 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.494 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1422 row cuts average 22.8 elements, 0 column cuts (0 active)  in 0.377 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 46 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.421 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 30 row cuts average 38.6 elements, 0 column cuts (0 active)  in 0.463 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1.6022885e+08 best solution, best possible 1.1164004e+08 (238.09 seconds)
Cbc0010I After 100 nodes, 49 on tree, 1.6022885e+08 best solution, best possible 1.1236812e+08 (431.54 seconds)
Cbc0010I After 200 nodes, 102 on tree, 1.6022885e+08 best solution, best possible 1.1236812e+08 (611.58 seconds)
Cbc0010I After 300 nodes, 155 on tree, 1.6022885e+08 best solution, best possible 1.1236812e+08 (788.92 seconds)
Cbc0010I After 400 nodes, 203 on tree, 1.6022885e+08 best solution, best possible 1.1236812e+08 (958.95 seconds)
Cbc0010I After 500 nodes, 253 on tree, 1.6022885e+08 best solution, best possible 1.1236812e+08 (1105.83 seconds)
Cbc0010I After 600 nodes, 307 on tree, 1.6022885e+08 best solution, best possible 1.1236812e+08 (1269.91 seconds)
Cbc0010I After 700 nodes, 354 on tree, 1.6022885e+08 best solution, best possible 1.1236812e+08 (1419.43 seconds)
Cbc0010I After 800 nodes, 403 on tree, 1.6022885e+08 best solution, best possible 1.1236812e+08 (1555.29 seconds)
Cbc0010I After 900 nodes, 454 on tree, 1.6022885e+08 best solution, best possible 1.1236812e+08 (1686.76 seconds)
Cbc0010I After 1000 nodes, 502 on tree, 1.6022885e+08 best solution, best possible 1.1236812e+08 (1776.65 seconds)
Cbc0010I After 1100 nodes, 556 on tree, 1.6022885e+08 best solution, best possible 1.1236812e+08 (1824.34 seconds)
Cbc0010I After 1200 nodes, 610 on tree, 1.6022885e+08 best solution, best possible 1.1236812e+08 (1880.58 seconds)
Cbc0010I After 1300 nodes, 660 on tree, 1.6022885e+08 best solution, best possible 1.1236812e+08 (1909.52 seconds)
Cbc0010I After 1400 nodes, 712 on tree, 1.6022885e+08 best solution, best possible 1.1236812e+08 (1963.56 seconds)
Cbc0010I After 1500 nodes, 761 on tree, 1.6022885e+08 best solution, best possible 1.1236812e+08 (1992.55 seconds)
Cbc0010I After 1600 nodes, 812 on tree, 1.6022885e+08 best solution, best possible 1.1236812e+08 (2041.20 seconds)
Cbc0010I After 1700 nodes, 862 on tree, 1.6022885e+08 best solution, best possible 1.1236812e+08 (2057.39 seconds)
Cbc0010I After 1800 nodes, 911 on tree, 1.6022885e+08 best solution, best possible 1.1236812e+08 (2073.39 seconds)
Cbc0010I After 1900 nodes, 963 on tree, 1.6022885e+08 best solution, best possible 1.1236812e+08 (2087.48 seconds)
Cbc0010I After 2000 nodes, 1012 on tree, 1.6022885e+08 best solution, best possible 1.1236812e+08 (2101.85 seconds)
Cbc0010I After 2100 nodes, 1068 on tree, 1.6022885e+08 best solution, best possible 1.1236812e+08 (2111.32 seconds)
Cbc0010I After 2200 nodes, 1119 on tree, 1.6022885e+08 best solution, best possible 1.1236812e+08 (2119.27 seconds)
Cbc0010I After 2300 nodes, 1170 on tree, 1.6022885e+08 best solution, best possible 1.1236812e+08 (2124.48 seconds)
Cbc0010I After 2400 nodes, 1222 on tree, 1.6022885e+08 best solution, best possible 1.1236812e+08 (2129.33 seconds)
Cbc0012I Integer solution of 1.5590155e+08 found by heuristic after 3013198 iterations and 2472 nodes (2134.13 seconds)
Cbc0012I Integer solution of 1.5588487e+08 found by heuristic after 3014050 iterations and 2477 nodes (2134.81 seconds)
Cbc0012I Integer solution of 1.5578739e+08 found by heuristic after 3014841 iterations and 2493 nodes (2135.95 seconds)
Cbc0010I After 2500 nodes, 1273 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2136.22 seconds)
Cbc0010I After 2600 nodes, 1313 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2141.42 seconds)
Cbc0010I After 2700 nodes, 1355 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2147.75 seconds)
Cbc0010I After 2800 nodes, 1393 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2166.09 seconds)
Cbc0010I After 2900 nodes, 1437 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2179.67 seconds)
Cbc0010I After 3000 nodes, 1481 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2189.74 seconds)
Cbc0010I After 3100 nodes, 1525 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2197.95 seconds)
Cbc0010I After 3200 nodes, 1572 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2205.96 seconds)
Cbc0010I After 3300 nodes, 1619 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2214.26 seconds)
Cbc0010I After 3400 nodes, 1668 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2222.30 seconds)
Cbc0010I After 3500 nodes, 1716 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2229.18 seconds)
Cbc0010I After 3600 nodes, 1760 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2235.63 seconds)
Cbc0010I After 3700 nodes, 1807 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2243.14 seconds)
Cbc0010I After 3800 nodes, 1849 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2249.27 seconds)
Cbc0010I After 3900 nodes, 1900 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2257.07 seconds)
Cbc0010I After 4000 nodes, 1944 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2270.89 seconds)
Cbc0010I After 4100 nodes, 1992 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2281.33 seconds)
Cbc0010I After 4200 nodes, 2042 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2291.16 seconds)
Cbc0010I After 4300 nodes, 2084 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2302.27 seconds)
Cbc0010I After 4400 nodes, 2132 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2311.52 seconds)
Cbc0010I After 4500 nodes, 2180 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2321.70 seconds)
Cbc0010I After 4600 nodes, 2226 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2327.99 seconds)
Cbc0010I After 4700 nodes, 2273 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2333.73 seconds)
Cbc0010I After 4800 nodes, 2323 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2339.23 seconds)
Cbc0010I After 4900 nodes, 2370 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2345.21 seconds)
Cbc0010I After 5000 nodes, 2415 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2351.82 seconds)
Cbc0010I After 5100 nodes, 2464 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2361.47 seconds)
Cbc0010I After 5200 nodes, 2509 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2374.32 seconds)
Cbc0010I After 5300 nodes, 2558 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2387.88 seconds)
Cbc0010I After 5400 nodes, 2603 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2398.29 seconds)
Cbc0010I After 5500 nodes, 2648 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2408.66 seconds)
Cbc0010I After 5600 nodes, 2692 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2418.68 seconds)
Cbc0010I After 5700 nodes, 2738 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2425.95 seconds)
Cbc0010I After 5800 nodes, 2781 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2432.21 seconds)
Cbc0010I After 5900 nodes, 2827 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2437.59 seconds)
Cbc0010I After 6000 nodes, 2871 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2442.63 seconds)
Cbc0010I After 6100 nodes, 2915 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2449.02 seconds)
Cbc0010I After 6200 nodes, 2966 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2456.10 seconds)
Cbc0010I After 6300 nodes, 3004 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2463.55 seconds)
Cbc0010I After 6400 nodes, 3049 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2475.28 seconds)
Cbc0010I After 6500 nodes, 3089 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2485.29 seconds)
Cbc0010I After 6600 nodes, 3132 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2494.11 seconds)
Cbc0010I After 6700 nodes, 3174 on tree, 1.5578739e+08 best solution, best possible 1.1236812e+08 (2504.43 seconds)
Cbc0012I Integer solution of 1.5425809e+08 found by heuristic after 3462430 iterations and 6718 nodes (2508.23 seconds)
Cbc0010I After 6800 nodes, 3223 on tree, 1.5425809e+08 best solution, best possible 1.1236812e+08 (2545.03 seconds)
Cbc0010I After 6900 nodes, 3276 on tree, 1.5425809e+08 best solution, best possible 1.1236812e+08 (2616.26 seconds)
Cbc0010I After 7000 nodes, 3327 on tree, 1.5425809e+08 best solution, best possible 1.1236812e+08 (2753.54 seconds)
Cbc0010I After 7100 nodes, 3378 on tree, 1.5425809e+08 best solution, best possible 1.1236812e+08 (2845.89 seconds)
Cbc0010I After 7200 nodes, 3426 on tree, 1.5425809e+08 best solution, best possible 1.1236812e+08 (2928.42 seconds)
Cbc0010I After 7300 nodes, 3481 on tree, 1.5425809e+08 best solution, best possible 1.1236812e+08 (3000.25 seconds)
Cbc0010I After 7400 nodes, 3533 on tree, 1.5425809e+08 best solution, best possible 1.1236812e+08 (3050.09 seconds)
Cbc0010I After 7500 nodes, 3581 on tree, 1.5425809e+08 best solution, best possible 1.1236812e+08 (3089.02 seconds)
Cbc0010I After 7600 nodes, 3630 on tree, 1.5425809e+08 best solution, best possible 1.1236812e+08 (3129.58 seconds)
Cbc0010I After 7700 nodes, 3681 on tree, 1.5425809e+08 best solution, best possible 1.1236812e+08 (3170.68 seconds)
Cbc0010I After 7800 nodes, 3731 on tree, 1.5425809e+08 best solution, best possible 1.1236812e+08 (3200.53 seconds)
Cbc0010I After 7900 nodes, 3779 on tree, 1.5425809e+08 best solution, best possible 1.1236812e+08 (3246.89 seconds)
Cbc0010I After 8000 nodes, 3829 on tree, 1.5425809e+08 best solution, best possible 1.1236812e+08 (3278.82 seconds)
Cbc0010I After 8100 nodes, 3879 on tree, 1.5425809e+08 best solution, best possible 1.1236812e+08 (3311.97 seconds)
Cbc0010I After 8200 nodes, 3930 on tree, 1.5425809e+08 best solution, best possible 1.1236812e+08 (3344.05 seconds)
Cbc0010I After 8300 nodes, 3979 on tree, 1.5425809e+08 best solution, best possible 1.1236812e+08 (3379.44 seconds)
Cbc0010I After 8400 nodes, 4031 on tree, 1.5425809e+08 best solution, best possible 1.1236812e+08 (3408.37 seconds)
Cbc0010I After 8500 nodes, 4079 on tree, 1.5425809e+08 best solution, best possible 1.1236812e+08 (3435.56 seconds)
Cbc0010I After 8600 nodes, 4128 on tree, 1.5425809e+08 best solution, best possible 1.1236812e+08 (3462.75 seconds)
Cbc0010I After 8700 nodes, 4180 on tree, 1.5425809e+08 best solution, best possible 1.1236812e+08 (3487.98 seconds)
Cbc0010I After 8800 nodes, 4229 on tree, 1.5425809e+08 best solution, best possible 1.1236812e+08 (3524.08 seconds)
Cbc0010I After 8900 nodes, 4278 on tree, 1.5425809e+08 best solution, best possible 1.1236812e+08 (3558.38 seconds)
Cbc0010I After 9000 nodes, 4330 on tree, 1.5425809e+08 best solution, best possible 1.1236812e+08 (3591.12 seconds)
Cbc0030I Thread 0 used 757 times,  waiting to start 3.0275488,  6351 locks, 6.4123061 locked, 3.2547145 waiting for locks
Cbc0030I Thread 1 used 782 times,  waiting to start 7.1516569,  6416 locks, 6.852664 locked, 3.2287502 waiting for locks
Cbc0030I Thread 2 used 781 times,  waiting to start 11.939681,  6548 locks, 6.6067078 locked, 0.83280921 waiting for locks
Cbc0030I Thread 3 used 748 times,  waiting to start 18.753544,  6295 locks, 8.7909036 locked, 0.95782495 waiting for locks
Cbc0030I Thread 4 used 720 times,  waiting to start 24.447742,  6075 locks, 6.144182 locked, 0.84061241 waiting for locks
Cbc0030I Thread 5 used 765 times,  waiting to start 24.560544,  6404 locks, 6.7365377 locked, 0.92986441 waiting for locks
Cbc0030I Thread 6 used 735 times,  waiting to start 25.553201,  6146 locks, 6.3106117 locked, 0.96236753 waiting for locks
Cbc0030I Thread 7 used 771 times,  waiting to start 33.036009,  6547 locks, 6.6688414 locked, 3.0012796 waiting for locks
Cbc0030I Thread 8 used 738 times,  waiting to start 34.692796,  6224 locks, 6.3460176 locked, 3.2428586 waiting for locks
Cbc0030I Thread 9 used 735 times,  waiting to start 35.286828,  6155 locks, 6.3031089 locked, 3.0772951 waiting for locks
Cbc0030I Thread 10 used 768 times,  waiting to start 34.338694,  6369 locks, 6.5721076 locked, 1.016633 waiting for locks
Cbc0030I Thread 11 used 716 times,  waiting to start 43.37943,  6018 locks, 6.368068 locked, 2.8890243 waiting for locks
Cbc0030I Main thread 3343.5906 waiting for threads,  18139 locks, 0.11103392 locked, 0.10721087 waiting for locks
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1.5425809e+08 (best possible 1.1236812e+08), took 5650259 iterations and 9005 nodes (3595.61 seconds)
Cbc0032I Strong branching done 5540 times (437011 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 181, 1 variables fixed on reduced cost
Cuts at root node changed objective from 7.13664e+07 to 1.1164e+08
Probing was tried 23295 times and created 18611 cuts of which 8827 were active after adding rounds of cuts (2761.837 seconds)
Gomory was tried 23295 times and created 1625 cuts of which 0 were active after adding rounds of cuts (5464.954 seconds)
Knapsack was tried 650 times and created 0 cuts of which 0 were active after adding rounds of cuts (6.427 seconds)
Clique was tried 650 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.185 seconds)
MixedIntegerRounding2 was tried 23295 times and created 159823 cuts of which 0 were active after adding rounds of cuts (6852.179 seconds)
FlowCover was tried 650 times and created 598 cuts of which 0 were active after adding rounds of cuts (5.467 seconds)
TwoMirCuts was tried 650 times and created 390 cuts of which 0 were active after adding rounds of cuts (6.021 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Stopped on time limit

Objective value:                154258088.64480299
Lower bound:                    112368116.143
Gap:                            0.37
Enumerated nodes:               9005
Total iterations:               5650259
Time (CPU seconds):             39330.92
Time (Wallclock seconds):       3597.03

Option for printingOptions changed from normal to all
Total time (CPU seconds):       39331.07   (Wallclock seconds):       3597.18

