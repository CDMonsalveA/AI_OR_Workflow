Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/d1f151a93e89464e8602c696b9c7700a-pulp.mps -sec 60 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/d1f151a93e89464e8602c696b9c7700a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 159 COLUMNS
At line 30036 RHS
At line 30191 BOUNDS
At line 36198 ENDATA
Problem MODEL has 154 rows, 6006 columns and 11935 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 60
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.17931 - 0.00 seconds
Cgl0004I processed model has 154 rows, 6006 columns (6006 integer (6006 of which binary)) and 11935 elements
Cbc0038I Initial state - 77 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (77) obj. 1.17931 iterations 0
Cbc0038I Pass   2: suminf.    0.68831 (53) obj. 29.1152 iterations 24
Cbc0038I Pass   3: suminf.    0.35065 (27) obj. 59.379 iterations 26
Cbc0038I Pass   4: suminf.    0.12987 (10) obj. 79.167 iterations 17
Cbc0038I Solution found of 90.8069
Cbc0038I Before mini branch and bound, 5929 integers at bound fixed and 0 continuous
Cbc0038I Full problem 154 rows 6006 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of 81.8441
Cbc0038I Pass   5: suminf.    1.00000 (77) obj. 1.17931 iterations 0
Cbc0038I Pass   6: suminf.    0.79221 (61) obj. 19.8032 iterations 16
Cbc0038I Pass   7: suminf.    0.46753 (36) obj. 48.9031 iterations 25
Cbc0038I Pass   8: suminf.    0.27273 (21) obj. 66.363 iterations 15
Cbc0038I Pass   9: suminf.    0.39999 (8) obj. 81.8441 iterations 25
Cbc0038I Pass  10: suminf.    0.10390 (8) obj. 81.4949 iterations 1
Cbc0038I Pass  11: suminf.    0.57784 (10) obj. 81.8441 iterations 37
Cbc0038I Pass  12: suminf.    0.12987 (8) obj. 81.6999 iterations 32
Cbc0038I Pass  13: suminf.    0.25218 (8) obj. 81.8441 iterations 32
Cbc0038I Pass  14: suminf.    0.12987 (8) obj. 81.6999 iterations 33
Cbc0038I Pass  15: suminf.    1.03960 (10) obj. 81.8441 iterations 66
Cbc0038I Pass  16: suminf.    0.15584 (8) obj. 81.5043 iterations 63
Cbc0038I Pass  17: suminf.    0.44403 (8) obj. 81.8441 iterations 56
Cbc0038I Pass  18: suminf.    0.15584 (8) obj. 81.5043 iterations 58
Cbc0038I Pass  19: suminf.    0.94592 (10) obj. 81.8441 iterations 79
Cbc0038I Pass  20: suminf.    0.19481 (8) obj. 81.6796 iterations 84
Cbc0038I Pass  21: suminf.    0.33436 (8) obj. 81.8441 iterations 86
Cbc0038I Pass  22: suminf.    0.15584 (8) obj. 81.6336 iterations 83
Cbc0038I Pass  23: suminf.    0.47858 (8) obj. 81.8441 iterations 104
Cbc0038I Pass  24: suminf.    0.12987 (6) obj. 81.7958 iterations 89
Cbc0038I Pass  25: suminf.    0.17086 (5) obj. 81.8441 iterations 100
Cbc0038I Pass  26: suminf.    0.11688 (5) obj. 81.7805 iterations 100
Cbc0038I Pass  27: suminf.    0.17086 (5) obj. 81.8441 iterations 97
Cbc0038I Pass  28: suminf.    0.82895 (9) obj. 81.8441 iterations 104
Cbc0038I Pass  29: suminf.    0.43277 (8) obj. 81.8441 iterations 63
Cbc0038I Pass  30: suminf.    0.35485 (7) obj. 81.8441 iterations 26
Cbc0038I Pass  31: suminf.    0.35485 (7) obj. 81.8441 iterations 3
Cbc0038I Pass  32: suminf.    0.35485 (7) obj. 81.8441 iterations 30
Cbc0038I Pass  33: suminf.    0.35485 (7) obj. 81.8441 iterations 1
Cbc0038I Pass  34: suminf.    0.35485 (7) obj. 81.8441 iterations 16
Cbc0038I Rounding solution of 63.953 is better than previous of 90.8069

Cbc0038I Before mini branch and bound, 5778 integers at bound fixed and 0 continuous
Cbc0038I Full problem 154 rows 6006 columns, reduced to 82 rows 173 columns
Cbc0038I Mini branch and bound improved solution from 63.953 to 49.7863 (0.24 seconds)
Cbc0038I Round again with cutoff of 40.0649
Cbc0038I Pass  34: suminf.    1.00000 (77) obj. 1.17931 iterations 0
Cbc0038I Pass  35: suminf.    0.75325 (58) obj. 23.2952 iterations 19
Cbc0038I Pass  36: suminf.    0.97313 (44) obj. 40.0649 iterations 25
Cbc0038I Pass  37: suminf.    0.57143 (44) obj. 39.5911 iterations 1
Cbc0038I Pass  38: suminf.    0.97313 (44) obj. 40.0649 iterations 10
Cbc0038I Pass  39: suminf.    0.57143 (44) obj. 39.5911 iterations 1
Cbc0038I Pass  40: suminf.    0.97313 (44) obj. 40.0649 iterations 6
Cbc0038I Pass  41: suminf.    0.57143 (44) obj. 39.5911 iterations 1
Cbc0038I Pass  42: suminf.    0.97313 (44) obj. 40.0649 iterations 1
Cbc0038I Pass  43: suminf.    1.00383 (42) obj. 40.0649 iterations 17
Cbc0038I Pass  44: suminf.    1.00383 (42) obj. 40.0649 iterations 6
Cbc0038I Pass  45: suminf.    1.00383 (42) obj. 40.0649 iterations 7
Cbc0038I Pass  46: suminf.    1.00383 (42) obj. 40.0649 iterations 1
Cbc0038I Pass  47: suminf.    1.00383 (42) obj. 40.0649 iterations 5
Cbc0038I Pass  48: suminf.    1.00383 (42) obj. 40.0649 iterations 0
Cbc0038I Pass  49: suminf.    1.00383 (42) obj. 40.0649 iterations 5
Cbc0038I Pass  50: suminf.    0.62134 (39) obj. 40.0649 iterations 33
Cbc0038I Pass  51: suminf.    0.62134 (39) obj. 40.0649 iterations 17
Cbc0038I Pass  52: suminf.    0.56939 (38) obj. 40.0649 iterations 11
Cbc0038I Pass  53: suminf.    0.56939 (38) obj. 40.0649 iterations 1
Cbc0038I Pass  54: suminf.    0.56939 (38) obj. 40.0649 iterations 8
Cbc0038I Pass  55: suminf.    0.56939 (38) obj. 40.0649 iterations 1
Cbc0038I Pass  56: suminf.    0.56939 (38) obj. 40.0649 iterations 8
Cbc0038I Pass  57: suminf.    0.62287 (35) obj. 40.0649 iterations 34
Cbc0038I Pass  58: suminf.    0.53247 (35) obj. 39.9583 iterations 32
Cbc0038I Pass  59: suminf.    0.62287 (35) obj. 40.0649 iterations 36
Cbc0038I Pass  60: suminf.    0.53247 (35) obj. 39.9583 iterations 26
Cbc0038I Pass  61: suminf.    0.73231 (35) obj. 40.0649 iterations 39
Cbc0038I Pass  62: suminf.    0.50649 (33) obj. 40.0472 iterations 44
Cbc0038I Pass  63: suminf.    0.52147 (33) obj. 40.0649 iterations 48
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5878 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.31 seconds)
Cbc0038I After 0.31 seconds - Feasibility pump exiting with objective of 49.7863 - took 0.19 seconds
Cbc0012I Integer solution of 49.786262 found by feasibility pump after 0 iterations and 0 nodes (0.31 seconds)
Cbc0012I Integer solution of 15.79687 found by DiveCoefficient after 5725 iterations and 0 nodes (2.41 seconds)
Cbc0031I 602 added rows had average density of 17.63289
Cbc0013I At root node, 602 cuts changed objective from 1.1793103 to 15.79663 in 19 passes
Cbc0014I Cut generator 0 (Probing) - 752 row cuts average 2.5 elements, 0 column cuts (536 active)  in 0.330 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 204 row cuts average 174.4 elements, 0 column cuts (0 active)  in 0.260 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 813 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 716 row cuts average 25.2 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 262 row cuts average 143.4 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 200 row cuts average 23.5 elements, 0 column cuts (0 active)  in 0.289 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 0.16907811, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.15438509, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.13975406, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.12502885, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.11036301, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.09542799, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.080870867, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.066268921, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.051707983, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.037194014, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.020666122, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.0044770241, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 6.9141388e-06 locked, 9.5367432e-07 waiting for locks
Cbc0001I Search completed - best objective 15.7968704010256, took 6065 iterations and 0 nodes (3.11 seconds)
Cbc0032I Strong branching done 364 times (13260 iterations), fathomed 13 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.17931 to 15.7969
Probing was tried 247 times and created 9776 cuts of which 6968 were active after adding rounds of cuts (4.290 seconds)
Gomory was tried 247 times and created 2652 cuts of which 0 were active after adding rounds of cuts (3.382 seconds)
Knapsack was tried 247 times and created 10569 cuts of which 0 were active after adding rounds of cuts (0.358 seconds)
Clique was tried 247 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.086 seconds)
MixedIntegerRounding2 was tried 247 times and created 9308 cuts of which 0 were active after adding rounds of cuts (0.644 seconds)
FlowCover was tried 247 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.036 seconds)
TwoMirCuts was tried 247 times and created 3406 cuts of which 0 were active after adding rounds of cuts (0.882 seconds)
ZeroHalf was tried 247 times and created 2600 cuts of which 0 were active after adding rounds of cuts (3.758 seconds)

Result - Optimal solution found

Objective value:                15.79687040
Enumerated nodes:               0
Total iterations:               6065
Time (CPU seconds):             3.06
Time (Wallclock seconds):       3.12

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.08   (Wallclock seconds):       3.14

