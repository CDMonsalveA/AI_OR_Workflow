Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/9de9b55e988549f5965b4cc5b4dd65ea-pulp.mps -sec 60 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/9de9b55e988549f5965b4cc5b4dd65ea-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 107 COLUMNS
At line 13266 RHS
At line 13369 BOUNDS
At line 16022 ENDATA
Problem MODEL has 102 rows, 2652 columns and 5253 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 60
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.11897 - 0.00 seconds
Cgl0004I processed model has 102 rows, 2652 columns (2652 integer (2652 of which binary)) and 5253 elements
Cbc0038I Initial state - 51 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (51) obj. 1.11897 iterations 0
Cbc0038I Pass   2: suminf.    0.62745 (32) obj. 21.9624 iterations 19
Cbc0038I Pass   3: suminf.    0.13725 (7) obj. 49.3881 iterations 25
Cbc0038I Solution found of 57.0672
Cbc0038I Before mini branch and bound, 2601 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 2652 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of 51.4724
Cbc0038I Pass   4: suminf.    1.00000 (51) obj. 1.11897 iterations 0
Cbc0038I Pass   5: suminf.    0.72549 (37) obj. 16.4773 iterations 14
Cbc0038I Pass   6: suminf.    0.41176 (21) obj. 34.0297 iterations 16
Cbc0038I Pass   7: suminf.    0.19609 (6) obj. 51.4724 iterations 25
Cbc0038I Pass   8: suminf.    0.19609 (6) obj. 51.4724 iterations 0
Cbc0038I Pass   9: suminf.    0.19609 (6) obj. 51.4724 iterations 1
Cbc0038I Pass  10: suminf.    0.19609 (6) obj. 51.4724 iterations 0
Cbc0038I Pass  11: suminf.    0.19609 (6) obj. 51.4724 iterations 1
Cbc0038I Pass  12: suminf.    0.21502 (8) obj. 51.4724 iterations 49
Cbc0038I Pass  13: suminf.    0.11765 (6) obj. 51.4332 iterations 30
Cbc0038I Pass  14: suminf.    0.15272 (5) obj. 51.4724 iterations 42
Cbc0038I Pass  15: suminf.    0.13725 (5) obj. 51.4551 iterations 40
Cbc0038I Pass  16: suminf.    0.15272 (5) obj. 51.4724 iterations 32
Cbc0038I Pass  17: suminf.    1.00599 (8) obj. 51.4724 iterations 69
Cbc0038I Pass  18: suminf.    0.15686 (6) obj. 51.4137 iterations 43
Cbc0038I Pass  19: suminf.    0.20934 (6) obj. 51.4724 iterations 56
Cbc0038I Pass  20: suminf.    0.15686 (6) obj. 51.4137 iterations 52
Cbc0038I Pass  21: suminf.    0.97964 (6) obj. 51.4724 iterations 78
Cbc0038I Pass  22: suminf.    0.09804 (4) obj. 51.2299 iterations 59
Cbc0038I Pass  23: suminf.    0.31473 (4) obj. 51.4724 iterations 68
Cbc0038I Pass  24: suminf.    0.11765 (4) obj. 51.2519 iterations 68
Cbc0038I Pass  25: suminf.    0.86693 (5) obj. 51.4724 iterations 100
Cbc0038I Pass  26: suminf.    0.05882 (3) obj. 51.2871 iterations 78
Cbc0038I Pass  27: suminf.    0.22446 (3) obj. 51.4724 iterations 82
Cbc0038I Pass  28: suminf.    0.03922 (2) obj. 51.2651 iterations 77
Cbc0038I Pass  29: suminf.    0.22446 (2) obj. 51.4724 iterations 80
Cbc0038I Pass  30: suminf.    1.01264 (7) obj. 51.4724 iterations 129
Cbc0038I Pass  31: suminf.    0.09804 (5) obj. 51.4195 iterations 94
Cbc0038I Pass  32: suminf.    0.14535 (4) obj. 51.4724 iterations 97
Cbc0038I Pass  33: suminf.    0.07843 (4) obj. 51.3975 iterations 90
Cbc0038I Rounding solution of 42.1685 is better than previous of 57.0672

Cbc0038I Before mini branch and bound, 2446 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 2652 columns, reduced to 79 rows 185 columns
Cbc0038I Mini branch and bound improved solution from 42.1685 to 27.5043 (0.11 seconds)
Cbc0038I Round again with cutoff of 22.2272
Cbc0038I Pass  33: suminf.    1.00000 (51) obj. 1.11897 iterations 0
Cbc0038I Pass  34: suminf.    0.76471 (39) obj. 14.2833 iterations 12
Cbc0038I Pass  35: suminf.    0.86407 (32) obj. 22.2272 iterations 19
Cbc0038I Pass  36: suminf.    0.62745 (32) obj. 21.9624 iterations 1
Cbc0038I Pass  37: suminf.    0.86407 (32) obj. 22.2272 iterations 11
Cbc0038I Pass  38: suminf.    0.62745 (32) obj. 21.9624 iterations 1
Cbc0038I Pass  39: suminf.    0.86407 (32) obj. 22.2272 iterations 1
Cbc0038I Pass  40: suminf.    0.86831 (28) obj. 22.2272 iterations 25
Cbc0038I Pass  41: suminf.    0.56863 (28) obj. 21.8919 iterations 8
Cbc0038I Pass  42: suminf.    0.86831 (28) obj. 22.2272 iterations 11
Cbc0038I Pass  43: suminf.    0.56863 (28) obj. 21.8919 iterations 14
Cbc0038I Pass  44: suminf.    0.86831 (28) obj. 22.2272 iterations 16
Cbc0038I Pass  45: suminf.    0.60784 (28) obj. 21.9358 iterations 10
Cbc0038I Pass  46: suminf.    0.86831 (28) obj. 22.2272 iterations 10
Cbc0038I Pass  47: suminf.    1.14703 (26) obj. 22.2272 iterations 54
Cbc0038I Pass  48: suminf.    1.14703 (26) obj. 22.2272 iterations 24
Cbc0038I Pass  49: suminf.    1.06860 (26) obj. 22.2272 iterations 17
Cbc0038I Pass  50: suminf.    1.06860 (26) obj. 22.2272 iterations 2
Cbc0038I Pass  51: suminf.    1.02938 (26) obj. 22.2272 iterations 11
Cbc0038I Pass  52: suminf.    1.02938 (26) obj. 22.2272 iterations 2
Cbc0038I Pass  53: suminf.    1.06860 (26) obj. 22.2272 iterations 11
Cbc0038I Pass  54: suminf.    0.67973 (24) obj. 22.2272 iterations 45
Cbc0038I Pass  55: suminf.    0.58824 (24) obj. 22.1248 iterations 35
Cbc0038I Pass  56: suminf.    0.67973 (24) obj. 22.2272 iterations 41
Cbc0038I Pass  57: suminf.    0.58824 (24) obj. 22.1248 iterations 42
Cbc0038I Pass  58: suminf.    0.67973 (24) obj. 22.2272 iterations 42
Cbc0038I Pass  59: suminf.    0.87950 (26) obj. 22.2272 iterations 70
Cbc0038I Pass  60: suminf.    0.62745 (25) obj. 21.9452 iterations 35
Cbc0038I Pass  61: suminf.    0.87950 (25) obj. 22.2272 iterations 39
Cbc0038I Pass  62: suminf.    0.62745 (25) obj. 21.9452 iterations 48
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2541 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of 27.5043 - took 0.09 seconds
Cbc0012I Integer solution of 27.504283 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0012I Integer solution of 12.227009 found by DiveCoefficient after 2066 iterations and 0 nodes (0.71 seconds)
Cbc0031I 318 added rows had average density of 19.833333
Cbc0013I At root node, 318 cuts changed objective from 1.1189655 to 12.227009 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 520 row cuts average 3.0 elements, 0 column cuts (108 active)  in 0.120 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 196 row cuts average 210.9 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 243 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 434 row cuts average 63.5 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 231 row cuts average 157.1 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 136 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 0.12771392, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.11668205, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.10548592, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.09444809, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.083392143, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.072092056, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.061038971, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.049940109, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.038616896, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.027480125, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.015777826, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.0035529137, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 6.9141388e-06 locked, 0 waiting for locks
Cbc0001I Search completed - best objective 12.22700867564574, took 2066 iterations and 0 nodes (0.90 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.11897 to 12.227
Probing was tried 182 times and created 6760 cuts of which 1404 were active after adding rounds of cuts (1.562 seconds)
Gomory was tried 182 times and created 2548 cuts of which 0 were active after adding rounds of cuts (0.982 seconds)
Knapsack was tried 182 times and created 3159 cuts of which 0 were active after adding rounds of cuts (0.092 seconds)
Clique was tried 182 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
MixedIntegerRounding2 was tried 182 times and created 5642 cuts of which 0 were active after adding rounds of cuts (0.420 seconds)
FlowCover was tried 182 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
TwoMirCuts was tried 182 times and created 3003 cuts of which 0 were active after adding rounds of cuts (0.402 seconds)
ZeroHalf was tried 182 times and created 1768 cuts of which 0 were active after adding rounds of cuts (1.056 seconds)

Result - Optimal solution found

Objective value:                12.22700868
Enumerated nodes:               0
Total iterations:               2066
Time (CPU seconds):             0.84
Time (Wallclock seconds):       0.91

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.85   (Wallclock seconds):       0.92

