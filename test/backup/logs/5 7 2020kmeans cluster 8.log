Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/tesis/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/34ad7c9332d84b43a22a7b330b232580-pulp.mps -sec 3600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/34ad7c9332d84b43a22a7b330b232580-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 788 COLUMNS
At line 4488 RHS
At line 5272 BOUNDS
At line 6029 ENDATA
Problem MODEL has 783 rows, 756 columns and 2916 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.40438e+07 - 0.00 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0004I processed model has 782 rows, 756 columns (27 integer (27 of which binary)) and 2915 elements
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.738601
Cbc0038I Pass   1: suminf.    0.10772 (1) obj. 1.51972e+07 iterations 251
Cbc0038I Solution found of 1.94846e+07
Cbc0038I Relaxing continuous gives 1.80688e+07
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 674 continuous
Cbc0038I Full problem 782 rows 756 columns, reduced to 50 rows 31 columns
Cbc0038I Mini branch and bound improved solution from 1.80688e+07 to 1.53305e+07 (0.04 seconds)
Cbc0038I Freeing continuous variables gives a solution of 1.53305e+07
Cbc0038I Round again with cutoff of 1.52755e+07
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.10772 (1) obj. 1.51972e+07 iterations 0
Cbc0038I Pass   3: suminf.    0.26436 (1) obj. 1.52755e+07 iterations 214
Cbc0038I Pass   4: suminf.    2.42977 (5) obj. 1.52755e+07 iterations 106
Cbc0038I Pass   5: suminf.    0.46124 (1) obj. 1.52755e+07 iterations 96
Cbc0038I Pass   6: suminf.    0.10820 (1) obj. 1.52755e+07 iterations 226
Cbc0038I Pass   7: suminf.    0.25604 (1) obj. 1.52755e+07 iterations 134
Cbc0038I Pass   8: suminf.    1.21675 (5) obj. 1.52755e+07 iterations 177
Cbc0038I Pass   9: suminf.    0.42484 (1) obj. 1.52755e+07 iterations 159
Cbc0038I Pass  10: suminf.    0.42484 (1) obj. 1.52755e+07 iterations 2
Cbc0038I Pass  11: suminf.    1.17332 (3) obj. 1.52755e+07 iterations 26
Cbc0038I Pass  12: suminf.    0.42484 (1) obj. 1.52755e+07 iterations 65
Cbc0038I Pass  13: suminf.    0.24144 (2) obj. 1.52755e+07 iterations 81
Cbc0038I Pass  14: suminf.    0.17267 (2) obj. 1.52755e+07 iterations 105
Cbc0038I Pass  15: suminf.    0.42484 (1) obj. 1.52755e+07 iterations 111
Cbc0038I Pass  16: suminf.    0.77338 (3) obj. 1.52755e+07 iterations 127
Cbc0038I Pass  17: suminf.    0.77338 (3) obj. 1.52755e+07 iterations 80
Cbc0038I Pass  18: suminf.    0.26436 (1) obj. 1.52755e+07 iterations 211
Cbc0038I Pass  19: suminf.    0.10772 (1) obj. 1.51972e+07 iterations 153
Cbc0038I Pass  20: suminf.    0.42237 (1) obj. 1.52755e+07 iterations 287
Cbc0038I Pass  21: suminf.    0.10772 (1) obj. 1.51972e+07 iterations 129
Cbc0038I Pass  22: suminf.    0.37283 (1) obj. 1.52755e+07 iterations 306
Cbc0038I Pass  23: suminf.    0.17267 (2) obj. 1.52755e+07 iterations 241
Cbc0038I Pass  24: suminf.    0.42484 (1) obj. 1.52755e+07 iterations 132
Cbc0038I Pass  25: suminf.    0.42484 (1) obj. 1.52755e+07 iterations 0
Cbc0038I Pass  26: suminf.    0.10820 (1) obj. 1.52755e+07 iterations 319
Cbc0038I Pass  27: suminf.    0.25604 (1) obj. 1.52755e+07 iterations 159
Cbc0038I Pass  28: suminf.    0.42484 (1) obj. 1.52755e+07 iterations 91
Cbc0038I Pass  29: suminf.    0.43712 (1) obj. 1.52755e+07 iterations 43
Cbc0038I Pass  30: suminf.    0.11495 (1) obj. 1.52755e+07 iterations 239
Cbc0038I Pass  31: suminf.    0.22058 (1) obj. 1.52755e+07 iterations 161
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 563 continuous
Cbc0038I Full problem 782 rows 756 columns, reduced to 203 rows 177 columns
Cbc0038I Mini branch and bound improved solution from 1.53305e+07 to 1.5314e+07 (0.19 seconds)
Cbc0038I Round again with cutoff of 1.51765e+07
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.10817 (1) obj. 1.51765e+07 iterations 130
Cbc0038I Pass  32: suminf.    0.23233 (1) obj. 1.51765e+07 iterations 117
Cbc0038I Pass  33: suminf.    0.82060 (3) obj. 1.51765e+07 iterations 176
Cbc0038I Pass  34: suminf.    0.62264 (3) obj. 1.51765e+07 iterations 74
Cbc0038I Pass  35: suminf.    0.34273 (1) obj. 1.51765e+07 iterations 151
Cbc0038I Pass  36: suminf.    0.41297 (1) obj. 1.51765e+07 iterations 106
Cbc0038I Pass  37: suminf.    0.47244 (2) obj. 1.51765e+07 iterations 68
Cbc0038I Pass  38: suminf.    0.45295 (1) obj. 1.51765e+07 iterations 217
Cbc0038I Pass  39: suminf.    0.12721 (1) obj. 1.51765e+07 iterations 214
Cbc0038I Pass  40: suminf.    0.17819 (1) obj. 1.51765e+07 iterations 117
Cbc0038I Pass  41: suminf.    1.01923 (3) obj. 1.51765e+07 iterations 93
Cbc0038I Pass  42: suminf.    0.13888 (1) obj. 1.51765e+07 iterations 174
Cbc0038I Pass  43: suminf.    0.15570 (1) obj. 1.51765e+07 iterations 110
Cbc0038I Pass  44: suminf.    0.43759 (2) obj. 1.51765e+07 iterations 104
Cbc0038I Pass  45: suminf.    0.10817 (1) obj. 1.51765e+07 iterations 228
Cbc0038I Pass  46: suminf.    0.23233 (1) obj. 1.51765e+07 iterations 220
Cbc0038I Pass  47: suminf.    1.25667 (3) obj. 1.51765e+07 iterations 133
Cbc0038I Pass  48: suminf.    1.24144 (4) obj. 1.51765e+07 iterations 136
Cbc0038I Pass  49: suminf.    0.90819 (2) obj. 1.51765e+07 iterations 240
Cbc0038I Pass  50: suminf.    0.12104 (1) obj. 1.51765e+07 iterations 444
Cbc0038I Pass  51: suminf.    0.18303 (1) obj. 1.51765e+07 iterations 178
Cbc0038I Pass  52: suminf.    0.95922 (3) obj. 1.51765e+07 iterations 174
Cbc0038I Pass  53: suminf.    0.10817 (1) obj. 1.51765e+07 iterations 360
Cbc0038I Pass  54: suminf.    0.23233 (1) obj. 1.51765e+07 iterations 170
Cbc0038I Pass  55: suminf.    1.45506 (3) obj. 1.51765e+07 iterations 85
Cbc0038I Pass  56: suminf.    0.47485 (1) obj. 1.51765e+07 iterations 57
Cbc0038I Pass  57: suminf.    0.11509 (1) obj. 1.51765e+07 iterations 245
Cbc0038I Pass  58: suminf.    0.22037 (1) obj. 1.51765e+07 iterations 119
Cbc0038I Pass  59: suminf.    0.24144 (2) obj. 1.51765e+07 iterations 207
Cbc0038I Pass  60: suminf.    0.21959 (2) obj. 1.51765e+07 iterations 90
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 488 continuous
Cbc0038I Full problem 782 rows 756 columns, reduced to 282 rows 256 columns
Cbc0038I Mini branch and bound did not improve solution (0.39 seconds)
Cbc0038I After 0.39 seconds - Feasibility pump exiting with objective of 1.5314e+07 - took 0.37 seconds
Cbc0012I Integer solution of 15313998 found by feasibility pump after 0 iterations and 0 nodes (0.39 seconds)
Cbc0038I Full problem 782 rows 756 columns, reduced to 138 rows 112 columns
Cbc0031I 6 added rows had average density of 622.16667
Cbc0013I At root node, 6 cuts changed objective from 14780618 to 14802226 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 18 row cuts average 621.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2 row cuts average 383.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 15313998 best solution, best possible 14802226 (0.66 seconds)
Cbc0030I Thread 0 used 16 times,  waiting to start 0.031925917,  75 locks, 0.00060224533 locked, 0.00021505356 waiting for locks
Cbc0030I Thread 1 used 16 times,  waiting to start 0.3286221,  80 locks, 0.00056862831 locked, 0.00013303757 waiting for locks
Cbc0030I Thread 2 used 8 times,  waiting to start 0.45976424,  36 locks, 0.00022554398 locked, 0.00019884109 waiting for locks
Cbc0030I Thread 3 used 9 times,  waiting to start 0.54188585,  43 locks, 0.00027108192 locked, 2.2888184e-05 waiting for locks
Cbc0030I Thread 4 used 5 times,  waiting to start 0.59301805,  21 locks, 0.00022339821 locked, 0.0001077652 waiting for locks
Cbc0030I Thread 5 used 6 times,  waiting to start 0.59836125,  25 locks, 0.00013327599 locked, 0.00014090538 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.61020589,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.60875893,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.60737205,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.60599899,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.60462689,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.60326314,  0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0.15968871 waiting for threads,  127 locks, 0.00015759468 locked, 0.0010268688 waiting for locks
Cbc0001I Search completed - best objective 15313997.95, took 2735 iterations and 60 nodes (1.27 seconds)
Cbc0032I Strong branching done 292 times (14338 iterations), fathomed 7 nodes and fixed 2 variables
Cbc0035I Maximum depth 14, 24 variables fixed on reduced cost
Cuts at root node changed objective from 1.47806e+07 to 1.48022e+07
Probing was tried 104 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
Gomory was tried 104 times and created 234 cuts of which 0 were active after adding rounds of cuts (0.065 seconds)
Knapsack was tried 104 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.048 seconds)
Clique was tried 104 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 124 times and created 26 cuts of which 0 were active after adding rounds of cuts (0.047 seconds)
FlowCover was tried 104 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.042 seconds)
TwoMirCuts was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                15313997.95000000
Enumerated nodes:               60
Total iterations:               2735
Time (CPU seconds):             1.82
Time (Wallclock seconds):       1.28

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.82   (Wallclock seconds):       1.28

