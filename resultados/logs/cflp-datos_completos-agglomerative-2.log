Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/54a2790f888947f9aac1088c3bfe8871-pulp.mps -sec 3600 -timeMode elapsed -branch -printingOptions all -solution /tmp/54a2790f888947f9aac1088c3bfe8871-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 155 COLUMNS
At line 17256 RHS
At line 17407 BOUNDS
At line 17483 ENDATA
Problem MODEL has 150 rows, 5700 columns and 11325 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
Option for timeMode changed from cpu to elapsed
Continuous objective value is 9.18349e+07 - 0.00 seconds
Cgl0004I processed model has 150 rows, 5700 columns (75 integer (75 of which binary)) and 11325 elements
Cbc0038I Initial state - 75 integers unsatisfied sum - 15.8238
Cbc0038I Pass   1: suminf.    0.13172 (1) obj. 2.82731e+09 iterations 75
Cbc0038I Pass   2: suminf.    0.13172 (1) obj. 2.82731e+09 iterations 0
Cbc0038I Solution found of 2.83165e+09
Cbc0038I Relaxing continuous gives 7.90921e+08
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 5476 continuous
Cbc0038I Full problem 150 rows 5700 columns, reduced to 143 rows 210 columns
Cbc0038I Mini branch and bound improved solution from 7.90921e+08 to 2.9463e+08 (0.06 seconds)
Cbc0038I Freeing continuous variables gives a solution of 2.92535e+08
Cbc0038I Round again with cutoff of 2.72465e+08
Cbc0038I Pass   3: suminf.    5.27646 (21) obj. 2.72465e+08 iterations 163
Cbc0038I Pass   4: suminf.    4.88821 (20) obj. 2.72465e+08 iterations 1
Cbc0038I Pass   5: suminf.    0.74066 (5) obj. 2.72465e+08 iterations 62
Cbc0038I Pass   6: suminf.    0.29534 (1) obj. 2.72465e+08 iterations 21
Cbc0038I Pass   7: suminf.    0.14563 (1) obj. 2.72465e+08 iterations 13
Cbc0038I Pass   8: suminf.    1.34010 (4) obj. 2.72465e+08 iterations 92
Cbc0038I Pass   9: suminf.    1.00228 (4) obj. 2.72465e+08 iterations 2
Cbc0038I Pass  10: suminf.    0.32463 (2) obj. 2.72465e+08 iterations 8
Cbc0038I Pass  11: suminf.    0.32463 (2) obj. 2.72465e+08 iterations 0
Cbc0038I Pass  12: suminf.    0.37307 (1) obj. 2.72465e+08 iterations 10
Cbc0038I Pass  13: suminf.    0.01009 (1) obj. 2.72465e+08 iterations 16
Cbc0038I Pass  14: suminf.    2.64323 (8) obj. 2.72465e+08 iterations 68
Cbc0038I Pass  15: suminf.    2.20801 (7) obj. 2.72465e+08 iterations 4
Cbc0038I Pass  16: suminf.    0.50164 (2) obj. 2.72465e+08 iterations 21
Cbc0038I Pass  17: suminf.    0.49076 (2) obj. 2.72465e+08 iterations 1
Cbc0038I Pass  18: suminf.    0.32985 (1) obj. 2.72465e+08 iterations 9
Cbc0038I Pass  19: suminf.    0.30120 (1) obj. 2.72465e+08 iterations 4
Cbc0038I Pass  20: suminf.    1.57907 (6) obj. 2.72465e+08 iterations 49
Cbc0038I Pass  21: suminf.    1.14759 (4) obj. 2.72465e+08 iterations 8
Cbc0038I Pass  22: suminf.    0.35153 (1) obj. 2.72465e+08 iterations 16
Cbc0038I Pass  23: suminf.    0.29801 (1) obj. 2.72465e+08 iterations 4
Cbc0038I Pass  24: suminf.    0.99599 (4) obj. 2.72465e+08 iterations 52
Cbc0038I Pass  25: suminf.    0.69765 (4) obj. 2.72465e+08 iterations 2
Cbc0038I Pass  26: suminf.    0.54441 (2) obj. 2.72465e+08 iterations 9
Cbc0038I Pass  27: suminf.    0.50774 (2) obj. 2.72465e+08 iterations 4
Cbc0038I Pass  28: suminf.    0.41353 (2) obj. 2.72465e+08 iterations 10
Cbc0038I Pass  29: suminf.    0.38944 (3) obj. 2.72465e+08 iterations 5
Cbc0038I Pass  30: suminf.    0.34674 (1) obj. 2.72465e+08 iterations 15
Cbc0038I Pass  31: suminf.    0.26760 (1) obj. 2.72465e+08 iterations 9
Cbc0038I Pass  32: suminf.    1.30703 (5) obj. 2.72465e+08 iterations 49
Cbc0038I Rounding solution of 2.72853e+08 is better than previous of 2.92535e+08

Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 5420 continuous
Cbc0038I Full problem 150 rows 5700 columns, reduced to 122 rows 245 columns
Cbc0038I Mini branch and bound improved solution from 2.72853e+08 to 2.50522e+08 (0.19 seconds)
Cbc0038I Freeing continuous variables gives a solution of 2.44634e+08
Cbc0038I Round again with cutoff of 2.14075e+08
Cbc0038I Pass  32: suminf.    6.95063 (29) obj. 2.14075e+08 iterations 13
Cbc0038I Pass  33: suminf.    2.16582 (13) obj. 2.14075e+08 iterations 68
Cbc0038I Pass  34: suminf.    2.15763 (13) obj. 2.14075e+08 iterations 1
Cbc0038I Pass  35: suminf.    2.60876 (18) obj. 2.14075e+08 iterations 41
Cbc0038I Pass  36: suminf.    2.60876 (18) obj. 2.14075e+08 iterations 0
Cbc0038I Pass  37: suminf.    5.16715 (16) obj. 2.14075e+08 iterations 38
Cbc0038I Pass  38: suminf.    5.08051 (18) obj. 2.14075e+08 iterations 5
Cbc0038I Pass  39: suminf.    5.30669 (17) obj. 2.14075e+08 iterations 7
Cbc0038I Pass  40: suminf.    5.12907 (18) obj. 2.14075e+08 iterations 3
Cbc0038I Pass  41: suminf.    6.46060 (23) obj. 2.14075e+08 iterations 19
Cbc0038I Pass  42: suminf.    6.46060 (23) obj. 2.14075e+08 iterations 0
Cbc0038I Pass  43: suminf.    6.25716 (23) obj. 2.14075e+08 iterations 12
Cbc0038I Pass  44: suminf.    6.25716 (23) obj. 2.14075e+08 iterations 0
Cbc0038I Pass  45: suminf.    6.30966 (22) obj. 2.14075e+08 iterations 1
Cbc0038I Pass  46: suminf.    6.19329 (23) obj. 2.14075e+08 iterations 49
Cbc0038I Pass  47: suminf.    6.10413 (23) obj. 2.14075e+08 iterations 3
Cbc0038I Pass  48: suminf.    6.10413 (23) obj. 2.14075e+08 iterations 0
Cbc0038I Pass  49: suminf.    7.03365 (24) obj. 2.14075e+08 iterations 20
Cbc0038I Pass  50: suminf.    6.79756 (23) obj. 2.14075e+08 iterations 1
Cbc0038I Pass  51: suminf.    6.49629 (23) obj. 2.14075e+08 iterations 3
Cbc0038I Pass  52: suminf.    6.67120 (23) obj. 2.14075e+08 iterations 6
Cbc0038I Pass  53: suminf.    6.67120 (23) obj. 2.14075e+08 iterations 0
Cbc0038I Pass  54: suminf.    6.64078 (22) obj. 2.14075e+08 iterations 5
Cbc0038I Pass  55: suminf.    6.18033 (22) obj. 2.14075e+08 iterations 8
Cbc0038I Pass  56: suminf.    6.67120 (23) obj. 2.14075e+08 iterations 4
Cbc0038I Pass  57: suminf.    5.17905 (22) obj. 2.14075e+08 iterations 51
Cbc0038I Pass  58: suminf.    5.17905 (21) obj. 2.14075e+08 iterations 1
Cbc0038I Pass  59: suminf.    5.48176 (21) obj. 2.14075e+08 iterations 7
Cbc0038I Pass  60: suminf.    5.46614 (22) obj. 2.14075e+08 iterations 1
Cbc0038I Pass  61: suminf.    6.52975 (23) obj. 2.14075e+08 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 5482 continuous
Cbc0038I Full problem 150 rows 5700 columns, reduced to 100 rows 160 columns
Cbc0038I Mini branch and bound did not improve solution (0.30 seconds)
Cbc0038I After 0.30 seconds - Feasibility pump exiting with objective of 2.44634e+08 - took 0.26 seconds
Cbc0012I Integer solution of 2.4463448e+08 found by feasibility pump after 0 iterations and 0 nodes (0.30 seconds)
Cbc0012I Integer solution of 2.4356425e+08 found by DiveCoefficient after 117 iterations and 0 nodes (0.42 seconds)
Cbc0031I 98 added rows had average density of 102.55102
Cbc0013I At root node, 98 cuts changed objective from 91834930 to 2.3700911e+08 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 100 row cuts average 103.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 114 row cuts average 114.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 2.4356425e+08 best solution, best possible 2.3700911e+08 (0.42 seconds)
Cbc0012I Integer solution of 2.4221202e+08 found by DiveCoefficient after 118 iterations and 1 nodes (0.44 seconds)
Cbc0012I Integer solution of 2.4181695e+08 found by DiveCoefficient after 119 iterations and 2 nodes (0.45 seconds)
Cbc0012I Integer solution of 2.4013619e+08 found by DiveCoefficient after 121 iterations and 4 nodes (0.49 seconds)
Cbc0012I Integer solution of 2.3874037e+08 found by DiveCoefficient after 122 iterations and 5 nodes (0.50 seconds)
Cbc0016I Integer solution of 2.3709839e+08 found by strong branching after 125 iterations and 6 nodes (0.51 seconds)
Cbc0001I Search completed - best objective 237098391.753773, took 137 iterations and 12 nodes (0.52 seconds)
Cbc0032I Strong branching done 56 times (92 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 5, 0 variables fixed on reduced cost
Cuts at root node changed objective from 9.18349e+07 to 2.37009e+08
Probing was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
Gomory was tried 6 times and created 100 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Knapsack was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
TwoMirCuts was tried 12 times and created 114 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                237098391.75377303
Enumerated nodes:               12
Total iterations:               137
Time (CPU seconds):             0.52
Time (Wallclock seconds):       0.53

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.52   (Wallclock seconds):       0.54

