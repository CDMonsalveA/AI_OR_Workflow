Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/12eb71e0eaab4588baf3b0e51f4cb315-pulp.mps -sec 600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/12eb71e0eaab4588baf3b0e51f4cb315-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 107 COLUMNS
At line 13266 RHS
At line 13369 BOUNDS
At line 16022 ENDATA
Problem MODEL has 102 rows, 2652 columns and 5253 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.11818 - 0.00 seconds
Cgl0004I processed model has 102 rows, 2652 columns (2652 integer (2652 of which binary)) and 5253 elements
Cbc0038I Initial state - 51 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (51) obj. 1.11818 iterations 0
Cbc0038I Pass   2: suminf.    0.62745 (32) obj. 21.9471 iterations 19
Cbc0038I Pass   3: suminf.    0.13725 (7) obj. 49.3535 iterations 25
Cbc0038I Solution found of 57.0273
Cbc0038I Before mini branch and bound, 2601 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 2652 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of 51.4364
Cbc0038I Pass   4: suminf.    1.00000 (51) obj. 1.11818 iterations 0
Cbc0038I Pass   5: suminf.    0.72549 (37) obj. 16.4658 iterations 14
Cbc0038I Pass   6: suminf.    0.41176 (21) obj. 34.0059 iterations 16
Cbc0038I Pass   7: suminf.    0.19609 (6) obj. 51.4364 iterations 23
Cbc0038I Pass   8: suminf.    0.19609 (6) obj. 51.4364 iterations 0
Cbc0038I Pass   9: suminf.    0.19609 (6) obj. 51.4364 iterations 1
Cbc0038I Pass  10: suminf.    0.19609 (6) obj. 51.4364 iterations 0
Cbc0038I Pass  11: suminf.    0.19609 (6) obj. 51.4364 iterations 1
Cbc0038I Pass  12: suminf.    0.20358 (8) obj. 51.4364 iterations 49
Cbc0038I Pass  13: suminf.    0.11765 (6) obj. 51.4017 iterations 30
Cbc0038I Pass  14: suminf.    0.14862 (5) obj. 51.4364 iterations 42
Cbc0038I Pass  15: suminf.    0.13725 (5) obj. 51.4236 iterations 41
Cbc0038I Pass  16: suminf.    0.14862 (5) obj. 51.4364 iterations 37
Cbc0038I Pass  17: suminf.    0.92836 (8) obj. 51.4364 iterations 68
Cbc0038I Pass  18: suminf.    0.15686 (6) obj. 51.383 iterations 46
Cbc0038I Pass  19: suminf.    0.20458 (6) obj. 51.4364 iterations 57
Cbc0038I Pass  20: suminf.    0.15686 (6) obj. 51.383 iterations 54
Cbc0038I Pass  21: suminf.    0.95712 (6) obj. 51.4364 iterations 82
Cbc0038I Pass  22: suminf.    0.09804 (4) obj. 51.2001 iterations 59
Cbc0038I Pass  23: suminf.    0.30935 (4) obj. 51.4364 iterations 68
Cbc0038I Pass  24: suminf.    0.11765 (4) obj. 51.222 iterations 67
Cbc0038I Pass  25: suminf.    0.83296 (5) obj. 51.4364 iterations 99
Cbc0038I Pass  26: suminf.    0.05882 (3) obj. 51.2588 iterations 73
Cbc0038I Pass  27: suminf.    0.21761 (3) obj. 51.4364 iterations 79
Cbc0038I Pass  28: suminf.    0.03922 (2) obj. 51.2369 iterations 72
Cbc0038I Pass  29: suminf.    0.21761 (2) obj. 51.4364 iterations 76
Cbc0038I Pass  30: suminf.    0.90565 (7) obj. 51.4364 iterations 120
Cbc0038I Pass  31: suminf.    0.09804 (5) obj. 51.3896 iterations 77
Cbc0038I Pass  32: suminf.    0.13984 (4) obj. 51.4364 iterations 88
Cbc0038I Pass  33: suminf.    0.07843 (4) obj. 51.3677 iterations 82
Cbc0038I Rounding solution of 42.145 is better than previous of 57.0273

Cbc0038I Before mini branch and bound, 2446 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 2652 columns, reduced to 79 rows 185 columns
Cbc0038I Mini branch and bound improved solution from 42.145 to 27.4902 (0.10 seconds)
Cbc0038I Round again with cutoff of 22.2158
Cbc0038I Pass  33: suminf.    1.00000 (51) obj. 1.11818 iterations 0
Cbc0038I Pass  34: suminf.    0.76471 (39) obj. 14.2733 iterations 12
Cbc0038I Pass  35: suminf.    0.86776 (32) obj. 22.2158 iterations 21
Cbc0038I Pass  36: suminf.    0.62745 (32) obj. 21.9471 iterations 1
Cbc0038I Pass  37: suminf.    0.86776 (32) obj. 22.2158 iterations 13
Cbc0038I Pass  38: suminf.    0.62745 (32) obj. 21.9471 iterations 1
Cbc0038I Pass  39: suminf.    0.86776 (32) obj. 22.2158 iterations 1
Cbc0038I Pass  40: suminf.    0.91617 (28) obj. 22.2158 iterations 15
Cbc0038I Pass  41: suminf.    0.56863 (28) obj. 21.8271 iterations 12
Cbc0038I Pass  42: suminf.    0.91617 (28) obj. 22.2158 iterations 14
Cbc0038I Pass  43: suminf.    0.56863 (28) obj. 21.8271 iterations 15
Cbc0038I Pass  44: suminf.    0.91617 (28) obj. 22.2158 iterations 15
Cbc0038I Pass  45: suminf.    0.58824 (28) obj. 21.8491 iterations 11
Cbc0038I Pass  46: suminf.    0.91617 (28) obj. 22.2158 iterations 14
Cbc0038I Pass  47: suminf.    1.14451 (26) obj. 22.2158 iterations 56
Cbc0038I Pass  48: suminf.    1.14451 (26) obj. 22.2158 iterations 24
Cbc0038I Pass  49: suminf.    1.06608 (26) obj. 22.2158 iterations 20
Cbc0038I Pass  50: suminf.    1.06608 (26) obj. 22.2158 iterations 2
Cbc0038I Pass  51: suminf.    1.02687 (26) obj. 22.2158 iterations 13
Cbc0038I Pass  52: suminf.    1.02687 (26) obj. 22.2158 iterations 2
Cbc0038I Pass  53: suminf.    1.06608 (26) obj. 22.2158 iterations 13
Cbc0038I Pass  54: suminf.    0.68119 (24) obj. 22.2158 iterations 47
Cbc0038I Pass  55: suminf.    0.58824 (24) obj. 22.1118 iterations 35
Cbc0038I Pass  56: suminf.    0.68119 (24) obj. 22.2158 iterations 49
Cbc0038I Pass  57: suminf.    0.58824 (24) obj. 22.1118 iterations 50
Cbc0038I Pass  58: suminf.    0.68119 (24) obj. 22.2158 iterations 46
Cbc0038I Pass  59: suminf.    0.88040 (26) obj. 22.2158 iterations 74
Cbc0038I Pass  60: suminf.    0.62745 (25) obj. 21.9329 iterations 33
Cbc0038I Pass  61: suminf.    0.88040 (25) obj. 22.2158 iterations 47
Cbc0038I Pass  62: suminf.    0.62745 (25) obj. 21.9329 iterations 39
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2541 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of 27.4902 - took 0.12 seconds
Cbc0012I Integer solution of 27.490176 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0012I Integer solution of 12.222306 found by DiveCoefficient after 2261 iterations and 0 nodes (0.78 seconds)
Cbc0031I 302 added rows had average density of 23.182119
Cbc0013I At root node, 302 cuts changed objective from 1.1181818 to 12.222306 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 529 row cuts average 3.0 elements, 0 column cuts (93 active)  in 0.133 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 172 row cuts average 168.9 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 232 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 418 row cuts average 69.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 230 row cuts average 157.8 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 135 row cuts average 17.0 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 0.11780095, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.10772514, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.09758997, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.08733201, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.077075958, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.066931963, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.056777, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.046593904, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.036297083, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.025710106, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.014680147, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.0038449764, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 8.1062317e-06 locked, 0 waiting for locks
Cbc0001I Search completed - best objective 12.22230648129175, took 2261 iterations and 0 nodes (0.96 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.11818 to 12.2223
Probing was tried 195 times and created 6877 cuts of which 1209 were active after adding rounds of cuts (1.729 seconds)
Gomory was tried 195 times and created 2236 cuts of which 0 were active after adding rounds of cuts (0.949 seconds)
Knapsack was tried 195 times and created 3016 cuts of which 0 were active after adding rounds of cuts (0.098 seconds)
Clique was tried 195 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.031 seconds)
MixedIntegerRounding2 was tried 195 times and created 5434 cuts of which 0 were active after adding rounds of cuts (0.480 seconds)
FlowCover was tried 195 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
TwoMirCuts was tried 195 times and created 2990 cuts of which 0 were active after adding rounds of cuts (0.421 seconds)
ZeroHalf was tried 195 times and created 1755 cuts of which 0 were active after adding rounds of cuts (1.047 seconds)

Result - Optimal solution found

Objective value:                12.22230648
Enumerated nodes:               0
Total iterations:               2261
Time (CPU seconds):             0.91
Time (Wallclock seconds):       0.97

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.92   (Wallclock seconds):       0.98

