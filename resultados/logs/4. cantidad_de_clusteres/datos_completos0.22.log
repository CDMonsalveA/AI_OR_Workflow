Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/849533a91484425ca27d0a156f2375e6-pulp.mps -sec 60 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/849533a91484425ca27d0a156f2375e6-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 197 COLUMNS
At line 46566 RHS
At line 46759 BOUNDS
At line 56072 ENDATA
Problem MODEL has 192 rows, 9312 columns and 18528 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 60
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.22241 - 0.00 seconds
Cgl0004I processed model has 192 rows, 9312 columns (9312 integer (9312 of which binary)) and 18528 elements
Cbc0038I Initial state - 96 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (96) obj. 1.22241 iterations 0
Cbc0038I Pass   2: suminf.    0.84375 (81) obj. 19.3676 iterations 15
Cbc0038I Pass   3: suminf.    0.62500 (60) obj. 44.7709 iterations 21
Cbc0038I Pass   4: suminf.    0.34375 (33) obj. 77.4323 iterations 27
Cbc0038I Pass   5: suminf.    0.10417 (10) obj. 105.255 iterations 23
Cbc0038I Solution found of 117.352
Cbc0038I Before mini branch and bound, 9216 integers at bound fixed and 0 continuous
Cbc0038I Full problem 192 rows 9312 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.27 seconds)
Cbc0038I Round again with cutoff of 105.739
Cbc0038I Pass   6: suminf.    1.00000 (96) obj. 1.22241 iterations 0
Cbc0038I Pass   7: suminf.    0.77083 (74) obj. 27.8354 iterations 22
Cbc0038I Pass   8: suminf.    0.51042 (49) obj. 58.0774 iterations 25
Cbc0038I Pass   9: suminf.    0.39583 (38) obj. 71.3839 iterations 11
Cbc0038I Pass  10: suminf.    0.27083 (26) obj. 85.9 iterations 12
Cbc0038I Pass  11: suminf.    0.15625 (15) obj. 99.2065 iterations 11
Cbc0038I Pass  12: suminf.    0.49999 (10) obj. 105.739 iterations 23
Cbc0038I Pass  13: suminf.    0.10417 (10) obj. 105.255 iterations 1
Cbc0038I Pass  14: suminf.    1.00861 (12) obj. 105.739 iterations 13
Cbc0038I Pass  15: suminf.    0.29154 (11) obj. 105.739 iterations 6
Cbc0038I Pass  16: suminf.    0.29154 (11) obj. 105.739 iterations 4
Cbc0038I Pass  17: suminf.    0.29154 (11) obj. 105.739 iterations 0
Cbc0038I Pass  18: suminf.    0.29154 (11) obj. 105.739 iterations 3
Cbc0038I Pass  19: suminf.    0.29154 (11) obj. 105.739 iterations 0
Cbc0038I Pass  20: suminf.    0.24742 (12) obj. 105.739 iterations 26
Cbc0038I Pass  21: suminf.    0.12594 (11) obj. 105.739 iterations 15
Cbc0038I Pass  22: suminf.    0.10511 (10) obj. 105.739 iterations 6
Cbc0038I Pass  23: suminf.    0.10511 (10) obj. 105.739 iterations 0
Cbc0038I Pass  24: suminf.    0.08428 (9) obj. 105.739 iterations 3
Cbc0038I Pass  25: suminf.    0.08428 (9) obj. 105.739 iterations 0
Cbc0038I Pass  26: suminf.    0.53655 (9) obj. 105.739 iterations 37
Cbc0038I Pass  27: suminf.    0.13629 (8) obj. 105.739 iterations 28
Cbc0038I Pass  28: suminf.    0.13629 (8) obj. 105.739 iterations 6
Cbc0038I Pass  29: suminf.    0.13629 (8) obj. 105.739 iterations 0
Cbc0038I Pass  30: suminf.    0.13629 (8) obj. 105.739 iterations 5
Cbc0038I Pass  31: suminf.    0.13629 (8) obj. 105.739 iterations 0
Cbc0038I Pass  32: suminf.    0.94620 (9) obj. 105.739 iterations 45
Cbc0038I Pass  33: suminf.    0.08333 (7) obj. 105.617 iterations 58
Cbc0038I Pass  34: suminf.    0.18291 (7) obj. 105.739 iterations 59
Cbc0038I Pass  35: suminf.    0.08333 (7) obj. 105.617 iterations 64
Cbc0038I Rounding solution of 99.4031 is better than previous of 117.352

Cbc0038I Before mini branch and bound, 9142 integers at bound fixed and 0 continuous
Cbc0038I Full problem 192 rows 9312 columns, reduced to 34 rows 68 columns
Cbc0038I Mini branch and bound improved solution from 99.4031 to 93.1176 (0.38 seconds)
Cbc0038I Round again with cutoff of 74.7385
Cbc0038I Pass  35: suminf.    1.00000 (96) obj. 1.22241 iterations 0
Cbc0038I Pass  36: suminf.    0.83333 (80) obj. 20.5773 iterations 16
Cbc0038I Pass  37: suminf.    0.69792 (67) obj. 36.3031 iterations 13
Cbc0038I Pass  38: suminf.    0.39583 (38) obj. 71.3839 iterations 29
Cbc0038I Pass  39: suminf.    0.58903 (36) obj. 74.7385 iterations 18
Cbc0038I Pass  40: suminf.    0.58903 (36) obj. 74.7385 iterations 0
Cbc0038I Pass  41: suminf.    0.58903 (36) obj. 74.7385 iterations 4
Cbc0038I Pass  42: suminf.    0.58903 (36) obj. 74.7385 iterations 0
Cbc0038I Pass  43: suminf.    0.58903 (36) obj. 74.7385 iterations 16
Cbc0038I Pass  44: suminf.    0.58903 (36) obj. 74.7385 iterations 0
Cbc0038I Pass  45: suminf.    0.58903 (36) obj. 74.7385 iterations 1
Cbc0038I Pass  46: suminf.    0.58903 (36) obj. 74.7385 iterations 0
Cbc0038I Pass  47: suminf.    0.58903 (36) obj. 74.7385 iterations 1
Cbc0038I Pass  48: suminf.    0.40286 (33) obj. 74.7385 iterations 35
Cbc0038I Pass  49: suminf.    0.40286 (33) obj. 74.7385 iterations 12
Cbc0038I Pass  50: suminf.    0.38203 (33) obj. 74.7385 iterations 13
Cbc0038I Pass  51: suminf.    0.38203 (33) obj. 74.7385 iterations 0
Cbc0038I Pass  52: suminf.    0.38203 (33) obj. 74.7385 iterations 3
Cbc0038I Pass  53: suminf.    0.38203 (33) obj. 74.7385 iterations 0
Cbc0038I Pass  54: suminf.    0.38203 (33) obj. 74.7385 iterations 3
Cbc0038I Pass  55: suminf.    0.84113 (31) obj. 74.7385 iterations 26
Cbc0038I Pass  56: suminf.    0.35417 (31) obj. 74.1433 iterations 15
Cbc0038I Pass  57: suminf.    0.80470 (31) obj. 74.7385 iterations 25
Cbc0038I Pass  58: suminf.    0.80470 (31) obj. 74.7385 iterations 0
Cbc0038I Pass  59: suminf.    0.76304 (30) obj. 74.7385 iterations 3
Cbc0038I Pass  60: suminf.    0.76304 (30) obj. 74.7385 iterations 0
Cbc0038I Pass  61: suminf.    0.78387 (30) obj. 74.7385 iterations 2
Cbc0038I Pass  62: suminf.    0.78387 (30) obj. 74.7385 iterations 0
Cbc0038I Pass  63: suminf.    0.76304 (30) obj. 74.7385 iterations 5
Cbc0038I Pass  64: suminf.    0.76304 (30) obj. 74.7385 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9196 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.47 seconds)
Cbc0038I After 0.47 seconds - Feasibility pump exiting with objective of 93.1176 - took 0.22 seconds
Cbc0012I Integer solution of 93.117591 found by feasibility pump after 0 iterations and 0 nodes (0.47 seconds)
Cbc0012I Integer solution of 18.998004 found by DiveCoefficient after 7993 iterations and 0 nodes (3.52 seconds)
Cbc0031I 819 added rows had average density of 16.644689
Cbc0013I At root node, 819 cuts changed objective from 1.2224138 to 18.998004 in 22 passes
Cbc0014I Cut generator 0 (Probing) - 840 row cuts average 2.1 elements, 0 column cuts (538 active)  in 0.609 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 223 row cuts average 174.6 elements, 0 column cuts (0 active)  in 0.391 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1160 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 917 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 269 row cuts average 128.3 elements, 0 column cuts (0 active)  in 0.121 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 0.17207408, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.15650082, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.14145112, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.12636399, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.11149192, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.096717119, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.081816196, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.066956043, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.052013159, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.03687191, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.021833181, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.0070581436, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 7.1525574e-06 locked, 9.5367432e-07 waiting for locks
Cbc0001I Search completed - best objective 18.99800444853233, took 7993 iterations and 0 nodes (3.76 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.22241 to 18.998
Probing was tried 286 times and created 10920 cuts of which 6994 were active after adding rounds of cuts (7.921 seconds)
Gomory was tried 286 times and created 2899 cuts of which 0 were active after adding rounds of cuts (5.082 seconds)
Knapsack was tried 286 times and created 15080 cuts of which 0 were active after adding rounds of cuts (0.606 seconds)
Clique was tried 286 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.157 seconds)
MixedIntegerRounding2 was tried 286 times and created 11921 cuts of which 0 were active after adding rounds of cuts (0.827 seconds)
FlowCover was tried 286 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.057 seconds)
TwoMirCuts was tried 286 times and created 3497 cuts of which 0 were active after adding rounds of cuts (1.569 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Optimal solution found

Objective value:                18.99800445
Enumerated nodes:               0
Total iterations:               7993
Time (CPU seconds):             3.69
Time (Wallclock seconds):       3.78

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.72   (Wallclock seconds):       3.80

