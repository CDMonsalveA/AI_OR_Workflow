Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/932ff13ecf8e4b82b6683cda1023a57e-pulp.mps -sec 60 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/932ff13ecf8e4b82b6683cda1023a57e-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 213 COLUMNS
At line 54606 RHS
At line 54815 BOUNDS
At line 65736 ENDATA
Problem MODEL has 208 rows, 10920 columns and 21736 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 60
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.0931 - 0.01 seconds
Cgl0004I processed model has 208 rows, 10920 columns (10920 integer (10920 of which binary)) and 21736 elements
Cbc0038I Initial state - 104 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (104) obj. 1.0931 iterations 0
Cbc0038I Pass   2: suminf.    0.73077 (76) obj. 31.4057 iterations 28
Cbc0038I Pass   3: suminf.    0.51923 (54) obj. 55.2227 iterations 22
Cbc0038I Pass   4: suminf.    0.24038 (25) obj. 86.6179 iterations 29
Cbc0038I Pass   5: suminf.    0.08654 (9) obj. 103.939 iterations 16
Cbc0038I Solution found of 113.683
Cbc0038I Before mini branch and bound, 10816 integers at bound fixed and 0 continuous
Cbc0038I Full problem 208 rows 10920 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of 102.424
Cbc0038I Pass   6: suminf.    1.00000 (104) obj. 1.0931 iterations 0
Cbc0038I Pass   7: suminf.    0.75962 (79) obj. 28.1579 iterations 25
Cbc0038I Pass   8: suminf.    0.66346 (69) obj. 38.9839 iterations 10
Cbc0038I Pass   9: suminf.    0.47115 (49) obj. 60.6357 iterations 20
Cbc0038I Pass  10: suminf.    0.21154 (22) obj. 89.8657 iterations 27
Cbc0038I Pass  11: suminf.    0.49232 (11) obj. 102.424 iterations 27
Cbc0038I Pass  12: suminf.    0.49232 (11) obj. 102.424 iterations 0
Cbc0038I Pass  13: suminf.    0.49232 (11) obj. 102.424 iterations 6
Cbc0038I Pass  14: suminf.    0.49232 (11) obj. 102.424 iterations 0
Cbc0038I Pass  15: suminf.    0.49232 (11) obj. 102.424 iterations 1
Cbc0038I Pass  16: suminf.    0.49232 (11) obj. 102.424 iterations 0
Cbc0038I Pass  17: suminf.    0.49232 (11) obj. 102.424 iterations 1
Cbc0038I Pass  18: suminf.    0.79925 (11) obj. 102.424 iterations 77
Cbc0038I Pass  19: suminf.    0.10577 (9) obj. 102.334 iterations 68
Cbc0038I Pass  20: suminf.    0.18762 (8) obj. 102.424 iterations 72
Cbc0038I Pass  21: suminf.    0.09615 (8) obj. 102.324 iterations 62
Cbc0038I Pass  22: suminf.    0.18762 (8) obj. 102.424 iterations 68
Cbc0038I Pass  23: suminf.    0.72830 (9) obj. 102.424 iterations 111
Cbc0038I Pass  24: suminf.    0.09615 (7) obj. 102.342 iterations 97
Cbc0038I Pass  25: suminf.    0.17059 (7) obj. 102.424 iterations 86
Cbc0038I Pass  26: suminf.    0.07692 (6) obj. 102.321 iterations 78
Cbc0038I Pass  27: suminf.    0.17059 (6) obj. 102.424 iterations 87
Cbc0038I Pass  28: suminf.    0.22708 (10) obj. 102.424 iterations 94
Cbc0038I Pass  29: suminf.    0.09615 (8) obj. 102.416 iterations 102
Cbc0038I Pass  30: suminf.    0.10304 (8) obj. 102.424 iterations 93
Cbc0038I Pass  31: suminf.    0.08654 (7) obj. 102.406 iterations 85
Cbc0038I Pass  32: suminf.    0.10304 (7) obj. 102.424 iterations 94
Cbc0038I Pass  33: suminf.    0.60731 (9) obj. 102.424 iterations 145
Cbc0038I Pass  34: suminf.    0.11310 (8) obj. 102.424 iterations 115
Cbc0038I Pass  35: suminf.    0.11310 (8) obj. 102.424 iterations 41
Cbc0038I Rounding solution of 71.7303 is better than previous of 113.683

Cbc0038I Before mini branch and bound, 10612 integers at bound fixed and 0 continuous
Cbc0038I Full problem 208 rows 10920 columns, reduced to 105 rows 223 columns
Cbc0038I Mini branch and bound improved solution from 71.7303 to 56.8837 (0.29 seconds)
Cbc0038I Round again with cutoff of 45.7256
Cbc0038I Pass  35: suminf.    1.00000 (104) obj. 1.0931 iterations 0
Cbc0038I Pass  36: suminf.    0.84615 (88) obj. 18.4146 iterations 16
Cbc0038I Pass  37: suminf.    0.71154 (74) obj. 33.5709 iterations 14
Cbc0038I Pass  38: suminf.    0.83096 (63) obj. 45.7256 iterations 13
Cbc0038I Pass  39: suminf.    0.60577 (63) obj. 45.4794 iterations 1
Cbc0038I Pass  40: suminf.    0.83096 (63) obj. 45.7256 iterations 22
Cbc0038I Pass  41: suminf.    0.60577 (63) obj. 45.4794 iterations 1
Cbc0038I Pass  42: suminf.    0.83096 (63) obj. 45.7256 iterations 10
Cbc0038I Pass  43: suminf.    0.60577 (63) obj. 45.4794 iterations 1
Cbc0038I Pass  44: suminf.    1.17754 (55) obj. 45.7256 iterations 28
Cbc0038I Pass  45: suminf.    0.60523 (54) obj. 45.7256 iterations 16
Cbc0038I Pass  46: suminf.    0.54754 (54) obj. 45.7256 iterations 11
Cbc0038I Pass  47: suminf.    0.54754 (54) obj. 45.7256 iterations 2
Cbc0038I Pass  48: suminf.    0.54754 (54) obj. 45.7256 iterations 2
Cbc0038I Pass  49: suminf.    0.83271 (51) obj. 45.7256 iterations 63
Cbc0038I Pass  50: suminf.    0.83271 (51) obj. 45.7256 iterations 41
Cbc0038I Pass  51: suminf.    0.83271 (51) obj. 45.7256 iterations 18
Cbc0038I Pass  52: suminf.    0.83271 (51) obj. 45.7256 iterations 4
Cbc0038I Pass  53: suminf.    0.83271 (51) obj. 45.7256 iterations 18
Cbc0038I Pass  54: suminf.    0.83271 (51) obj. 45.7256 iterations 6
Cbc0038I Pass  55: suminf.    0.83271 (51) obj. 45.7256 iterations 12
Cbc0038I Pass  56: suminf.    0.83271 (51) obj. 45.7256 iterations 3
Cbc0038I Pass  57: suminf.    0.83271 (51) obj. 45.7256 iterations 17
Cbc0038I Pass  58: suminf.    0.83271 (51) obj. 45.7256 iterations 3
Cbc0038I Pass  59: suminf.    0.83271 (51) obj. 45.7256 iterations 14
Cbc0038I Pass  60: suminf.    0.90413 (48) obj. 45.7256 iterations 70
Cbc0038I Pass  61: suminf.    0.51923 (48) obj. 45.3048 iterations 76
Cbc0038I Pass  62: suminf.    0.90413 (48) obj. 45.7256 iterations 49
Cbc0038I Pass  63: suminf.    0.50000 (48) obj. 45.2838 iterations 47
Cbc0038I Pass  64: suminf.    0.90413 (48) obj. 45.7256 iterations 54
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10750 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.42 seconds)
Cbc0038I After 0.42 seconds - Feasibility pump exiting with objective of 56.8837 - took 0.32 seconds
Cbc0012I Integer solution of 56.883696 found by feasibility pump after 0 iterations and 0 nodes (0.42 seconds)
Cbc0012I Integer solution of 11.613403 found by DiveCoefficient after 36054 iterations and 0 nodes (15.17 seconds)
Cbc0031I 1383 added rows had average density of 12.272596
Cbc0013I At root node, 1383 cuts changed objective from 1.0931034 to 11.613403 in 34 passes
Cbc0014I Cut generator 0 (Probing) - 2118 row cuts average 2.1 elements, 0 column cuts (1330 active)  in 1.150 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 273 row cuts average 189.9 elements, 0 column cuts (0 active)  in 0.952 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 3901 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.162 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1591 row cuts average 13.2 elements, 0 column cuts (0 active)  in 0.156 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 286 row cuts average 134.0 elements, 0 column cuts (0 active)  in 0.151 seconds - new frequency is -100
Cbc0030I Thread 0 used 0 times,  waiting to start 0.22993684, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.21052504, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.1911478, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.1715889, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.15223289, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.13289309, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.11344385, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.093451023, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.071271896, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.051177979, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.03204608, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.01244092, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 6.9141388e-06 locked, 1.1920929e-06 waiting for locks
Cbc0001I Search completed - best objective 11.61340309369609, took 36054 iterations and 0 nodes (15.49 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.0931 to 11.6134
Probing was tried 442 times and created 27534 cuts of which 17290 were active after adding rounds of cuts (14.956 seconds)
Gomory was tried 442 times and created 3549 cuts of which 0 were active after adding rounds of cuts (12.379 seconds)
Knapsack was tried 442 times and created 50713 cuts of which 0 were active after adding rounds of cuts (2.105 seconds)
Clique was tried 442 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.579 seconds)
MixedIntegerRounding2 was tried 442 times and created 20683 cuts of which 0 were active after adding rounds of cuts (2.023 seconds)
FlowCover was tried 442 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.114 seconds)
TwoMirCuts was tried 442 times and created 3718 cuts of which 0 were active after adding rounds of cuts (1.969 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)

Result - Optimal solution found

Objective value:                11.61340309
Enumerated nodes:               0
Total iterations:               36054
Time (CPU seconds):             15.41
Time (Wallclock seconds):       15.51

Option for printingOptions changed from normal to all
Total time (CPU seconds):       15.44   (Wallclock seconds):       15.54

