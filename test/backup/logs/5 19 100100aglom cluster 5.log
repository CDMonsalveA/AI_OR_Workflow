Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/tesis/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/ce9fbf18fbe7492b8b871cd0aa3cd48f-pulp.mps -sec 3600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/ce9fbf18fbe7492b8b871cd0aa3cd48f-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 29245 COLUMNS
At line 174086 RHS
At line 203327 BOUNDS
At line 232398 ENDATA
Problem MODEL has 29240 rows, 29070 columns and 115600 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 5.96179e+07 - 1.60 seconds
Cgl0004I processed model has 29240 rows, 29070 columns (170 integer (170 of which binary)) and 115600 elements
Cbc0038I Initial state - 55 integers unsatisfied sum - 11.7267
Cbc0038I Pass   1: (29.16 seconds) suminf.    0.94363 (11) obj. 1.52744e+08 iterations 37265
Cbc0038I Pass   2: (29.21 seconds) suminf.    0.68912 (10) obj. 1.6375e+08 iterations 1
Cbc0038I Solution found of 2.14583e+08
Cbc0038I Relaxing continuous gives 1.53134e+08
Cbc0038I Before mini branch and bound, 108 integers at bound fixed and 26143 continuous
Cbc0038I Full problem 29240 rows 29070 columns, reduced to 2989 rows 2819 columns
Cbc0038I Mini branch and bound improved solution from 1.53134e+08 to 1.50185e+08 (39.89 seconds)
Cbc0038I Freeing continuous variables gives a solution of 1.49189e+08
Cbc0038I Round again with cutoff of 1.40948e+08
Cbc0038I Pass   3: (41.92 seconds) suminf.    0.95543 (11) obj. 1.40948e+08 iterations 1429
Cbc0038I Pass   4: (46.72 seconds) suminf.    0.73576 (10) obj. 1.40948e+08 iterations 12935
Cbc0038I Pass   5: (52.39 seconds) suminf.    0.63004 (3) obj. 1.40948e+08 iterations 17669
Cbc0038I Pass   6: (53.12 seconds) suminf.    0.54318 (6) obj. 1.40948e+08 iterations 3798
Cbc0038I Pass   7: (54.73 seconds) suminf.    0.70846 (6) obj. 1.40948e+08 iterations 5198
Cbc0038I Pass   8: (55.51 seconds) suminf.    0.54864 (11) obj. 1.40948e+08 iterations 3654
Cbc0038I Pass   9: (57.43 seconds) suminf.    1.36310 (7) obj. 1.40948e+08 iterations 6124
Cbc0038I Pass  10: (57.74 seconds) suminf.    0.90334 (9) obj. 1.40948e+08 iterations 1575
Cbc0038I Pass  11: (58.32 seconds) suminf.    1.18418 (4) obj. 1.40948e+08 iterations 2406
Cbc0038I Pass  12: (59.14 seconds) suminf.    0.51923 (4) obj. 1.40948e+08 iterations 5121
Cbc0038I Pass  13: (61.54 seconds) suminf.    6.41220 (21) obj. 1.40948e+08 iterations 7371
Cbc0038I Pass  14: (62.17 seconds) suminf.    0.40985 (5) obj. 1.40948e+08 iterations 2699
Cbc0038I Pass  15: (62.51 seconds) suminf.    1.29206 (7) obj. 1.40948e+08 iterations 2228
Cbc0038I Pass  16: (62.67 seconds) suminf.    1.05348 (7) obj. 1.40948e+08 iterations 1084
Cbc0038I Pass  17: (63.26 seconds) suminf.    0.73292 (6) obj. 1.40948e+08 iterations 2306
Cbc0038I Pass  18: (63.43 seconds) suminf.    0.34706 (5) obj. 1.40948e+08 iterations 529
Cbc0038I Pass  19: (63.72 seconds) suminf.    0.75300 (5) obj. 1.40948e+08 iterations 1048
Cbc0038I Pass  20: (63.83 seconds) suminf.    0.50778 (5) obj. 1.40948e+08 iterations 612
Cbc0038I Pass  21: (64.09 seconds) suminf.    0.69653 (5) obj. 1.40948e+08 iterations 777
Cbc0038I Pass  22: (64.29 seconds) suminf.    0.38421 (4) obj. 1.40948e+08 iterations 1010
Cbc0038I Pass  23: (64.54 seconds) suminf.    0.69944 (5) obj. 1.40948e+08 iterations 1350
Cbc0038I Pass  24: (65.63 seconds) suminf.    4.98789 (16) obj. 1.40948e+08 iterations 3485
Cbc0038I Pass  25: (66.97 seconds) suminf.    0.30214 (3) obj. 1.40948e+08 iterations 6369
Cbc0038I Pass  26: (67.85 seconds) suminf.    0.73427 (3) obj. 1.40948e+08 iterations 4799
Cbc0038I Pass  27: (68.03 seconds) suminf.    0.47601 (5) obj. 1.40948e+08 iterations 1158
Cbc0038I Pass  28: (68.29 seconds) suminf.    0.98974 (5) obj. 1.40948e+08 iterations 882
Cbc0038I Pass  29: (68.36 seconds) suminf.    0.75542 (5) obj. 1.40948e+08 iterations 281
Cbc0038I Pass  30: (68.68 seconds) suminf.    1.28638 (5) obj. 1.40948e+08 iterations 1321
Cbc0038I Pass  31: (68.73 seconds) suminf.    0.93765 (5) obj. 1.40948e+08 iterations 87
Cbc0038I Pass  32: (69.09 seconds) suminf.    0.78819 (5) obj. 1.40948e+08 iterations 1126
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 24561 continuous
Cbc0038I Full problem 29240 rows 29070 columns, reduced to 4616 rows 4446 columns
Cbc0038I Mini branch and bound did not improve solution (72.77 seconds)
Cbc0038I After 72.77 seconds - Feasibility pump exiting with objective of 1.49189e+08 - took 65.54 seconds
Cbc0012I Integer solution of 1.4918915e+08 found by feasibility pump after 0 iterations and 0 nodes (72.78 seconds)
Cbc0038I Full problem 29240 rows 29070 columns, reduced to 10088 rows 9918 columns
Cbc0031I 785 added rows had average density of 19.524841
Cbc0013I At root node, 785 cuts changed objective from 66779774 to 1.0263053e+08 in 50 passes
Cbc0014I Cut generator 0 (Probing) - 952 row cuts average 2.0 elements, 0 column cuts (614 active)  in 0.365 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 139 row cuts average 222.9 elements, 0 column cuts (0 active)  in 0.522 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.462 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1319 row cuts average 25.2 elements, 0 column cuts (0 active)  in 0.357 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 62 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.348 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 27 row cuts average 24.8 elements, 0 column cuts (0 active)  in 0.401 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1.4918915e+08 best solution, best possible 1.0263053e+08 (159.06 seconds)
Cbc0010I After 100 nodes, 51 on tree, 1.4918915e+08 best solution, best possible 1.0342842e+08 (357.53 seconds)
Cbc0010I After 200 nodes, 101 on tree, 1.4918915e+08 best solution, best possible 1.0342842e+08 (532.72 seconds)
Cbc0010I After 300 nodes, 151 on tree, 1.4918915e+08 best solution, best possible 1.0342842e+08 (736.23 seconds)
Cbc0010I After 400 nodes, 201 on tree, 1.4918915e+08 best solution, best possible 1.0342842e+08 (982.57 seconds)
Cbc0010I After 500 nodes, 249 on tree, 1.4918915e+08 best solution, best possible 1.0342842e+08 (1224.53 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1.4918915e+08 best solution, best possible 1.0342842e+08 (1473.72 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1.4918915e+08 best solution, best possible 1.0342842e+08 (1710.42 seconds)
Cbc0010I After 800 nodes, 400 on tree, 1.4918915e+08 best solution, best possible 1.0342842e+08 (1990.11 seconds)
Cbc0010I After 900 nodes, 450 on tree, 1.4918915e+08 best solution, best possible 1.0342842e+08 (2254.97 seconds)
Cbc0010I After 1000 nodes, 499 on tree, 1.4918915e+08 best solution, best possible 1.0342842e+08 (2508.14 seconds)
Cbc0010I After 1100 nodes, 549 on tree, 1.4918915e+08 best solution, best possible 1.0342842e+08 (2762.49 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 1.4918915e+08 best solution, best possible 1.0342842e+08 (3021.86 seconds)
Cbc0010I After 1300 nodes, 649 on tree, 1.4918915e+08 best solution, best possible 1.0342842e+08 (3285.40 seconds)
Cbc0010I After 1400 nodes, 699 on tree, 1.4918915e+08 best solution, best possible 1.0342842e+08 (3547.59 seconds)
Cbc0030I Thread 0 used 128 times,  waiting to start 1.6915994,  1244 locks, 0.79444075 locked, 0.025370121 waiting for locks
Cbc0030I Thread 1 used 120 times,  waiting to start 8.9496317,  1170 locks, 0.78280783 locked, 0.0086200237 waiting for locks
Cbc0030I Thread 2 used 122 times,  waiting to start 11.603451,  1180 locks, 0.82501984 locked, 0.021221399 waiting for locks
Cbc0030I Thread 3 used 112 times,  waiting to start 18.78917,  1108 locks, 0.75487924 locked, 0.0099711418 waiting for locks
Cbc0030I Thread 4 used 119 times,  waiting to start 25.33252,  1170 locks, 0.74158049 locked, 0.013615131 waiting for locks
Cbc0030I Thread 5 used 121 times,  waiting to start 24.502554,  1184 locks, 0.76071286 locked, 0.030426741 waiting for locks
Cbc0030I Thread 6 used 115 times,  waiting to start 27.269933,  1125 locks, 0.74903321 locked, 0.0039927959 waiting for locks
Cbc0030I Thread 7 used 112 times,  waiting to start 31.892792,  1087 locks, 0.71959114 locked, 0.013772249 waiting for locks
Cbc0030I Thread 8 used 120 times,  waiting to start 40.493413,  1176 locks, 0.76840734 locked, 0.0084347725 waiting for locks
Cbc0030I Thread 9 used 124 times,  waiting to start 35.738076,  1211 locks, 0.7981782 locked, 0.013097763 waiting for locks
Cbc0030I Thread 10 used 117 times,  waiting to start 47.124174,  1137 locks, 0.76774669 locked, 0.016678572 waiting for locks
Cbc0030I Thread 11 used 119 times,  waiting to start 49.203107,  1161 locks, 0.74363136 locked, 0.0051424503 waiting for locks
Cbc0030I Main thread 3427.5767 waiting for threads,  2877 locks, 0.0087893009 locked, 0.034530401 waiting for locks
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1.4918915e+08 (best possible 1.0342842e+08), took 6395056 iterations and 1418 nodes (3600.49 seconds)
Cbc0032I Strong branching done 3930 times (336924 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 32, 0 variables fixed on reduced cost
Cuts at root node changed objective from 6.67798e+07 to 1.02631e+08
Probing was tried 6065 times and created 17286 cuts of which 7982 were active after adding rounds of cuts (1137.149 seconds)
Gomory was tried 6065 times and created 1807 cuts of which 0 were active after adding rounds of cuts (1927.297 seconds)
Knapsack was tried 650 times and created 0 cuts of which 0 were active after adding rounds of cuts (6.004 seconds)
Clique was tried 650 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.172 seconds)
MixedIntegerRounding2 was tried 6065 times and created 114962 cuts of which 0 were active after adding rounds of cuts (1920.822 seconds)
FlowCover was tried 650 times and created 806 cuts of which 0 were active after adding rounds of cuts (4.523 seconds)
TwoMirCuts was tried 650 times and created 351 cuts of which 0 were active after adding rounds of cuts (5.212 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Stopped on time limit

Objective value:                149189152.93254215
Lower bound:                    103428415.893
Gap:                            0.44
Enumerated nodes:               1418
Total iterations:               6395056
Time (CPU seconds):             40052.65
Time (Wallclock seconds):       3601.59

Option for printingOptions changed from normal to all
Total time (CPU seconds):       40052.78   (Wallclock seconds):       3601.73

