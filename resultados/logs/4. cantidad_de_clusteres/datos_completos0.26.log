Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/2ffc8eb7dd024b9e9f89ac9cf48d2686-pulp.mps -sec 60 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/2ffc8eb7dd024b9e9f89ac9cf48d2686-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 227 COLUMNS
At line 62166 RHS
At line 62389 BOUNDS
At line 74822 ENDATA
Problem MODEL has 222 rows, 12432 columns and 24753 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 60
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.2569 - 0.01 seconds
Cgl0004I processed model has 222 rows, 12432 columns (12432 integer (12432 of which binary)) and 24753 elements
Cbc0038I Initial state - 111 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (111) obj. 1.2569 iterations 0
Cbc0038I Pass   2: suminf.    0.76577 (85) obj. 33.6418 iterations 26
Cbc0038I Pass   3: suminf.    0.67568 (75) obj. 46.0975 iterations 10
Cbc0038I Pass   4: suminf.    0.53153 (59) obj. 66.0267 iterations 16
Cbc0038I Pass   5: suminf.    0.29730 (33) obj. 98.4116 iterations 26
Cbc0038I Pass   6: suminf.    0.15315 (17) obj. 118.341 iterations 16
Cbc0038I Pass   7: suminf.    0.04505 (5) obj. 133.288 iterations 12
Cbc0038I Solution found of 139.516
Cbc0038I Before mini branch and bound, 12321 integers at bound fixed and 0 continuous
Cbc0038I Full problem 222 rows 12432 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I Round again with cutoff of 125.69
Cbc0038I Pass   8: suminf.    1.00000 (111) obj. 1.2569 iterations 0
Cbc0038I Pass   9: suminf.    0.82883 (92) obj. 24.9228 iterations 19
Cbc0038I Pass  10: suminf.    0.69369 (77) obj. 43.6064 iterations 15
Cbc0038I Pass  11: suminf.    0.43243 (48) obj. 79.728 iterations 29
Cbc0038I Pass  12: suminf.    0.28829 (32) obj. 99.6572 iterations 16
Cbc0038I Pass  13: suminf.    0.19821 (12) obj. 125.69 iterations 28
Cbc0038I Pass  14: suminf.    0.19821 (12) obj. 125.69 iterations 0
Cbc0038I Pass  15: suminf.    0.19821 (12) obj. 125.69 iterations 10
Cbc0038I Pass  16: suminf.    0.19821 (12) obj. 125.69 iterations 0
Cbc0038I Pass  17: suminf.    0.19821 (12) obj. 125.69 iterations 1
Cbc0038I Pass  18: suminf.    0.19821 (12) obj. 125.69 iterations 0
Cbc0038I Pass  19: suminf.    0.19821 (12) obj. 125.69 iterations 1
Cbc0038I Pass  20: suminf.    0.52784 (13) obj. 125.69 iterations 27
Cbc0038I Pass  21: suminf.    0.12613 (11) obj. 125.622 iterations 25
Cbc0038I Pass  22: suminf.    0.18005 (11) obj. 125.69 iterations 39
Cbc0038I Pass  23: suminf.    0.12613 (11) obj. 125.622 iterations 32
Cbc0038I Pass  24: suminf.    0.18005 (11) obj. 125.69 iterations 36
Cbc0038I Pass  25: suminf.    0.64996 (14) obj. 125.69 iterations 42
Cbc0038I Pass  26: suminf.    0.14414 (12) obj. 125.61 iterations 57
Cbc0038I Pass  27: suminf.    0.20730 (12) obj. 125.69 iterations 70
Cbc0038I Pass  28: suminf.    0.13514 (12) obj. 125.599 iterations 59
Cbc0038I Pass  29: suminf.    0.18698 (12) obj. 125.69 iterations 44
Cbc0038I Pass  30: suminf.    0.11712 (11) obj. 125.602 iterations 77
Cbc0038I Pass  31: suminf.    0.18698 (11) obj. 125.69 iterations 70
Cbc0038I Pass  32: suminf.    1.02904 (13) obj. 125.69 iterations 65
Cbc0038I Pass  33: suminf.    0.19053 (12) obj. 125.69 iterations 40
Cbc0038I Pass  34: suminf.    0.20855 (12) obj. 125.69 iterations 27
Cbc0038I Pass  35: suminf.    0.20855 (12) obj. 125.69 iterations 0
Cbc0038I Pass  36: suminf.    0.19053 (12) obj. 125.69 iterations 20
Cbc0038I Pass  37: suminf.    0.19053 (12) obj. 125.69 iterations 0
Cbc0038I Rounding solution of 113.043 is better than previous of 139.516

Cbc0038I Before mini branch and bound, 12224 integers at bound fixed and 0 continuous
Cbc0038I Full problem 222 rows 12432 columns, reduced to 42 rows 86 columns
Cbc0038I Mini branch and bound improved solution from 113.043 to 102.048 (0.32 seconds)
Cbc0038I Round again with cutoff of 81.8899
Cbc0038I Pass  37: suminf.    1.00000 (111) obj. 1.2569 iterations 0
Cbc0038I Pass  38: suminf.    0.90090 (100) obj. 14.9582 iterations 11
Cbc0038I Pass  39: suminf.    0.72973 (81) obj. 38.6241 iterations 19
Cbc0038I Pass  40: suminf.    0.47748 (53) obj. 73.5001 iterations 28
Cbc0038I Pass  41: suminf.    0.67640 (47) obj. 81.8899 iterations 30
Cbc0038I Pass  42: suminf.    0.67640 (47) obj. 81.8899 iterations 0
Cbc0038I Pass  43: suminf.    0.67640 (47) obj. 81.8899 iterations 1
Cbc0038I Pass  44: suminf.    0.67640 (47) obj. 81.8899 iterations 0
Cbc0038I Pass  45: suminf.    0.67640 (47) obj. 81.8899 iterations 2
Cbc0038I Pass  46: suminf.    0.67640 (47) obj. 81.8899 iterations 0
Cbc0038I Pass  47: suminf.    0.67640 (47) obj. 81.8899 iterations 16
Cbc0038I Pass  48: suminf.    0.67640 (47) obj. 81.8899 iterations 0
Cbc0038I Pass  49: suminf.    0.67640 (47) obj. 81.8899 iterations 2
Cbc0038I Pass  50: suminf.    0.67640 (47) obj. 81.8899 iterations 0
Cbc0038I Pass  51: suminf.    0.67640 (47) obj. 81.8899 iterations 1
Cbc0038I Pass  52: suminf.    0.67640 (47) obj. 81.8899 iterations 0
Cbc0038I Pass  53: suminf.    0.67640 (47) obj. 81.8899 iterations 1
Cbc0038I Pass  54: suminf.    0.67640 (47) obj. 81.8899 iterations 0
Cbc0038I Pass  55: suminf.    0.67640 (47) obj. 81.8899 iterations 1
Cbc0038I Pass  56: suminf.    0.84455 (44) obj. 81.8899 iterations 26
Cbc0038I Pass  57: suminf.    0.43243 (44) obj. 81.3719 iterations 16
Cbc0038I Pass  58: suminf.    0.84455 (44) obj. 81.8899 iterations 17
Cbc0038I Pass  59: suminf.    0.41441 (44) obj. 81.3492 iterations 16
Cbc0038I Pass  60: suminf.    0.84455 (44) obj. 81.8899 iterations 16
Cbc0038I Pass  61: suminf.    0.73230 (44) obj. 81.8899 iterations 34
Cbc0038I Pass  62: suminf.    0.73230 (44) obj. 81.8899 iterations 20
Cbc0038I Pass  63: suminf.    0.76834 (44) obj. 81.8899 iterations 15
Cbc0038I Pass  64: suminf.    0.76834 (44) obj. 81.8899 iterations 3
Cbc0038I Pass  65: suminf.    0.73230 (44) obj. 81.8899 iterations 5
Cbc0038I Pass  66: suminf.    0.73230 (44) obj. 81.8899 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12304 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.44 seconds)
Cbc0038I After 0.44 seconds - Feasibility pump exiting with objective of 102.048 - took 0.32 seconds
Cbc0012I Integer solution of 102.04812 found by feasibility pump after 0 iterations and 0 nodes (0.45 seconds)
Cbc0012I Integer solution of 20.930915 found by DiveCoefficient after 11312 iterations and 0 nodes (5.28 seconds)
Cbc0031I 913 added rows had average density of 19.575027
Cbc0013I At root node, 913 cuts changed objective from 1.2568966 to 20.930915 in 23 passes
Cbc0014I Cut generator 0 (Probing) - 970 row cuts average 2.1 elements, 0 column cuts (388 active)  in 0.854 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 271 row cuts average 197.8 elements, 0 column cuts (0 active)  in 0.539 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1697 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1142 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 248 row cuts average 142.8 elements, 0 column cuts (0 active)  in 0.175 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 0.22886491, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.20959711, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.19013095, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.17106009, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.15204811, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.13235092, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.11300492, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.093391895, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.074082136, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.052905798, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.030810118, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.00897789, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 6.1988831e-06 locked, 9.5367432e-07 waiting for locks
Cbc0001I Search completed - best objective 20.93091535226451, took 11312 iterations and 0 nodes (5.59 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.2569 to 20.9309
Probing was tried 299 times and created 12610 cuts of which 5044 were active after adding rounds of cuts (11.097 seconds)
Gomory was tried 299 times and created 3523 cuts of which 0 were active after adding rounds of cuts (7.007 seconds)
Knapsack was tried 299 times and created 22061 cuts of which 0 were active after adding rounds of cuts (0.887 seconds)
Clique was tried 299 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.196 seconds)
MixedIntegerRounding2 was tried 299 times and created 14846 cuts of which 0 were active after adding rounds of cuts (1.149 seconds)
FlowCover was tried 299 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.080 seconds)
TwoMirCuts was tried 299 times and created 3224 cuts of which 0 were active after adding rounds of cuts (2.278 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Optimal solution found

Objective value:                20.93091535
Enumerated nodes:               0
Total iterations:               11312
Time (CPU seconds):             5.50
Time (Wallclock seconds):       5.61

Option for printingOptions changed from normal to all
Total time (CPU seconds):       5.53   (Wallclock seconds):       5.64

