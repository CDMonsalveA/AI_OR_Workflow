Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/tesis/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/495784c048194dd1bba360d72a4b9969-pulp.mps -sec 3600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/495784c048194dd1bba360d72a4b9969-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 45373 COLUMNS
At line 270518 RHS
At line 315887 BOUNDS
At line 361044 ENDATA
Problem MODEL has 45368 rows, 45156 columns and 179776 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 6.66179e+08 - 0.22 seconds
Cgl0004I processed model has 45368 rows, 45156 columns (212 integer (212 of which binary)) and 179776 elements
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.419703
Cbc0038I Solution found of 6.67484e+08
Cbc0038I Relaxing continuous gives 6.66371e+08
Cbc0038I Before mini branch and bound, 211 integers at bound fixed and 44940 continuous
Cbc0038I Full problem 45368 rows 45156 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (2.03 seconds)
Cbc0038I Round again with cutoff of 6.66351e+08
Cbc0038I Reduced cost fixing fixed 80 variables on major pass 2
Cbc0038I Pass   1: (2.45 seconds) suminf.    0.04197 (1) obj. 6.66351e+08 iterations 233
Cbc0038I Pass   2: (2.57 seconds) suminf.    0.46916 (1) obj. 6.66351e+08 iterations 107
Cbc0038I Pass   3: (2.70 seconds) suminf.    0.73457 (2) obj. 6.66351e+08 iterations 152
Cbc0038I Pass   4: (2.92 seconds) suminf.    0.35509 (1) obj. 6.66351e+08 iterations 219
Cbc0038I Pass   5: (3.07 seconds) suminf.    0.42816 (1) obj. 6.66351e+08 iterations 102
Cbc0038I Pass   6: (3.31 seconds) suminf.    0.73457 (2) obj. 6.66351e+08 iterations 123
Cbc0038I Pass   7: (3.42 seconds) suminf.    0.45790 (2) obj. 6.66351e+08 iterations 27
Cbc0038I Pass   8: (3.56 seconds) suminf.    0.40755 (1) obj. 6.66351e+08 iterations 207
Cbc0038I Pass   9: (3.69 seconds) suminf.    0.42129 (1) obj. 6.66351e+08 iterations 114
Cbc0038I Pass  10: (3.91 seconds) suminf.    0.54536 (2) obj. 6.66351e+08 iterations 119
Cbc0038I Pass  11: (4.10 seconds) suminf.    0.36140 (1) obj. 6.66351e+08 iterations 214
Cbc0038I Pass  12: (4.22 seconds) suminf.    0.42734 (1) obj. 6.66351e+08 iterations 97
Cbc0038I Pass  13: (4.36 seconds) suminf.    0.43445 (2) obj. 6.66351e+08 iterations 110
Cbc0038I Pass  14: (4.51 seconds) suminf.    0.41266 (1) obj. 6.66351e+08 iterations 201
Cbc0038I Pass  15: (4.63 seconds) suminf.    0.42062 (1) obj. 6.66351e+08 iterations 94
Cbc0038I Pass  16: (4.77 seconds) suminf.    0.76177 (2) obj. 6.66351e+08 iterations 113
Cbc0038I Pass  17: (4.91 seconds) suminf.    0.24122 (1) obj. 6.66351e+08 iterations 194
Cbc0038I Pass  18: (5.03 seconds) suminf.    0.44307 (1) obj. 6.66351e+08 iterations 101
Cbc0038I Pass  19: (5.18 seconds) suminf.    0.61658 (3) obj. 6.66351e+08 iterations 114
Cbc0038I Pass  20: (5.43 seconds) suminf.    0.24915 (1) obj. 6.66351e+08 iterations 206
Cbc0038I Pass  21: (5.61 seconds) suminf.    0.44203 (1) obj. 6.66351e+08 iterations 96
Cbc0038I Pass  22: (5.74 seconds) suminf.    0.52828 (2) obj. 6.66351e+08 iterations 103
Cbc0038I Pass  23: (5.89 seconds) suminf.    0.36932 (1) obj. 6.66351e+08 iterations 183
Cbc0038I Pass  24: (6.06 seconds) suminf.    0.42630 (1) obj. 6.66351e+08 iterations 84
Cbc0038I Pass  25: (6.19 seconds) suminf.    0.67601 (2) obj. 6.66351e+08 iterations 87
Cbc0038I Pass  26: (6.33 seconds) suminf.    0.29730 (1) obj. 6.66351e+08 iterations 193
Cbc0038I Pass  27: (6.45 seconds) suminf.    0.43573 (1) obj. 6.66351e+08 iterations 87
Cbc0038I Pass  28: (6.56 seconds) suminf.    0.81159 (2) obj. 6.66351e+08 iterations 92
Cbc0038I Pass  29: (6.67 seconds) suminf.    0.81159 (2) obj. 6.66351e+08 iterations 3
Cbc0038I Pass  30: (6.80 seconds) suminf.    0.44503 (1) obj. 6.66351e+08 iterations 89
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 195 integers at bound fixed and 44894 continuous
Cbc0038I Full problem 45368 rows 45156 columns, reduced to 27 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (7.15 seconds)
Cbc0038I After 7.16 seconds - Feasibility pump exiting with objective of 6.66371e+08 - took 4.55 seconds
Cbc0012I Integer solution of 6.6637057e+08 found by feasibility pump after 0 iterations and 0 nodes (7.19 seconds)
Cbc0038I Full problem 45368 rows 45156 columns, reduced to 547 rows 26077 columns - 1 fixed gives 335, 26076 - still too large
Cbc0038I Full problem 45368 rows 45156 columns, reduced to 335 rows 26076 columns - too large
Cbc0031I 1 added rows had average density of 693
Cbc0013I At root node, 1 cuts changed objective from 6.6617863e+08 to 6.6637056e+08 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.184 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 693.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0030I Thread 0 used 0 times,  waiting to start 1.287987, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 1.211201, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 1.1176939, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.99133682, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.88225198, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.78113699, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.67154503, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.53158593, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.44166303, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.33168602, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.21180606, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.10184693, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 1.4066696e-05 locked, 9.5367432e-07 waiting for locks
Cbc0001I Search completed - best objective 666370571.819958, took 1 iterations and 0 nodes (9.98 seconds)
Cbc0032I Strong branching done 26 times (130 iterations), fathomed 13 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 88 variables fixed on reduced cost
Cuts at root node changed objective from 6.66179e+08 to 6.66371e+08
Probing was tried 26 times and created 3 cuts of which 0 were active after adding rounds of cuts (2.393 seconds)
Gomory was tried 26 times and created 13 cuts of which 0 were active after adding rounds of cuts (0.330 seconds)
Knapsack was tried 26 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.674 seconds)
Clique was tried 26 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
MixedIntegerRounding2 was tried 26 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.523 seconds)
FlowCover was tried 26 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.203 seconds)
TwoMirCuts was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.394 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                666370571.81995797
Enumerated nodes:               0
Total iterations:               1
Time (CPU seconds):             8.28
Time (Wallclock seconds):       10.58

Option for printingOptions changed from normal to all
Total time (CPU seconds):       8.66   (Wallclock seconds):       11.08

