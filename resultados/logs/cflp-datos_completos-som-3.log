Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/ace4a452a0b145c7b22d6a1616cc1765-pulp.mps -sec 3600 -timeMode elapsed -branch -printingOptions all -solution /tmp/ace4a452a0b145c7b22d6a1616cc1765-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 95 COLUMNS
At line 6306 RHS
At line 6397 BOUNDS
At line 6443 ENDATA
Problem MODEL has 90 rows, 2070 columns and 4095 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
Option for timeMode changed from cpu to elapsed
Continuous objective value is 4.43272e+07 - 0.00 seconds
Cgl0004I processed model has 90 rows, 2070 columns (45 integer (45 of which binary)) and 4095 elements
Cbc0038I Initial state - 45 integers unsatisfied sum - 9.62361
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.66721e+08 iterations 45
Cbc0038I Solution found of 6.66721e+08
Cbc0038I Relaxing continuous gives 3.8018e+08
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 1938 continuous
Cbc0038I Full problem 90 rows 2070 columns, reduced to 83 rows 120 columns
Cbc0038I Mini branch and bound improved solution from 3.8018e+08 to 1.50412e+08 (0.02 seconds)
Cbc0038I Freeing continuous variables gives a solution of 1.47149e+08
Cbc0038I Round again with cutoff of 1.36867e+08
Cbc0038I Pass   2: suminf.    2.08737 (12) obj. 1.36867e+08 iterations 64
Cbc0038I Pass   3: suminf.    0.17953 (1) obj. 1.36867e+08 iterations 42
Cbc0038I Pass   4: suminf.    0.03874 (1) obj. 1.36867e+08 iterations 8
Cbc0038I Pass   5: suminf.    0.11516 (3) obj. 1.36867e+08 iterations 5
Cbc0038I Pass   6: suminf.    0.06255 (1) obj. 1.36867e+08 iterations 18
Cbc0038I Pass   7: suminf.    0.04945 (1) obj. 1.36867e+08 iterations 6
Cbc0038I Pass   8: suminf.    0.00000 (0) obj. 1.36867e+08 iterations 2
Cbc0038I Solution found of 1.36867e+08
Cbc0038I Relaxing continuous gives 1.33473e+08
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 1936 continuous
Cbc0038I Full problem 90 rows 2070 columns, reduced to 65 rows 102 columns
Cbc0038I Mini branch and bound improved solution from 1.33473e+08 to 1.31281e+08 (0.08 seconds)
Cbc0038I Freeing continuous variables gives a solution of 1.25743e+08
Cbc0038I Round again with cutoff of 1.0946e+08
Cbc0038I Pass   9: suminf.    2.97564 (17) obj. 1.0946e+08 iterations 10
Cbc0038I Pass  10: suminf.    2.16565 (16) obj. 1.0946e+08 iterations 46
Cbc0038I Pass  11: suminf.    4.79796 (17) obj. 1.0946e+08 iterations 37
Cbc0038I Pass  12: suminf.    3.92711 (15) obj. 1.0946e+08 iterations 6
Cbc0038I Pass  13: suminf.    4.42715 (17) obj. 1.0946e+08 iterations 10
Cbc0038I Pass  14: suminf.    3.79796 (16) obj. 1.0946e+08 iterations 1
Cbc0038I Pass  15: suminf.    3.69479 (16) obj. 1.0946e+08 iterations 3
Cbc0038I Pass  16: suminf.    4.53198 (17) obj. 1.0946e+08 iterations 6
Cbc0038I Pass  17: suminf.    3.79796 (16) obj. 1.0946e+08 iterations 1
Cbc0038I Pass  18: suminf.    3.57296 (16) obj. 1.0946e+08 iterations 2
Cbc0038I Pass  19: suminf.    4.53198 (17) obj. 1.0946e+08 iterations 6
Cbc0038I Pass  20: suminf.    2.23140 (13) obj. 1.0946e+08 iterations 33
Cbc0038I Pass  21: suminf.    1.89010 (12) obj. 1.0946e+08 iterations 4
Cbc0038I Pass  22: suminf.    3.27109 (16) obj. 1.0946e+08 iterations 21
Cbc0038I Pass  23: suminf.    3.21060 (16) obj. 1.0946e+08 iterations 2
Cbc0038I Pass  24: suminf.    4.29841 (17) obj. 1.0946e+08 iterations 7
Cbc0038I Pass  25: suminf.    3.85405 (17) obj. 1.0946e+08 iterations 2
Cbc0038I Pass  26: suminf.    2.72772 (14) obj. 1.0946e+08 iterations 22
Cbc0038I Pass  27: suminf.    4.05212 (18) obj. 1.0946e+08 iterations 14
Cbc0038I Pass  28: suminf.    4.05212 (18) obj. 1.0946e+08 iterations 0
Cbc0038I Pass  29: suminf.    4.24840 (18) obj. 1.0946e+08 iterations 6
Cbc0038I Pass  30: suminf.    4.24840 (18) obj. 1.0946e+08 iterations 0
Cbc0038I Pass  31: suminf.    4.20816 (18) obj. 1.0946e+08 iterations 6
Cbc0038I Pass  32: suminf.    4.20816 (18) obj. 1.0946e+08 iterations 0
Cbc0038I Pass  33: suminf.    2.43033 (13) obj. 1.0946e+08 iterations 28
Cbc0038I Pass  34: suminf.    4.18294 (16) obj. 1.0946e+08 iterations 19
Cbc0038I Pass  35: suminf.    3.14240 (15) obj. 1.0946e+08 iterations 10
Cbc0038I Pass  36: suminf.    4.61463 (17) obj. 1.0946e+08 iterations 13
Cbc0038I Pass  37: suminf.    3.87809 (17) obj. 1.0946e+08 iterations 2
Cbc0038I Pass  38: suminf.    3.87809 (17) obj. 1.0946e+08 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 1940 continuous
Cbc0038I Full problem 90 rows 2070 columns, reduced to 58 rows 94 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of 1.25743e+08 - took 0.12 seconds
Cbc0012I Integer solution of 1.2574271e+08 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0012I Integer solution of 1.2402017e+08 found by DiveCoefficient after 100 iterations and 0 nodes (0.22 seconds)
Cbc0031I 60 added rows had average density of 63
Cbc0013I At root node, 60 cuts changed objective from 44327189 to 1.2049658e+08 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 74 row cuts average 69.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 4 row cuts average 135.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 79 row cuts average 70.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1.2402017e+08 best solution, best possible 1.2049658e+08 (0.22 seconds)
Cbc0012I Integer solution of 1.2381748e+08 found by DiveCoefficient after 102 iterations and 1 nodes (0.23 seconds)
Cbc0012I Integer solution of 1.2312425e+08 found by DiveCoefficient after 108 iterations and 1 nodes (0.23 seconds)
Cbc0012I Integer solution of 1.2273425e+08 found by DiveCoefficient after 111 iterations and 4 nodes (0.26 seconds)
Cbc0012I Integer solution of 1.2212099e+08 found by DiveCoefficient after 114 iterations and 6 nodes (0.28 seconds)
Cbc0016I Integer solution of 1.2085139e+08 found by strong branching after 124 iterations and 7 nodes (0.29 seconds)
Cbc0001I Search completed - best objective 120851386.4955013, took 149 iterations and 14 nodes (0.29 seconds)
Cbc0032I Strong branching done 72 times (153 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 6, 0 variables fixed on reduced cost
Cuts at root node changed objective from 4.43272e+07 to 1.20497e+08
Probing was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
Gomory was tried 21 times and created 74 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Knapsack was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Clique was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 13 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
TwoMirCuts was tried 21 times and created 82 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                120851386.49550125
Enumerated nodes:               14
Total iterations:               149
Time (CPU seconds):             0.26
Time (Wallclock seconds):       0.30

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.26   (Wallclock seconds):       0.30

