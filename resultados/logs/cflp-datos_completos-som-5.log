Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/6533ea15979243fa996ddef74f127296-pulp.mps -sec 3600 -timeMode elapsed -branch -printingOptions all -solution /tmp/6533ea15979243fa996ddef74f127296-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 193 COLUMNS
At line 26984 RHS
At line 27173 BOUNDS
At line 27268 ENDATA
Problem MODEL has 188 rows, 8930 columns and 17766 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.26998e+08 - 0.01 seconds
Cgl0004I processed model has 188 rows, 8930 columns (94 integer (94 of which binary)) and 17766 elements
Cbc0038I Initial state - 94 integers unsatisfied sum - 25.6008
Cbc0038I Pass   1: suminf.    0.48558 (1) obj. 3.84417e+09 iterations 93
Cbc0038I Solution found of 3.84508e+09
Cbc0038I Relaxing continuous gives 2.12529e+09
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 8649 continuous
Cbc0038I Full problem 188 rows 8930 columns, reduced to 174 rows 255 columns
Cbc0038I Mini branch and bound improved solution from 2.12529e+09 to 3.61622e+08 (0.08 seconds)
Cbc0038I Freeing continuous variables gives a solution of 3.56779e+08
Cbc0038I Round again with cutoff of 3.33801e+08
Cbc0038I Pass   2: suminf.    9.95010 (37) obj. 3.33801e+08 iterations 261
Cbc0038I Pass   3: suminf.    9.79330 (36) obj. 3.33801e+08 iterations 2
Cbc0038I Pass   4: suminf.    2.73503 (15) obj. 3.33801e+08 iterations 73
Cbc0038I Pass   5: suminf.    1.89557 (8) obj. 3.33801e+08 iterations 36
Cbc0038I Pass   6: suminf.    1.88524 (8) obj. 3.33801e+08 iterations 2
Cbc0038I Pass   7: suminf.    1.56609 (4) obj. 3.33801e+08 iterations 27
Cbc0038I Pass   8: suminf.    1.55592 (4) obj. 3.33801e+08 iterations 2
Cbc0038I Pass   9: suminf.    1.08279 (4) obj. 3.33801e+08 iterations 10
Cbc0038I Pass  10: suminf.    1.07311 (4) obj. 3.33801e+08 iterations 2
Cbc0038I Pass  11: suminf.    1.09789 (3) obj. 3.33801e+08 iterations 7
Cbc0038I Pass  12: suminf.    1.08844 (3) obj. 3.33801e+08 iterations 2
Cbc0038I Pass  13: suminf.    0.92200 (3) obj. 3.33801e+08 iterations 8
Cbc0038I Pass  14: suminf.    0.91282 (3) obj. 3.33801e+08 iterations 2
Cbc0038I Pass  15: suminf.    0.88777 (2) obj. 3.33801e+08 iterations 8
Cbc0038I Pass  16: suminf.    0.68109 (2) obj. 3.33801e+08 iterations 2
Cbc0038I Pass  17: suminf.    0.66425 (2) obj. 3.33801e+08 iterations 2
Cbc0038I Pass  18: suminf.    2.90747 (11) obj. 3.33801e+08 iterations 67
Cbc0038I Pass  19: suminf.    2.50608 (10) obj. 3.33801e+08 iterations 6
Cbc0038I Pass  20: suminf.    1.71158 (7) obj. 3.33801e+08 iterations 24
Cbc0038I Pass  21: suminf.    1.67471 (6) obj. 3.33801e+08 iterations 4
Cbc0038I Pass  22: suminf.    0.85132 (2) obj. 3.33801e+08 iterations 15
Cbc0038I Pass  23: suminf.    0.82377 (3) obj. 3.33801e+08 iterations 6
Cbc0038I Pass  24: suminf.    0.85061 (2) obj. 3.33801e+08 iterations 9
Cbc0038I Pass  25: suminf.    0.82575 (3) obj. 3.33801e+08 iterations 5
Cbc0038I Pass  26: suminf.    0.87178 (2) obj. 3.33801e+08 iterations 9
Cbc0038I Pass  27: suminf.    0.75614 (2) obj. 3.33801e+08 iterations 9
Cbc0038I Pass  28: suminf.    3.09809 (10) obj. 3.33801e+08 iterations 35
Cbc0038I Pass  29: suminf.    2.76726 (10) obj. 3.33801e+08 iterations 2
Cbc0038I Pass  30: suminf.    1.64626 (7) obj. 3.33801e+08 iterations 21
Cbc0038I Pass  31: suminf.    1.60633 (6) obj. 3.33801e+08 iterations 4
Cbc0038I Rounding solution of 3.48133e+08 is better than previous of 3.56779e+08

Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 8652 continuous
Cbc0038I Full problem 188 rows 8930 columns, reduced to 127 rows 206 columns
Cbc0038I Mini branch and bound improved solution from 3.48133e+08 to 3.40068e+08 (0.24 seconds)
Cbc0038I Freeing continuous variables gives a solution of 3.39356e+08
Cbc0038I Round again with cutoff of 2.92441e+08
Cbc0038I Pass  31: suminf.   11.51945 (43) obj. 2.92441e+08 iterations 9
Cbc0038I Pass  32: suminf.   11.19797 (42) obj. 2.92441e+08 iterations 3
Cbc0038I Pass  33: suminf.    5.49727 (28) obj. 2.92441e+08 iterations 46
Cbc0038I Pass  34: suminf.    4.01950 (21) obj. 2.92441e+08 iterations 33
Cbc0038I Pass  35: suminf.    4.01260 (21) obj. 2.92441e+08 iterations 1
Cbc0038I Pass  36: suminf.    4.10578 (16) obj. 2.92441e+08 iterations 47
Cbc0038I Pass  37: suminf.    4.08902 (15) obj. 2.92441e+08 iterations 2
Cbc0038I Pass  38: suminf.    4.19294 (17) obj. 2.92441e+08 iterations 37
Cbc0038I Pass  39: suminf.    4.19294 (17) obj. 2.92441e+08 iterations 0
Cbc0038I Pass  40: suminf.    6.43383 (17) obj. 2.92441e+08 iterations 29
Cbc0038I Pass  41: suminf.    6.40631 (17) obj. 2.92441e+08 iterations 2
Cbc0038I Pass  42: suminf.    6.35748 (16) obj. 2.92441e+08 iterations 6
Cbc0038I Pass  43: suminf.    6.16605 (16) obj. 2.92441e+08 iterations 3
Cbc0038I Pass  44: suminf.    6.54520 (17) obj. 2.92441e+08 iterations 8
Cbc0038I Pass  45: suminf.    6.21887 (17) obj. 2.92441e+08 iterations 3
Cbc0038I Pass  46: suminf.    6.68787 (17) obj. 2.92441e+08 iterations 4
Cbc0038I Pass  47: suminf.    6.41539 (16) obj. 2.92441e+08 iterations 1
Cbc0038I Pass  48: suminf.    6.30144 (16) obj. 2.92441e+08 iterations 4
Cbc0038I Pass  49: suminf.    6.14877 (19) obj. 2.92441e+08 iterations 36
Cbc0038I Pass  50: suminf.    5.91366 (18) obj. 2.92441e+08 iterations 29
Cbc0038I Pass  51: suminf.    5.79208 (17) obj. 2.92441e+08 iterations 1
Cbc0038I Pass  52: suminf.    6.68787 (17) obj. 2.92441e+08 iterations 14
Cbc0038I Pass  53: suminf.    6.41539 (16) obj. 2.92441e+08 iterations 1
Cbc0038I Pass  54: suminf.    6.30144 (16) obj. 2.92441e+08 iterations 4
Cbc0038I Pass  55: suminf.    6.68787 (17) obj. 2.92441e+08 iterations 5
Cbc0038I Pass  56: suminf.    6.88029 (22) obj. 2.92441e+08 iterations 55
Cbc0038I Pass  57: suminf.    6.19699 (20) obj. 2.92441e+08 iterations 8
Cbc0038I Pass  58: suminf.    7.08729 (18) obj. 2.92441e+08 iterations 29
Cbc0038I Pass  59: suminf.    7.08729 (18) obj. 2.92441e+08 iterations 0
Cbc0038I Pass  60: suminf.    6.86383 (18) obj. 2.92441e+08 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 8673 continuous
Cbc0038I Full problem 188 rows 8930 columns, reduced to 111 rows 169 columns
Cbc0038I Mini branch and bound improved solution from 3.39356e+08 to 3.30918e+08 (0.37 seconds)
Cbc0038I Freeing continuous variables gives a solution of 3.304e+08
Cbc0038I Round again with cutoff of 2.42808e+08
Cbc0038I Pass  60: suminf.   13.58828 (53) obj. 2.42808e+08 iterations 11
Cbc0038I Pass  61: suminf.   13.35896 (52) obj. 2.42808e+08 iterations 7
Cbc0038I Pass  62: suminf.    7.78501 (37) obj. 2.42808e+08 iterations 69
Cbc0038I Pass  63: suminf.    7.78319 (37) obj. 2.42808e+08 iterations 1
Cbc0038I Pass  64: suminf.   10.23774 (40) obj. 2.42808e+08 iterations 63
Cbc0038I Pass  65: suminf.   10.23774 (40) obj. 2.42808e+08 iterations 0
Cbc0038I Pass  66: suminf.    9.60040 (39) obj. 2.42808e+08 iterations 10
Cbc0038I Pass  67: suminf.    9.54289 (39) obj. 2.42808e+08 iterations 1
Cbc0038I Pass  68: suminf.    9.60040 (39) obj. 2.42808e+08 iterations 1
Cbc0038I Pass  69: suminf.   10.77507 (39) obj. 2.42808e+08 iterations 51
Cbc0038I Pass  70: suminf.   10.71508 (39) obj. 2.42808e+08 iterations 2
Cbc0038I Pass  71: suminf.   10.28892 (38) obj. 2.42808e+08 iterations 3
Cbc0038I Pass  72: suminf.   10.02157 (38) obj. 2.42808e+08 iterations 2
Cbc0038I Pass  73: suminf.   10.27510 (39) obj. 2.42808e+08 iterations 4
Cbc0038I Pass  74: suminf.   10.27510 (39) obj. 2.42808e+08 iterations 0
Cbc0038I Pass  75: suminf.   10.43984 (39) obj. 2.42808e+08 iterations 8
Cbc0038I Pass  76: suminf.   10.43984 (39) obj. 2.42808e+08 iterations 0
Cbc0038I Pass  77: suminf.   10.43984 (39) obj. 2.42808e+08 iterations 0
Cbc0038I Pass  78: suminf.   10.79822 (39) obj. 2.42808e+08 iterations 48
Cbc0038I Pass  79: suminf.   10.69173 (40) obj. 2.42808e+08 iterations 3
Cbc0038I Pass  80: suminf.   11.02937 (41) obj. 2.42808e+08 iterations 13
Cbc0038I Pass  81: suminf.   11.02937 (41) obj. 2.42808e+08 iterations 0
Cbc0038I Pass  82: suminf.   11.16224 (41) obj. 2.42808e+08 iterations 4
Cbc0038I Pass  83: suminf.   11.16224 (41) obj. 2.42808e+08 iterations 0
Cbc0038I Pass  84: suminf.   11.02937 (41) obj. 2.42808e+08 iterations 4
Cbc0038I Pass  85: suminf.   11.07853 (41) obj. 2.42808e+08 iterations 52
Cbc0038I Pass  86: suminf.   10.25233 (39) obj. 2.42808e+08 iterations 6
Cbc0038I Pass  87: suminf.   10.25233 (39) obj. 2.42808e+08 iterations 0
Cbc0038I Pass  88: suminf.   10.06521 (40) obj. 2.42808e+08 iterations 17
Cbc0038I Pass  89: suminf.   10.06521 (40) obj. 2.42808e+08 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 8701 continuous
Cbc0038I Full problem 188 rows 8930 columns, reduced to 80 rows 111 columns
Cbc0038I Mini branch and bound did not improve solution (0.46 seconds)
Cbc0038I After 0.46 seconds - Feasibility pump exiting with objective of 3.304e+08 - took 0.41 seconds
Cbc0012I Integer solution of 3.3040035e+08 found by feasibility pump after 0 iterations and 0 nodes (0.46 seconds)
Cbc0012I Integer solution of 3.2679068e+08 found by DiveCoefficient after 120 iterations and 0 nodes (0.74 seconds)
Cbc0031I 99 added rows had average density of 106.34343
Cbc0013I At root node, 99 cuts changed objective from 1.2699824e+08 to 3.2531308e+08 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 100 row cuts average 110.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 470.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 105 row cuts average 110.1 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 3.2679068e+08 best solution, best possible 3.2531308e+08 (0.75 seconds)
Cbc0012I Integer solution of 3.2676116e+08 found by DiveCoefficient after 130 iterations and 2 nodes (0.81 seconds)
Cbc0001I Search completed - best objective 326761157.554937, took 167 iterations and 8 nodes (0.90 seconds)
Cbc0032I Strong branching done 48 times (158 iterations), fathomed 5 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.26998e+08 to 3.25313e+08
Probing was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.069 seconds)
Gomory was tried 7 times and created 100 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Knapsack was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 7 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
FlowCover was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.026 seconds)
TwoMirCuts was tried 16 times and created 105 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                326761157.55493701
Enumerated nodes:               8
Total iterations:               167
Time (CPU seconds):             0.91
Time (Wallclock seconds):       0.92

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.93   (Wallclock seconds):       0.94

