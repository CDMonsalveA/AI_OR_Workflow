Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/fc3c25c4c85240a4ada440103840a3d3-pulp.mps -sec 3600 -timeMode elapsed -branch -printingOptions all -solution /tmp/fc3c25c4c85240a4ada440103840a3d3-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 87 COLUMNS
At line 5254 RHS
At line 5337 BOUNDS
At line 5379 ENDATA
Problem MODEL has 82 rows, 1722 columns and 3403 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2.45048e+07 - 0.00 seconds
Cgl0004I processed model has 82 rows, 1722 columns (41 integer (41 of which binary)) and 3403 elements
Cbc0038I Initial state - 41 integers unsatisfied sum - 5.09711
Cbc0038I Pass   1: suminf.    0.29981 (1) obj. 2.61536e+08 iterations 40
Cbc0038I Solution found of 2.63715e+08
Cbc0038I Relaxing continuous gives 1.93135e+08
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 1600 continuous
Cbc0038I Full problem 82 rows 1722 columns, reduced to 79 rows 116 columns
Cbc0038I Mini branch and bound improved solution from 1.93135e+08 to 1.24199e+08 (0.03 seconds)
Cbc0038I Freeing continuous variables gives a solution of 1.12659e+08
Cbc0038I Round again with cutoff of 1.03844e+08
Cbc0038I Pass   2: suminf.    1.07139 (14) obj. 1.03844e+08 iterations 45
Cbc0038I Pass   3: suminf.    0.61182 (8) obj. 1.03844e+08 iterations 47
Cbc0038I Pass   4: suminf.    1.37906 (7) obj. 1.03844e+08 iterations 29
Cbc0038I Pass   5: suminf.    2.20826 (12) obj. 1.03844e+08 iterations 23
Cbc0038I Pass   6: suminf.    2.20826 (12) obj. 1.03844e+08 iterations 0
Cbc0038I Pass   7: suminf.    2.32673 (12) obj. 1.03844e+08 iterations 18
Cbc0038I Pass   8: suminf.    2.32673 (12) obj. 1.03844e+08 iterations 0
Cbc0038I Pass   9: suminf.    2.00200 (13) obj. 1.03844e+08 iterations 6
Cbc0038I Pass  10: suminf.    2.00200 (13) obj. 1.03844e+08 iterations 0
Cbc0038I Pass  11: suminf.    2.33095 (13) obj. 1.03844e+08 iterations 4
Cbc0038I Pass  12: suminf.    2.32132 (12) obj. 1.03844e+08 iterations 1
Cbc0038I Pass  13: suminf.    2.05297 (11) obj. 1.03844e+08 iterations 4
Cbc0038I Pass  14: suminf.    2.05297 (11) obj. 1.03844e+08 iterations 0
Cbc0038I Pass  15: suminf.    1.82726 (11) obj. 1.03844e+08 iterations 4
Cbc0038I Pass  16: suminf.    1.82726 (11) obj. 1.03844e+08 iterations 0
Cbc0038I Pass  17: suminf.    2.05297 (11) obj. 1.03844e+08 iterations 4
Cbc0038I Pass  18: suminf.    1.78802 (9) obj. 1.03844e+08 iterations 25
Cbc0038I Pass  19: suminf.    1.60653 (10) obj. 1.03844e+08 iterations 4
Cbc0038I Pass  20: suminf.    2.15144 (12) obj. 1.03844e+08 iterations 14
Cbc0038I Pass  21: suminf.    2.15144 (12) obj. 1.03844e+08 iterations 0
Cbc0038I Pass  22: suminf.    2.39669 (12) obj. 1.03844e+08 iterations 4
Cbc0038I Pass  23: suminf.    2.39669 (12) obj. 1.03844e+08 iterations 0
Cbc0038I Pass  24: suminf.    2.05297 (11) obj. 1.03844e+08 iterations 4
Cbc0038I Pass  25: suminf.    2.05297 (11) obj. 1.03844e+08 iterations 0
Cbc0038I Pass  26: suminf.    1.82726 (11) obj. 1.03844e+08 iterations 4
Cbc0038I Pass  27: suminf.    1.82726 (11) obj. 1.03844e+08 iterations 0
Cbc0038I Pass  28: suminf.    2.05297 (11) obj. 1.03844e+08 iterations 4
Cbc0038I Pass  29: suminf.    1.23597 (10) obj. 1.03844e+08 iterations 21
Cbc0038I Pass  30: suminf.    1.23597 (10) obj. 1.03844e+08 iterations 0
Cbc0038I Pass  31: suminf.    1.49712 (11) obj. 1.03844e+08 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 1591 continuous
Cbc0038I Full problem 82 rows 1722 columns, reduced to 63 rows 109 columns
Cbc0038I Mini branch and bound improved solution from 1.12659e+08 to 1.06263e+08 (0.10 seconds)
Cbc0038I Freeing continuous variables gives a solution of 1.01445e+08
Cbc0038I Round again with cutoff of 8.6057e+07
Cbc0038I Pass  31: suminf.    1.50988 (18) obj. 8.6057e+07 iterations 4
Cbc0038I Pass  32: suminf.    1.91779 (19) obj. 8.6057e+07 iterations 53
Cbc0038I Pass  33: suminf.    3.36057 (19) obj. 8.6057e+07 iterations 32
Cbc0038I Pass  34: suminf.    3.09403 (19) obj. 8.6057e+07 iterations 2
Cbc0038I Pass  35: suminf.    3.01823 (19) obj. 8.6057e+07 iterations 8
Cbc0038I Pass  36: suminf.    2.97106 (18) obj. 8.6057e+07 iterations 1
Cbc0038I Pass  37: suminf.    2.92325 (18) obj. 8.6057e+07 iterations 3
Cbc0038I Pass  38: suminf.    2.92325 (18) obj. 8.6057e+07 iterations 0
Cbc0038I Pass  39: suminf.    2.97106 (18) obj. 8.6057e+07 iterations 7
Cbc0038I Pass  40: suminf.    1.91608 (15) obj. 8.6057e+07 iterations 25
Cbc0038I Pass  41: suminf.    1.89509 (16) obj. 8.6057e+07 iterations 2
Cbc0038I Pass  42: suminf.    2.77957 (19) obj. 8.6057e+07 iterations 17
Cbc0038I Pass  43: suminf.    2.77957 (19) obj. 8.6057e+07 iterations 0
Cbc0038I Pass  44: suminf.    2.98070 (19) obj. 8.6057e+07 iterations 9
Cbc0038I Pass  45: suminf.    2.97106 (18) obj. 8.6057e+07 iterations 1
Cbc0038I Pass  46: suminf.    2.92325 (18) obj. 8.6057e+07 iterations 3
Cbc0038I Pass  47: suminf.    2.92325 (18) obj. 8.6057e+07 iterations 0
Cbc0038I Pass  48: suminf.    2.97106 (18) obj. 8.6057e+07 iterations 7
Cbc0038I Pass  49: suminf.    2.75329 (18) obj. 8.6057e+07 iterations 14
Cbc0038I Pass  50: suminf.    2.55092 (17) obj. 8.6057e+07 iterations 3
Cbc0038I Pass  51: suminf.    2.97106 (18) obj. 8.6057e+07 iterations 9
Cbc0038I Pass  52: suminf.    2.97106 (18) obj. 8.6057e+07 iterations 0
Cbc0038I Pass  53: suminf.    2.92325 (18) obj. 8.6057e+07 iterations 3
Cbc0038I Pass  54: suminf.    2.92325 (18) obj. 8.6057e+07 iterations 0
Cbc0038I Pass  55: suminf.    2.97106 (18) obj. 8.6057e+07 iterations 6
Cbc0038I Pass  56: suminf.    2.75285 (18) obj. 8.6057e+07 iterations 18
Cbc0038I Pass  57: suminf.    2.97106 (18) obj. 8.6057e+07 iterations 10
Cbc0038I Pass  58: suminf.    2.97106 (18) obj. 8.6057e+07 iterations 0
Cbc0038I Pass  59: suminf.    2.92325 (18) obj. 8.6057e+07 iterations 3
Cbc0038I Pass  60: suminf.    2.92325 (18) obj. 8.6057e+07 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 1610 continuous
Cbc0038I Full problem 82 rows 1722 columns, reduced to 50 rows 78 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of 1.01445e+08 - took 0.11 seconds
Cbc0012I Integer solution of 1.01445e+08 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0012I Integer solution of 1.0122462e+08 found by DiveCoefficient after 329 iterations and 0 nodes (0.26 seconds)
Cbc0031I 68 added rows had average density of 108.32353
Cbc0013I At root node, 68 cuts changed objective from 24504822 to 86202184 in 22 passes
Cbc0014I Cut generator 0 (Probing) - 4 row cuts average 41.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 84 row cuts average 107.4 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 4 row cuts average 205.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 110 row cuts average 115.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1.0122462e+08 best solution, best possible 86202184 (0.27 seconds)
Cbc0012I Integer solution of 99963339 found by DiveCoefficient after 401 iterations and 2 nodes (0.30 seconds)
Cbc0012I Integer solution of 99905387 found by DiveCoefficient after 408 iterations and 3 nodes (0.32 seconds)
Cbc0012I Integer solution of 99814840 found by DiveCoefficient after 432 iterations and 3 nodes (0.34 seconds)
Cbc0012I Integer solution of 99187548 found by DiveCoefficient after 446 iterations and 4 nodes (0.35 seconds)
Cbc0012I Integer solution of 98612983 found by DiveCoefficient after 452 iterations and 5 nodes (0.37 seconds)
Cbc0012I Integer solution of 98102572 found by DiveCoefficient after 459 iterations and 6 nodes (0.40 seconds)
Cbc0012I Integer solution of 98022431 found by DiveCoefficient after 464 iterations and 8 nodes (0.41 seconds)
Cbc0012I Integer solution of 95528633 found by DiveCoefficient after 470 iterations and 9 nodes (0.42 seconds)
Cbc0012I Integer solution of 89393658 found by rounding after 527 iterations and 19 nodes (0.45 seconds)
Cbc0016I Integer solution of 88076910 found by strong branching after 530 iterations and 20 nodes (0.45 seconds)
Cbc0012I Integer solution of 87873862 found by DiveCoefficient after 689 iterations and 34 nodes (0.48 seconds)
Cbc0038I Full problem 82 rows 1722 columns, reduced to 57 rows 661 columns
Cbc0012I Integer solution of 87838748 found by DiveCoefficient after 878 iterations and 46 nodes (0.55 seconds)
Cbc0012I Integer solution of 87732612 found by DiveCoefficient after 959 iterations and 54 nodes (0.58 seconds)
Cbc0012I Integer solution of 87444247 found by DiveCoefficient after 1049 iterations and 55 nodes (0.61 seconds)
Cbc0012I Integer solution of 87065491 found by DiveCoefficient after 1098 iterations and 62 nodes (0.64 seconds)
Cbc0001I Search completed - best objective 87065490.5207065, took 1164 iterations and 68 nodes (0.65 seconds)
Cbc0032I Strong branching done 432 times (3518 iterations), fathomed 5 nodes and fixed 26 variables
Cbc0035I Maximum depth 17, 2 variables fixed on reduced cost
Cuts at root node changed objective from 2.45048e+07 to 8.62022e+07
Probing was tried 22 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
Gomory was tried 77 times and created 84 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Knapsack was tried 22 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Clique was tried 22 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 22 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
FlowCover was tried 22 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.038 seconds)
TwoMirCuts was tried 77 times and created 147 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                87065490.52070650
Enumerated nodes:               68
Total iterations:               1164
Time (CPU seconds):             0.65
Time (Wallclock seconds):       0.66

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.65   (Wallclock seconds):       0.66

