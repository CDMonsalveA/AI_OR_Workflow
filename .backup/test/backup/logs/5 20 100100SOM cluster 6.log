Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/tesis/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/d13e80e579fd4c4da5ddfebe1f895be2-pulp.mps -sec 3600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/d13e80e579fd4c4da5ddfebe1f895be2-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 40808 COLUMNS
At line 243216 RHS
At line 284020 BOUNDS
At line 324623 ENDATA
Problem MODEL has 40803 rows, 40602 columns and 161604 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 7.40663e+07 - 2.21 seconds
Cgl0004I processed model has 40803 rows, 40602 columns (201 integer (201 of which binary)) and 161604 elements
Cbc0038I Initial state - 69 integers unsatisfied sum - 9.61251
Cbc0038I Pass   1: (72.46 seconds) suminf.    1.32726 (23) obj. 2.19076e+08 iterations 57004
Cbc0038I Pass   2: (74.42 seconds) suminf.    0.18796 (9) obj. 3.20706e+08 iterations 2889
Cbc0038I Solution found of 3.48122e+08
Cbc0038I Relaxing continuous gives 1.94846e+08
Cbc0038I Before mini branch and bound, 114 integers at bound fixed and 34155 continuous
Cbc0038I Full problem 40803 rows 40602 columns, reduced to 6534 rows 6333 columns
Cbc0038I Mini branch and bound did not improve solution (86.90 seconds)
Cbc0038I Round again with cutoff of 1.82955e+08
Cbc0038I Pass   3: (104.89 seconds) suminf.    1.35875 (24) obj. 1.82955e+08 iterations 4409
Cbc0038I Pass   4: (127.90 seconds) suminf.    0.55576 (7) obj. 1.82955e+08 iterations 34730
Cbc0038I Pass   5: (132.41 seconds) suminf.    0.19974 (1) obj. 1.82955e+08 iterations 16820
Cbc0038I Pass   6: (136.33 seconds) suminf.    0.30927 (1) obj. 1.82955e+08 iterations 17988
Cbc0038I Pass   7: (138.67 seconds) suminf.    3.26511 (13) obj. 1.82955e+08 iterations 6360
Cbc0038I Pass   8: (139.10 seconds) suminf.    1.37769 (10) obj. 1.82955e+08 iterations 1541
Cbc0038I Pass   9: (139.77 seconds) suminf.    2.29645 (10) obj. 1.82955e+08 iterations 1631
Cbc0038I Pass  10: (140.13 seconds) suminf.    0.60332 (6) obj. 1.82955e+08 iterations 1631
Cbc0038I Pass  11: (140.56 seconds) suminf.    2.21753 (8) obj. 1.82955e+08 iterations 2495
Cbc0038I Pass  12: (140.80 seconds) suminf.    1.14725 (9) obj. 1.82955e+08 iterations 1121
Cbc0038I Pass  13: (141.57 seconds) suminf.    1.09251 (6) obj. 1.82955e+08 iterations 2273
Cbc0038I Pass  14: (141.76 seconds) suminf.    0.50199 (6) obj. 1.82955e+08 iterations 701
Cbc0038I Pass  15: (142.23 seconds) suminf.    1.64120 (7) obj. 1.82955e+08 iterations 1536
Cbc0038I Pass  16: (142.76 seconds) suminf.    0.42603 (3) obj. 1.82955e+08 iterations 2777
Cbc0038I Pass  17: (143.10 seconds) suminf.    0.89957 (4) obj. 1.82955e+08 iterations 2021
Cbc0038I Pass  18: (144.79 seconds) suminf.    9.18162 (30) obj. 1.82955e+08 iterations 4334
Cbc0038I Pass  19: (145.98 seconds) suminf.    1.33242 (13) obj. 1.82955e+08 iterations 3324
Cbc0038I Pass  20: (147.18 seconds) suminf.    2.00131 (9) obj. 1.82955e+08 iterations 3469
Cbc0038I Pass  21: (147.35 seconds) suminf.    1.09934 (8) obj. 1.82955e+08 iterations 542
Cbc0038I Pass  22: (148.11 seconds) suminf.    1.39454 (8) obj. 1.82955e+08 iterations 2237
Cbc0038I Pass  23: (148.26 seconds) suminf.    1.09645 (13) obj. 1.82955e+08 iterations 332
Cbc0038I Pass  24: (149.23 seconds) suminf.    2.34846 (8) obj. 1.82955e+08 iterations 2361
Cbc0038I Pass  25: (149.55 seconds) suminf.    1.01183 (11) obj. 1.82955e+08 iterations 1006
Cbc0038I Pass  26: (151.08 seconds) suminf.    1.22788 (6) obj. 1.82955e+08 iterations 5115
Cbc0038I Pass  27: (151.19 seconds) suminf.    0.54183 (7) obj. 1.82955e+08 iterations 327
Cbc0038I Pass  28: (151.94 seconds) suminf.    2.06552 (7) obj. 1.82955e+08 iterations 2375
Cbc0038I Pass  29: (152.79 seconds) suminf.    0.36198 (4) obj. 1.82955e+08 iterations 3256
Cbc0038I Pass  30: (153.20 seconds) suminf.    0.71588 (3) obj. 1.82955e+08 iterations 2534
Cbc0038I Pass  31: (155.88 seconds) suminf.    7.13917 (23) obj. 1.82955e+08 iterations 5761
Cbc0038I Pass  32: (156.61 seconds) suminf.    2.07210 (15) obj. 1.82955e+08 iterations 2208
Cbc0038I Rounding solution of 1.90385e+08 is better than previous of 1.94846e+08

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 33689 continuous
Cbc0038I Full problem 40803 rows 40602 columns, reduced to 7059 rows 6858 columns
Cbc0038I Mini branch and bound did not improve solution (163.01 seconds)
Cbc0038I Round again with cutoff of 1.61552e+08
Cbc0038I Pass  32: (184.92 seconds) suminf.    1.45536 (25) obj. 1.61552e+08 iterations 11757
Cbc0038I Pass  33: (206.31 seconds) suminf.    1.76865 (11) obj. 1.61552e+08 iterations 32757
Cbc0038I Pass  34: (207.62 seconds) suminf.    1.30402 (25) obj. 1.61552e+08 iterations 3529
Cbc0038I Pass  35: (210.90 seconds) suminf.    2.11256 (18) obj. 1.61552e+08 iterations 7874
Cbc0038I Pass  36: (211.49 seconds) suminf.    1.50028 (18) obj. 1.61552e+08 iterations 1378
Cbc0038I Pass  37: (214.00 seconds) suminf.    4.96761 (22) obj. 1.61552e+08 iterations 5638
Cbc0038I Pass  38: (214.77 seconds) suminf.    1.85254 (22) obj. 1.61552e+08 iterations 2104
Cbc0038I Pass  39: (215.59 seconds) suminf.   10.11726 (34) obj. 1.61552e+08 iterations 1871
Cbc0038I Pass  40: (216.35 seconds) suminf.    4.39075 (28) obj. 1.61552e+08 iterations 1226
Cbc0038I Pass  41: (220.42 seconds) suminf.    0.84309 (12) obj. 1.61552e+08 iterations 7447
Cbc0038I Pass  42: (221.87 seconds) suminf.    3.50708 (18) obj. 1.61552e+08 iterations 4526
Cbc0038I Pass  43: (222.48 seconds) suminf.    1.35384 (18) obj. 1.61552e+08 iterations 1701
Cbc0038I Pass  44: (223.37 seconds) suminf.    7.40919 (25) obj. 1.61552e+08 iterations 2368
Cbc0038I Pass  45: (224.22 seconds) suminf.    1.83724 (20) obj. 1.61552e+08 iterations 2018
Cbc0038I Pass  46: (225.46 seconds) suminf.    3.33866 (24) obj. 1.61552e+08 iterations 2874
Cbc0038I Pass  47: (225.68 seconds) suminf.    2.75516 (22) obj. 1.61552e+08 iterations 382
Cbc0038I Pass  48: (227.94 seconds) suminf.    4.34595 (23) obj. 1.61552e+08 iterations 3732
Cbc0038I Pass  49: (228.32 seconds) suminf.    2.22291 (20) obj. 1.61552e+08 iterations 635
Cbc0038I Pass  50: (229.88 seconds) suminf.    4.88516 (24) obj. 1.61552e+08 iterations 2839
Cbc0038I Pass  51: (230.38 seconds) suminf.    2.74922 (20) obj. 1.61552e+08 iterations 977
Cbc0038I Pass  52: (232.41 seconds) suminf.    4.01171 (22) obj. 1.61552e+08 iterations 4430
Cbc0038I Pass  53: (233.86 seconds) suminf.    0.93812 (11) obj. 1.61552e+08 iterations 3170
Cbc0038I Pass  54: (234.86 seconds) suminf.    3.95304 (15) obj. 1.61552e+08 iterations 3764
Cbc0038I Pass  55: (235.92 seconds) suminf.    0.88425 (10) obj. 1.61552e+08 iterations 2899
Cbc0038I Pass  56: (236.60 seconds) suminf.    3.22494 (12) obj. 1.61552e+08 iterations 2786
Cbc0038I Pass  57: (239.38 seconds) suminf.   12.20466 (37) obj. 1.61552e+08 iterations 5598
Cbc0038I Pass  58: (240.81 seconds) suminf.    2.16805 (16) obj. 1.61552e+08 iterations 3410
Cbc0038I Pass  59: (240.93 seconds) suminf.    1.49563 (15) obj. 1.61552e+08 iterations 318
Cbc0038I Pass  60: (241.74 seconds) suminf.    5.45209 (19) obj. 1.61552e+08 iterations 2089
Cbc0038I Pass  61: (242.40 seconds) suminf.    1.49355 (15) obj. 1.61552e+08 iterations 1509
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 33040 continuous
Cbc0038I Full problem 40803 rows 40602 columns, reduced to 7684 rows 7483 columns
Cbc0038I Mini branch and bound did not improve solution (249.01 seconds)
Cbc0038I After 249.01 seconds - Feasibility pump exiting with objective of 1.90385e+08 - took 239.08 seconds
Cbc0012I Integer solution of 1.9022316e+08 found by feasibility pump after 0 iterations and 0 nodes (249.34 seconds)
Cbc0038I Full problem 40803 rows 40602 columns, reduced to 17169 rows 16968 columns - 11 fixed gives 14958, 16957 - still too large
Cbc0038I Full problem 40803 rows 40602 columns, reduced to 14958 rows 16957 columns - too large
Cbc0031I 1245 added rows had average density of 21.009639
Cbc0013I At root node, 1245 cuts changed objective from 75940457 to 1.3187442e+08 in 50 passes
Cbc0014I Cut generator 0 (Probing) - 1326 row cuts average 2.0 elements, 0 column cuts (564 active)  in 0.514 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 212 row cuts average 84.0 elements, 0 column cuts (0 active)  in 0.884 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.558 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2184 row cuts average 21.1 elements, 0 column cuts (0 active)  in 0.495 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 23 row cuts average 30.3 elements, 0 column cuts (0 active)  in 0.617 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 55 row cuts average 26.5 elements, 0 column cuts (0 active)  in 0.651 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1.9022316e+08 best solution, best possible 1.3187442e+08 (484.19 seconds)
Cbc0010I After 100 nodes, 52 on tree, 1.9022316e+08 best solution, best possible 1.3308262e+08 (857.63 seconds)
Cbc0010I After 200 nodes, 107 on tree, 1.9022316e+08 best solution, best possible 1.3308262e+08 (1156.79 seconds)
Cbc0010I After 300 nodes, 157 on tree, 1.9022316e+08 best solution, best possible 1.3308262e+08 (1409.77 seconds)
Cbc0010I After 400 nodes, 210 on tree, 1.9022316e+08 best solution, best possible 1.3308262e+08 (1638.39 seconds)
Cbc0010I After 500 nodes, 259 on tree, 1.9022316e+08 best solution, best possible 1.3308262e+08 (1942.19 seconds)
Cbc0010I After 600 nodes, 309 on tree, 1.9022316e+08 best solution, best possible 1.3308262e+08 (2327.31 seconds)
Cbc0010I After 700 nodes, 359 on tree, 1.9022316e+08 best solution, best possible 1.3308262e+08 (2627.59 seconds)
Cbc0010I After 800 nodes, 409 on tree, 1.9022316e+08 best solution, best possible 1.3308262e+08 (2855.22 seconds)
Cbc0010I After 900 nodes, 461 on tree, 1.9022316e+08 best solution, best possible 1.3308262e+08 (3112.64 seconds)
Cbc0010I After 1000 nodes, 508 on tree, 1.9022316e+08 best solution, best possible 1.3308262e+08 (3381.40 seconds)
Cbc0030I Thread 0 used 101 times,  waiting to start 4.4994957,  910 locks, 0.97471189 locked, 0.020148516 waiting for locks
Cbc0030I Thread 1 used 101 times,  waiting to start 11.297041,  918 locks, 0.9463346 locked, 0.040710211 waiting for locks
Cbc0030I Thread 2 used 84 times,  waiting to start 26.738874,  781 locks, 0.81734514 locked, 0.0030782223 waiting for locks
Cbc0030I Thread 3 used 89 times,  waiting to start 31.046054,  810 locks, 0.80181861 locked, 0.021813869 waiting for locks
Cbc0030I Thread 4 used 90 times,  waiting to start 39.25322,  825 locks, 0.90365958 locked, 0.035976648 waiting for locks
Cbc0030I Thread 5 used 90 times,  waiting to start 40.987047,  832 locks, 0.85404778 locked, 0.010133505 waiting for locks
Cbc0030I Thread 6 used 89 times,  waiting to start 55.243655,  816 locks, 0.89237428 locked, 0.0063383579 waiting for locks
Cbc0030I Thread 7 used 95 times,  waiting to start 63.26152,  862 locks, 0.89999485 locked, 0.0055158138 waiting for locks
Cbc0030I Thread 8 used 88 times,  waiting to start 67.77545,  816 locks, 0.86617303 locked, 0.016089916 waiting for locks
Cbc0030I Thread 9 used 88 times,  waiting to start 74.659811,  808 locks, 0.86842084 locked, 0.033226013 waiting for locks
Cbc0030I Thread 10 used 80 times,  waiting to start 84.884915,  737 locks, 0.78346205 locked, 0.009509325 waiting for locks
Cbc0030I Thread 11 used 91 times,  waiting to start 85.283384,  830 locks, 0.90565276 locked, 0.0086860657 waiting for locks
Cbc0030I Main thread 3101.6642 waiting for threads,  2187 locks, 0.011380911 locked, 0.04695344 waiting for locks
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1.9022316e+08 (best possible 1.3308262e+08), took 4071705 iterations and 1075 nodes (3599.47 seconds)
Cbc0032I Strong branching done 5028 times (433431 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 55, 0 variables fixed on reduced cost
Cuts at root node changed objective from 7.59405e+07 to 1.31874e+08
Probing was tried 4116 times and created 17238 cuts of which 7332 were active after adding rounds of cuts (900.232 seconds)
Gomory was tried 4116 times and created 2756 cuts of which 0 were active after adding rounds of cuts (1771.419 seconds)
Knapsack was tried 650 times and created 0 cuts of which 0 were active after adding rounds of cuts (7.252 seconds)
Clique was tried 650 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.241 seconds)
MixedIntegerRounding2 was tried 4116 times and created 104298 cuts of which 0 were active after adding rounds of cuts (1880.645 seconds)
FlowCover was tried 650 times and created 299 cuts of which 0 were active after adding rounds of cuts (8.015 seconds)
TwoMirCuts was tried 650 times and created 715 cuts of which 0 were active after adding rounds of cuts (8.466 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Stopped on time limit

Objective value:                190223158.47968522
Lower bound:                    133082616.896
Gap:                            0.43
Enumerated nodes:               1075
Total iterations:               4071705
Time (CPU seconds):             36528.87
Time (Wallclock seconds):       3601.24

Option for printingOptions changed from normal to all
Total time (CPU seconds):       36529.06   (Wallclock seconds):       3601.44

