Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/cdmonsalvea/tesis/AI_OR_Workflow/.venv/lib/python3.10/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/e01d67cfc30142aaa4c090af4adca9dc-pulp.mps -sec 3600 -threads 12 -timeMode elapsed -branch -printingOptions all -solution /tmp/e01d67cfc30142aaa4c090af4adca9dc-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 104 COLUMNS
At line 528 RHS
At line 628 BOUNDS
At line 719 ENDATA
Problem MODEL has 99 rows, 90 columns and 324 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 3600
threads was changed from 0 to 12
Option for timeMode changed from cpu to elapsed
Continuous objective value is 9.08691e+06 - 0.00 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 90 columns (9 integer (9 of which binary)) and 323 elements
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.476236
Cbc0038I Pass   1: suminf.    0.28802 (1) obj. 1.04926e+07 iterations 25
Cbc0038I Solution found of 1.39136e+07
Cbc0038I Relaxing continuous gives 1.27061e+07
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 59 continuous
Cbc0038I Full problem 98 rows 90 columns, reduced to 19 rows 19 columns
Cbc0038I Mini branch and bound improved solution from 1.27061e+07 to 1.02138e+07 (0.01 seconds)
Cbc0038I Round again with cutoff of 1.01675e+07
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.40453 (2) obj. 1.01675e+07 iterations 14
Cbc0038I Pass   3: suminf.    0.05238 (1) obj. 1.01675e+07 iterations 41
Cbc0038I Pass   4: suminf.    0.05238 (1) obj. 1.01675e+07 iterations 0
Cbc0038I Pass   5: suminf.    0.05238 (1) obj. 1.01675e+07 iterations 0
Cbc0038I Pass   6: suminf.    0.05238 (1) obj. 1.01675e+07 iterations 0
Cbc0038I Pass   7: suminf.    0.05238 (1) obj. 1.01675e+07 iterations 0
Cbc0038I Pass   8: suminf.    0.05238 (1) obj. 1.01675e+07 iterations 3
Cbc0038I Pass   9: suminf.    0.41077 (1) obj. 1.01675e+07 iterations 24
Cbc0038I Pass  10: suminf.    1.39461 (3) obj. 1.01675e+07 iterations 28
Cbc0038I Pass  11: suminf.    1.39461 (3) obj. 1.01675e+07 iterations 0
Cbc0038I Pass  12: suminf.    1.39461 (3) obj. 1.01675e+07 iterations 0
Cbc0038I Pass  13: suminf.    1.39461 (3) obj. 1.01675e+07 iterations 0
Cbc0038I Pass  14: suminf.    1.39461 (3) obj. 1.01675e+07 iterations 0
Cbc0038I Pass  15: suminf.    1.39461 (3) obj. 1.01675e+07 iterations 0
Cbc0038I Pass  16: suminf.    1.39461 (3) obj. 1.01675e+07 iterations 0
Cbc0038I Pass  17: suminf.    1.39461 (3) obj. 1.01675e+07 iterations 0
Cbc0038I Pass  18: suminf.    1.39461 (3) obj. 1.01675e+07 iterations 0
Cbc0038I Pass  19: suminf.    1.17687 (3) obj. 1.01675e+07 iterations 14
Cbc0038I Pass  20: suminf.    0.58401 (2) obj. 1.01675e+07 iterations 3
Cbc0038I Pass  21: suminf.    0.40453 (2) obj. 1.01675e+07 iterations 55
Cbc0038I Pass  22: suminf.    0.05238 (1) obj. 1.01675e+07 iterations 31
Cbc0038I Pass  23: suminf.    0.05238 (1) obj. 1.01675e+07 iterations 0
Cbc0038I Pass  24: suminf.    1.40726 (3) obj. 1.01675e+07 iterations 18
Cbc0038I Pass  25: suminf.    1.40726 (3) obj. 1.01675e+07 iterations 0
Cbc0038I Pass  26: suminf.    1.40726 (3) obj. 1.01675e+07 iterations 0
Cbc0038I Pass  27: suminf.    1.40453 (4) obj. 1.01675e+07 iterations 9
Cbc0038I Pass  28: suminf.    1.38854 (3) obj. 1.01675e+07 iterations 10
Cbc0038I Pass  29: suminf.    1.40726 (3) obj. 1.01675e+07 iterations 15
Cbc0038I Pass  30: suminf.    1.40453 (4) obj. 1.01675e+07 iterations 10
Cbc0038I Pass  31: suminf.    1.38854 (3) obj. 1.01675e+07 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 40 continuous
Cbc0038I Full problem 98 rows 90 columns, reduced to 55 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of 1.02138e+07 - took 0.01 seconds
Cbc0012I Integer solution of 10213823 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 98 rows 90 columns, reduced to 11 rows 10 columns
Cbc0031I 11 added rows had average density of 40.454545
Cbc0013I At root node, 11 cuts changed objective from 9750098.4 to 10123754 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 334 row cuts average 51.5 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 204 row cuts average 40.6 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 20 row cuts average 59.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0030I Thread 0 used 0 times,  waiting to start 0.026422024, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 1 used 0 times,  waiting to start 0.024348021, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 2 used 0 times,  waiting to start 0.02213788, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 3 used 0 times,  waiting to start 0.020042896, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 4 used 0 times,  waiting to start 0.018069029, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 5 used 0 times,  waiting to start 0.016029119, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 6 used 0 times,  waiting to start 0.013641119, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 7 used 0 times,  waiting to start 0.011482, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 8 used 0 times,  waiting to start 0.0092158318, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 9 used 0 times,  waiting to start 0.0063049793, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 10 used 0 times,  waiting to start 0.0038530827, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Thread 11 used 0 times,  waiting to start 0.0014100075, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 6.1988831e-06 locked, 0 waiting for locks
Cbc0001I Search completed - best objective 10213823.35582513, took 1823 iterations and 0 nodes (0.22 seconds)
Cbc0032I Strong branching done 78 times (1274 iterations), fathomed 13 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Cuts at root node changed objective from 9.7501e+06 to 1.02728e+07
Probing was tried 1300 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.091 seconds)
Gomory was tried 1300 times and created 4342 cuts of which 0 were active after adding rounds of cuts (0.183 seconds)
Knapsack was tried 1300 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.296 seconds)
Clique was tried 1300 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
MixedIntegerRounding2 was tried 1300 times and created 2652 cuts of which 0 were active after adding rounds of cuts (0.127 seconds)
FlowCover was tried 1300 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.121 seconds)
TwoMirCuts was tried 1300 times and created 260 cuts of which 0 were active after adding rounds of cuts (0.053 seconds)
ZeroHalf was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                10213823.35582513
Enumerated nodes:               0
Total iterations:               1823
Time (CPU seconds):             0.19
Time (Wallclock seconds):       0.22

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.22

